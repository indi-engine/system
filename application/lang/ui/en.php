<?php
ini()->lang->migration = true;
action('activate', ['title' => 'Activate']);
action('author', ['title' => 'Author']);
action('backup', ['title' => 'Backup']);
action('cancel', ['title' => 'Cancel']);
action('chart', ['title' => 'Schedule']);
action('confirm', ['title' => 'Confirm']);
action('copy', ['title' => 'Copy']);
action('deactivate', ['title' => 'Deactivate']);
action('delete', ['title' => 'Delete']);
action('dict', ['title' => 'Available languages']);
action('down', ['title' => 'Move down']);
action('export', ['title' => 'Export']);
action('form', ['title' => 'Details']);
action('goto', ['title' => 'Go to']);
action('import', ['title' => 'Import']);
action('index', ['title' => 'List']);
action('js', ['title' => 'JS']);
action('login', ['title' => 'Authorization']);
action('notify', ['title' => 'Notify']);
action('pay', ['title' => 'Pay']);
action('php', ['title' => 'PHP']);
action('print', ['title' => 'Print']);
action('receipt', ['title' => 'Receipt']);
action('refund', ['title' => 'Refund']);
action('reset', ['title' => 'Reset']);
action('restart', ['title' => 'Restart']);
action('restore', ['title' => 'Restore']);
action('revert', ['title' => 'Restore']);
action('run', ['title' => 'Run']);
action('rwu', ['title' => '']);
action('save', ['title' => 'Save']);
action('start', ['title' => 'Start']);
action('toggle', ['title' => 'Toggle']);
action('up', ['title' => 'Move up']);
action('update', ['title' => 'Update']);
action('wordings', ['title' => 'Wordings']);
if (admin('pavel.perminov.23@gmail.com')) admin('pavel.perminov.23@gmail.com', ['title' => 'Pavel Perminov']);
if (admin('dev')) admin('dev', ['title' => 'Pavel Perminov']);
alteredField('admins', 'roleId', ['rename' => '']);
alteredField('admins', 'roleId', ['title' => 'Role']);
alteredField('alteredFields', 'elementId', ['rename' => '']);
alteredField('alteredFields', 'elementId', ['title' => 'Element']);
alteredField('alteredFields', 'fieldId', ['rename' => '']);
alteredField('alteredFields', 'fieldId', ['title' => 'Field']);
alteredField('alteredFields', 'jumpSectionActionId', ['rename' => '']);
alteredField('alteredFields', 'jumpSectionActionId', ['title' => 'Action']);
alteredField('alteredFields', 'jumpSectionId', ['rename' => '']);
alteredField('alteredFields', 'jumpSectionId', ['title' => 'Section']);
alteredField('alteredFields', 'sectionId', ['rename' => '']);
alteredField('alteredFields', 'sectionId', ['title' => 'Section']);
alteredField('columnTypes', 'elementId', ['rename' => '']);
alteredField('columnTypes', 'elementId', ['title' => 'Compatible with form elements']);
alteredField('consider', 'connector', ['rename' => '']);
alteredField('consider', 'connector', ['title' => 'Connector-field']);
alteredField('consider', 'consider', ['rename' => '']);
alteredField('consider', 'consider', ['title' => 'Depends on field']);
alteredField('consider', 'fieldId', ['rename' => '']);
alteredField('consider', 'fieldId', ['title' => 'Field']);
alteredField('consider', 'foreign', ['rename' => '']);
alteredField('consider', 'foreign', ['title' => 'Further field']);
alteredField('elementCfgField', 'columnTypeId', ['rename' => '']);
alteredField('elementCfgField', 'columnTypeId', ['title' => 'Type']);
alteredField('elementCfgField', 'elementId', ['rename' => '']);
alteredField('elementCfgField', 'elementId', ['title' => 'Element']);
alteredField('elementCfgField', 'entityId', ['rename' => '']);
alteredField('elementCfgField', 'entityId', ['title' => 'Entity']);
alteredField('elementCfgField', 'relation', ['rename' => '']);
alteredField('elementCfgField', 'relation', ['title' => 'Which entity keys']);
alteredField('entities', 'filesGroupBy', ['rename' => '']);
alteredField('entities', 'filesGroupBy', ['title' => 'Group files in subfolders named by value of field']);
alteredField('entities', 'spaceFields', ['rename' => '']);
alteredField('entities', 'spaceFields', ['title' => 'Fields list']);
alteredField('entities', 'titleFieldId', ['rename' => '']);
alteredField('entities', 'titleFieldId', ['title' => 'Title field']);
alteredField('fields', 'columnTypeId', ['rename' => '']);
alteredField('fields', 'columnTypeId', ['title' => 'Type']);
alteredField('fields', 'elementId', ['rename' => '']);
alteredField('fields', 'elementId', ['title' => 'Element']);
alteredField('fields', 'entityId', ['rename' => '']);
alteredField('fields', 'entityId', ['title' => 'Entity']);
alteredField('fields', 'entry', ['rename' => '']);
alteredField('fields', 'entry', ['title' => 'Instance']);
alteredField('fields', 'relation', ['rename' => '']);
alteredField('fields', 'relation', ['title' => 'Which entity keys']);
alteredField('fieldsAll', 'columnTypeId', ['rename' => '']);
alteredField('fieldsAll', 'columnTypeId', ['title' => 'Type']);
alteredField('fieldsAll', 'elementId', ['rename' => '']);
alteredField('fieldsAll', 'elementId', ['title' => 'Element']);
alteredField('fieldsAll', 'entityId', ['rename' => '']);
alteredField('fieldsAll', 'entityId', ['title' => 'Entity']);
alteredField('fieldsAll', 'relation', ['rename' => '']);
alteredField('fieldsAll', 'relation', ['title' => 'Which entity keys']);
alteredField('filter', 'fieldId', ['rename' => '']);
alteredField('filter', 'fieldId', ['title' => 'Field']);
alteredField('filter', 'further', ['rename' => '']);
alteredField('filter', 'further', ['title' => 'Further / JOINed field']);
alteredField('filter', 'sectionId', ['rename' => '']);
alteredField('filter', 'sectionId', ['title' => 'Section']);
alteredField('grid', 'colorField', ['rename' => '']);
alteredField('grid', 'colorField', ['title' => 'External source']);
alteredField('grid', 'fieldId', ['rename' => '']);
alteredField('grid', 'fieldId', ['title' => 'Field']);
alteredField('grid', 'further', ['rename' => '']);
alteredField('grid', 'further', ['title' => 'Further / JOINed field']);
alteredField('grid', 'gridId', ['rename' => '']);
alteredField('grid', 'gridId', ['title' => 'Parent column']);
alteredField('grid', 'jumpSectionActionId', ['rename' => '']);
alteredField('grid', 'jumpSectionActionId', ['title' => 'Action']);
alteredField('grid', 'jumpSectionId', ['rename' => '']);
alteredField('grid', 'jumpSectionId', ['title' => 'Section']);
alteredField('grid', 'sectionId', ['rename' => '']);
alteredField('grid', 'sectionId', ['title' => 'Section']);
alteredField('inQtySum', 'sourceField', ['rename' => '']);
alteredField('inQtySum', 'sourceField', ['title' => 'Source field to append/deduct to/from target field']);
alteredField('inQtySum', 'sourceTarget', ['rename' => '']);
alteredField('inQtySum', 'sourceTarget', ['title' => 'Foreign-key field pointing to target entry']);
alteredField('inQtySum', 'targetField', ['rename' => '']);
alteredField('inQtySum', 'targetField', ['title' => 'Target field to update value in']);
alteredField('noticeGetters', 'noticeId', ['rename' => '']);
alteredField('noticeGetters', 'noticeId', ['title' => 'Notification']);
alteredField('noticeGetters', 'roleId', ['rename' => '']);
alteredField('noticeGetters', 'roleId', ['title' => 'Recipients role']);
alteredField('notices', 'entityId', ['rename' => '']);
alteredField('notices', 'entityId', ['title' => 'Entity']);
alteredField('notices', 'roleId', ['rename' => '']);
alteredField('notices', 'roleId', ['title' => 'Recipients']);
alteredField('notices', 'sectionId', ['rename' => '']);
alteredField('notices', 'sectionId', ['title' => 'Menu items']);
alteredField('params', 'cfgField', ['rename' => '']);
alteredField('params', 'cfgField', ['title' => 'Param']);
alteredField('params', 'entityId', ['rename' => '']);
alteredField('params', 'entityId', ['title' => 'Entity']);
alteredField('params', 'fieldId', ['rename' => '']);
alteredField('params', 'fieldId', ['title' => 'Field']);
alteredField('paramsAll', 'cfgField', ['rename' => '']);
alteredField('paramsAll', 'cfgField', ['title' => 'Param']);
alteredField('paramsAll', 'entityId', ['rename' => '']);
alteredField('paramsAll', 'entityId', ['title' => 'Entity']);
alteredField('paramsAll', 'fieldId', ['rename' => '']);
alteredField('paramsAll', 'fieldId', ['title' => 'Field']);
alteredField('queueItem', 'result', ['rename' => '']);
alteredField('queueItem', 'result', ['title' => 'Result']);
alteredField('resize', 'fieldId', ['rename' => '']);
alteredField('resize', 'fieldId', ['title' => 'Field']);
alteredField('role', 'entityId', ['rename' => '']);
alteredField('role', 'entityId', ['title' => 'Entity of users']);
alteredField('sectionActions', 'actionId', ['rename' => '']);
alteredField('sectionActions', 'actionId', ['title' => 'Action']);
alteredField('sectionActions', 'sectionId', ['rename' => '']);
alteredField('sectionActions', 'sectionId', ['title' => 'Section']);
alteredField('sections', 'colorField', ['rename' => '']);
alteredField('sections', 'colorField', ['title' => 'Field']);
alteredField('sections', 'colorFurther', ['rename' => '']);
alteredField('sections', 'colorFurther', ['title' => 'Further field']);
alteredField('sections', 'defaultSortField', ['rename' => '']);
alteredField('sections', 'defaultSortField', ['title' => 'Sort by']);
alteredField('sections', 'entityId', ['rename' => '']);
alteredField('sections', 'entityId', ['title' => 'Entity']);
alteredField('sections', 'groupBy', ['rename' => '']);
alteredField('sections', 'groupBy', ['title' => 'Group by']);
alteredField('sections', 'parentSectionConnector', ['rename' => '']);
alteredField('sections', 'parentSectionConnector', ['title' => 'Link to a parent section by field']);
alteredField('sections', 'sectionId', ['rename' => '']);
alteredField('sections', 'sectionId', ['title' => 'Parent section']);
alteredField('sections', 'tileField', ['rename' => '']);
alteredField('sections', 'tileField', ['title' => 'Fileupload-field']);
alteredField('sections', 'tileThumb', ['rename' => '']);
alteredField('sections', 'tileThumb', ['title' => 'Resized copy']);
alteredField('sqlIndexes', 'columns', ['rename' => '']);
alteredField('sqlIndexes', 'columns', ['title' => 'Covered fields']);
alteredField('sqlIndexes', 'entityId', ['rename' => '']);
alteredField('sqlIndexes', 'entityId', ['title' => 'Entity']);
alteredField('sqlIndexesAll', 'columns', ['rename' => '']);
alteredField('sqlIndexesAll', 'columns', ['title' => 'Covered fields']);
alteredField('sqlIndexesAll', 'entityId', ['rename' => '']);
alteredField('sqlIndexesAll', 'entityId', ['title' => 'Entity']);
cfgField('element', 'calendar', 'displayFormat', ['title' => 'Display format']);
cfgField('element', 'calendar', 'displayFormat', ['tooltip' => '']);
cfgField('element', 'calendar', 'when', ['title' => 'When']);
cfgField('element', 'calendar', 'when', ['tooltip' => '']);
cfgField('element', 'combo', 'colorField', ['title' => 'Color field']);
cfgField('element', 'combo', 'colorField', ['tooltip' => '']);
cfgField('element', 'combo', 'filterOwner', ['title' => 'For owners - only their options']);
cfgField('element', 'combo', 'filterOwner', ['tooltip' => '']);
cfgField('element', 'combo', 'groupBy', ['title' => 'Group options by value of column']);
cfgField('element', 'combo', 'groupBy', ['tooltip' => '']);
cfgField('element', 'combo', 'noLookup', ['title' => 'Disable lookup']);
cfgField('element', 'combo', 'noLookup', ['tooltip' => '']);
cfgField('element', 'combo', 'optionAttrs', ['title' => 'Additionally pass fields (as html attributes)']);
cfgField('element', 'combo', 'optionAttrs', ['tooltip' => '']);
cfgField('element', 'combo', 'optionHeight', ['title' => 'Option height']);
cfgField('element', 'combo', 'optionHeight', ['tooltip' => '']);
cfgField('element', 'combo', 'optionTemplate', ['title' => 'Option content template']);
cfgField('element', 'combo', 'optionTemplate', ['tooltip' => '']);
cfgField('element', 'combo', 'placeholder', ['title' => 'Placeholder']);
cfgField('element', 'combo', 'placeholder', ['tooltip' => '']);
cfgField('element', 'combo', 'substr', ['title' => 'Option max length']);
cfgField('element', 'combo', 'substr', ['tooltip' => '']);
cfgField('element', 'combo', 'titleColumn', ['title' => 'Title-field']);
cfgField('element', 'combo', 'titleColumn', ['tooltip' => '']);
cfgField('element', 'combo', 'whichEntities', ['title' => 'Which entities']);
cfgField('element', 'combo', 'whichEntities', ['tooltip' => '']);
cfgField('element', 'combo', 'wide', ['title' => 'Full width']);
cfgField('element', 'combo', 'wide', ['tooltip' => '']);
cfgField('element', 'datetime', 'displayDateFormat', ['title' => 'Date display format']);
cfgField('element', 'datetime', 'displayDateFormat', ['tooltip' => '']);
cfgField('element', 'datetime', 'displayTimeFormat', ['title' => 'Time display format']);
cfgField('element', 'datetime', 'displayTimeFormat', ['tooltip' => '']);
cfgField('element', 'datetime', 'when', ['title' => 'When']);
cfgField('element', 'datetime', 'when', ['tooltip' => '']);
cfgField('element', 'decimal143', 'colorBreakLevel', ['title' => 'Color split level']);
cfgField('element', 'decimal143', 'colorBreakLevel', ['tooltip' => '']);
cfgField('element', 'html', 'bodyClass', ['title' => 'Css class for body']);
cfgField('element', 'html', 'bodyClass', ['tooltip' => '']);
cfgField('element', 'html', 'contentsCss', ['title' => 'Path to css-file for pickup by editor']);
cfgField('element', 'html', 'contentsCss', ['tooltip' => '']);
cfgField('element', 'html', 'contentsJs', ['title' => 'Path to js-file for pickup by editor']);
cfgField('element', 'html', 'contentsJs', ['tooltip' => '']);
cfgField('element', 'html', 'height', ['title' => 'Height in pixels']);
cfgField('element', 'html', 'height', ['tooltip' => '']);
cfgField('element', 'html', 'script', ['title' => 'Script']);
cfgField('element', 'html', 'script', ['tooltip' => '']);
cfgField('element', 'html', 'sourceStripper', ['title' => 'Source code processing script']);
cfgField('element', 'html', 'sourceStripper', ['tooltip' => '']);
cfgField('element', 'html', 'style', ['title' => 'Styles']);
cfgField('element', 'html', 'style', ['tooltip' => '']);
cfgField('element', 'html', 'wide', ['title' => 'Full width']);
cfgField('element', 'html', 'wide', ['tooltip' => '']);
cfgField('element', 'html', 'width', ['title' => 'Width in pixels']);
cfgField('element', 'html', 'width', ['tooltip' => '']);
cfgField('element', 'icon', 'dir', ['title' => 'Directory']);
cfgField('element', 'icon', 'dir', ['tooltip' => '']);
cfgField('element', 'multicheck', 'cols', ['title' => 'Number of columns']);
cfgField('element', 'multicheck', 'cols', ['tooltip' => '']);
cfgField('element', 'multicheck', 'titleColumn', ['title' => 'Title-field']);
cfgField('element', 'multicheck', 'titleColumn', ['tooltip' => '']);
cfgField('element', 'number', 'colorBreakLevel', ['title' => 'Color split level']);
cfgField('element', 'number', 'colorBreakLevel', ['tooltip' => '']);
cfgField('element', 'number', 'maxlength', ['title' => 'Maximum length in characters']);
cfgField('element', 'number', 'maxlength', ['tooltip' => '']);
cfgField('element', 'number', 'measure', ['title' => 'Unit of measurement']);
cfgField('element', 'number', 'measure', ['tooltip' => '']);
cfgField('element', 'price', 'colorBreakLevel', ['title' => 'Color split level']);
cfgField('element', 'price', 'colorBreakLevel', ['tooltip' => '']);
cfgField('element', 'price', 'measure', ['title' => 'Unit of measurement']);
cfgField('element', 'price', 'measure', ['tooltip' => '']);
cfgField('element', 'radio', 'titleColumn', ['title' => 'Title-field']);
cfgField('element', 'radio', 'titleColumn', ['tooltip' => '']);
cfgField('element', 'string', 'allowedTags', ['title' => 'Allowed tags']);
cfgField('element', 'string', 'allowedTags', ['tooltip' => '']);
cfgField('element', 'string', 'inputMask', ['title' => 'Input mask']);
cfgField('element', 'string', 'inputMask', ['tooltip' => '']);
cfgField('element', 'string', 'maxlength', ['title' => 'Maximum length in characters']);
cfgField('element', 'string', 'maxlength', ['tooltip' => '']);
cfgField('element', 'string', 'placeholder', ['title' => 'Placeholder']);
cfgField('element', 'string', 'placeholder', ['tooltip' => '']);
cfgField('element', 'string', 'refreshL10nsOnUpdate', ['title' => 'Update translations for other languages']);
cfgField('element', 'string', 'refreshL10nsOnUpdate', ['tooltip' => '']);
cfgField('element', 'string', 'shade', ['title' => 'Shading']);
cfgField('element', 'string', 'shade', ['tooltip' => '']);
cfgField('element', 'string', 'vtype', ['title' => 'Validation type']);
cfgField('element', 'string', 'vtype', ['tooltip' => '']);
cfgField('element', 'string', 'wide', ['title' => 'Full width']);
cfgField('element', 'string', 'wide', ['tooltip' => '']);
cfgField('element', 'textarea', 'allowedTags', ['title' => 'Allowed tags']);
cfgField('element', 'textarea', 'allowedTags', ['tooltip' => '']);
cfgField('element', 'textarea', 'refreshL10nsOnUpdate', ['title' => 'Update translations for other languages']);
cfgField('element', 'textarea', 'refreshL10nsOnUpdate', ['tooltip' => '']);
cfgField('element', 'textarea', 'shade', ['title' => 'Shading']);
cfgField('element', 'textarea', 'shade', ['tooltip' => '']);
cfgField('element', 'textarea', 'wide', ['title' => 'Full width']);
cfgField('element', 'textarea', 'wide', ['tooltip' => '']);
cfgField('element', 'time', 'displayFormat', ['title' => 'Display format']);
cfgField('element', 'time', 'displayFormat', ['tooltip' => '']);
cfgField('element', 'upload', 'allowTypes', ['title' => 'Allowed types']);
cfgField('element', 'upload', 'allowTypes', ['tooltip' => "Specify a list of extensions and / or groups of extensions, separated by commas: \n- image: gif, png, jpeg, jpg \n- office: doc, pdf, docx, xls, xlsx, txt, odt, ppt, pptx \n- draw: psd, ai, cdr \n- archive: zip, rar, 7z, gz, tar"]);
cfgField('element', 'upload', 'appendFieldTitle', ['title' => 'Include field name in file name when loading']);
cfgField('element', 'upload', 'appendFieldTitle', ['tooltip' => '']);
cfgField('element', 'upload', 'maxSize', ['title' => 'Maximum size']);
cfgField('element', 'upload', 'maxSize', ['tooltip' => '']);
cfgField('element', 'upload', 'minSize', ['title' => 'Minimum size']);
cfgField('element', 'upload', 'minSize', ['tooltip' => '']);
cfgField('element', 'upload', 'postfix', ['title' => 'Postfix to file name on download']);
cfgField('element', 'upload', 'postfix', ['tooltip' => '']);
cfgField('element', 'upload', 'prependEntityTitle', ['title' => 'Include the entity name in the file name when downloading']);
cfgField('element', 'upload', 'prependEntityTitle', ['tooltip' => '']);
cfgField('element', 'upload', 'rowTitle', ['title' => 'Include entry title in file name on download']);
cfgField('element', 'upload', 'rowTitle', ['tooltip' => '']);
consider('alteredField', 'fieldId', 'sectionId', ['title' => 'Section']);
consider('alteredField', 'jumpSectionActionId', 'jumpSectionId', ['title' => 'Section']);
consider('alteredField', 'rename', 'title', ['title' => 'Auto title']);
consider('alteredField', 'title', 'fieldId', ['title' => 'Field']);
consider('changeLog', 'adminId', 'roleId', ['title' => 'Role']);
consider('changeLog', 'entryId', 'entityId', ['title' => 'Entity']);
consider('changeLog', 'fieldId', 'entityId', ['title' => 'Entity']);
consider('consider', 'connector', 'fieldId', ['title' => 'Field']);
consider('consider', 'consider', 'fieldId', ['title' => 'Field']);
consider('consider', 'foreign', 'consider', ['title' => 'Depends on field']);
consider('consider', 'title', 'consider', ['title' => 'Depends on field']);
consider('field', 'columnTypeId', 'elementId', ['title' => 'Element']);
consider('field', 'elementId', 'storeRelationAbility', ['title' => 'Store keys']);
consider('field', 'entry', 'entityId', ['title' => 'Entity']);
consider('filter', 'fieldId', 'sectionId', ['title' => 'Section']);
consider('filter', 'further', 'fieldId', ['title' => 'Field']);
consider('filter', 'rename', 'title', ['title' => 'Auto title']);
consider('filter', 'title', 'fieldId', ['title' => 'Field']);
consider('grid', 'colorEntry', 'colorField', ['title' => 'External source']);
consider('grid', 'fieldId', 'sectionId', ['title' => 'Section']);
consider('grid', 'formMoreGridIds', 'sectionId', ['title' => 'Section']);
consider('grid', 'formNotHideFieldIds', 'sectionId', ['title' => 'Section']);
consider('grid', 'further', 'fieldId', ['title' => 'Field']);
consider('grid', 'jumpSectionActionId', 'jumpSectionId', ['title' => 'Section']);
consider('grid', 'rename', 'title', ['title' => 'Auto title']);
consider('grid', 'title', 'fieldId', ['title' => 'Field']);
consider('grid', 'tooltip', 'fieldId', ['title' => 'Field']);
consider('inQtySum', 'sourceField', 'sourceEntity', ['title' => 'Source entity']);
consider('inQtySum', 'sourceTarget', 'sourceEntity', ['title' => 'Source entity']);
consider('inQtySum', 'targetField', 'sourceTarget', ['title' => 'Foreign-key field pointing to target entry']);
consider('notice', 'sectionId', 'entityId', ['title' => 'Entity']);
consider('noticeGetter', 'title', 'roleId', ['title' => 'Recipients role']);
consider('param', 'cfgField', 'fieldId', ['title' => 'Field']);
consider('param', 'fieldId', 'entityId', ['title' => 'Entity']);
consider('param', 'title', 'cfgField', ['title' => 'Param']);
consider('realtime', 'adminId', 'roleId', ['title' => 'Role']);
consider('realtime', 'entries', 'sectionId', ['title' => 'Section']);
consider('realtime', 'fields', 'entityId', ['title' => 'Entity']);
consider('realtime', 'title', 'type', ['title' => 'Type']);
consider('section', 'colorField', 'entityId', ['title' => 'Entity']);
consider('section', 'colorFurther', 'colorField', ['title' => 'Field']);
consider('section', 'defaultSortField', 'entityId', ['title' => 'Entity']);
consider('section', 'groupBy', 'entityId', ['title' => 'Entity']);
consider('section', 'parentSectionConnector', 'entityId', ['title' => 'Entity']);
consider('section', 'tileField', 'entityId', ['title' => 'Entity']);
consider('section', 'tileThumb', 'tileField', ['title' => 'Fileupload-field']);
consider('section2action', 'filterOwnerRoleIds', 'roleIds', ['title' => 'Roles']);
consider('section2action', 'rename', 'title', ['title' => 'Auto title']);
consider('section2action', 'title', 'actionId', ['title' => 'Action']);
consider('sqlIndex', 'columns', 'entityId', ['title' => 'Entity']);
element('calendar', ['title' => 'Date picker']);
element('check', ['title' => 'Checkbox']);
element('color', ['title' => 'Color picker']);
element('combo', ['title' => 'Combo']);
element('datetime', ['title' => 'Datetime picker']);
element('decimal143', ['title' => 'Number .000']);
element('hidden', ['title' => 'Hidden field']);
element('html', ['title' => 'HTML editor']);
element('icon', ['title' => 'Icon']);
element('move', ['title' => 'Order']);
element('multicheck', ['title' => 'Checkboxes']);
element('number', ['title' => 'Number']);
element('price', ['title' => 'Price']);
element('radio', ['title' => 'Radio buttons']);
element('span', ['title' => 'Field group']);
element('string', ['title' => 'String']);
element('textarea', ['title' => 'Text']);
element('time', ['title' => 'Time']);
element('upload', ['title' => 'File-upload panel']);
entity('action', ['title' => 'Action']);
entity('admin', ['title' => 'Administrator']);
entity('alteredField', ['title' => 'Field adjusted for the section']);
entity('changeLog', ['title' => 'Changelog entry']);
entity('columnType', ['title' => 'MySQL column type']);
entity('consider', ['title' => 'Field dependency']);
entity('element', ['title' => 'Form element']);
entity('entity', ['title' => 'Entity']);
entity('enumset', ['title' => 'Enumerated value']);
entity('field', ['title' => 'Field']);
entity('filter', ['title' => 'Filter']);
entity('grid', ['title' => 'Grid column']);
entity('inQtySum', ['title' => 'Count in Qty/Sum']);
entity('lang', ['title' => 'Language']);
entity('month', ['title' => 'Month']);
entity('notice', ['title' => 'Notification']);
entity('noticeGetter', ['title' => 'Notification recepients settings by role']);
entity('param', ['title' => 'Param']);
entity('queueChunk', ['title' => 'Queue chunk']);
entity('queueItem', ['title' => 'Queue item']);
entity('queueTask', ['title' => 'Queue task']);
entity('realtime', ['title' => 'Realtime']);
entity('resize', ['title' => 'Resized copy']);
entity('role', ['title' => 'Role']);
entity('section', ['title' => 'Section']);
entity('section2action', ['title' => 'Action in the section']);
entity('sqlIndex', ['title' => 'MySQL Index']);
entity('year', ['title' => 'Year']);
enumset('action', 'fraction', 'custom', ['title' => 'Custom']);
enumset('action', 'fraction', 'public', ['title' => 'Public']);
enumset('action', 'fraction', 'system', ['title' => 'System']);
enumset('action', 'hasView', 'n', ['title' => 'No']);
enumset('action', 'hasView', 'y', ['title' => 'Yes']);
enumset('action', 'multiSelect', '0', ['title' => 'No, only single entry must be selected']);
enumset('action', 'multiSelect', '1', ['title' => 'Yes, multiple entries can be selected']);
enumset('action', 'selectionRequired', 'n', ['title' => 'No']);
enumset('action', 'selectionRequired', 'y', ['title' => 'Yes']);
enumset('action', 'toggle', 'h', ['title' => 'Hidden']);
enumset('action', 'toggle', 'n', ['title' => 'Turned off']);
enumset('action', 'toggle', 'y', ['title' => 'Turned on']);
enumset('admin', 'demo', 'n', ['title' => 'No']);
enumset('admin', 'demo', 'y', ['title' => 'Yes']);
enumset('admin', 'toggle', 'n', ['title' => 'Turned off']);
enumset('admin', 'toggle', 'y', ['title' => 'Turned on']);
enumset('admin', 'uiedit', 'n', ['title' => 'Turned off']);
enumset('admin', 'uiedit', 'y', ['title' => 'Turned on']);
enumset('alteredField', 'accessRoles', 'all', ['title' => 'All']);
enumset('alteredField', 'accessRoles', 'none', ['title' => 'None']);
enumset('alteredField', 'mode', 'hidden', ['title' => 'Hidden']);
enumset('alteredField', 'mode', 'inherit', ['title' => 'Inherit']);
enumset('alteredField', 'mode', 'readonly', ['title' => 'Readonly']);
enumset('alteredField', 'mode', 'regular', ['title' => 'Regular']);
enumset('alteredField', 'mode', 'required', ['title' => 'Required']);
enumset('columnType', 'canStoreRelation', 'n', ['title' => 'No']);
enumset('columnType', 'canStoreRelation', 'y', ['title' => 'Yes']);
enumset('consider', 'required', 'n', ['title' => 'No']);
enumset('consider', 'required', 'y', ['title' => 'Yes']);
enumset('element', 'storeRelationAbility', 'many', ['title' => 'With a set of key values']);
enumset('element', 'storeRelationAbility', 'none', ['title' => 'No']);
enumset('element', 'storeRelationAbility', 'one', ['title' => 'With only one key value']);
enumset('entity', 'changeLogToggle', 'all', ['title' => 'Yes']);
enumset('entity', 'changeLogToggle', 'none', ['title' => 'No']);
enumset('entity', 'fraction', 'custom', ['title' => 'Custom']);
enumset('entity', 'fraction', 'public', ['title' => 'Public']);
enumset('entity', 'fraction', 'system', ['title' => 'System']);
enumset('entity', 'spaceScheme', 'date', ['title' => 'DATE']);
enumset('entity', 'spaceScheme', 'date-dayQty', ['title' => 'DATE, dayQty']);
enumset('entity', 'spaceScheme', 'date-time', ['title' => 'DATE, TIME']);
enumset('entity', 'spaceScheme', 'date-time-minuteQty', ['title' => 'DATE, TIME, minuteQty']);
enumset('entity', 'spaceScheme', 'date-timeId', ['title' => 'DATE, timeId']);
enumset('entity', 'spaceScheme', 'date-timeId-minuteQty', ['title' => 'DATE, timeId, minuteQty']);
enumset('entity', 'spaceScheme', 'date-timespan', ['title' => 'DATE, hh:mm-hh:mm']);
enumset('entity', 'spaceScheme', 'datetime', ['title' => 'DATETIME']);
enumset('entity', 'spaceScheme', 'datetime-minuteQty', ['title' => 'DATETIME, minuteQty']);
enumset('entity', 'spaceScheme', 'none', ['title' => 'No']);
enumset('field', 'l10n', 'n', ['title' => 'Turned off']);
enumset('field', 'l10n', 'qn', ['title' => 'Queued for turning off']);
enumset('field', 'l10n', 'qy', ['title' => 'Queued for turning on']);
enumset('field', 'l10n', 'y', ['title' => 'Turned on']);
enumset('field', 'mode', 'hidden', ['title' => 'Hidden']);
enumset('field', 'mode', 'readonly', ['title' => 'Readonly']);
enumset('field', 'mode', 'regular', ['title' => 'Regular']);
enumset('field', 'mode', 'required', ['title' => 'Required']);
enumset('field', 'storeRelationAbility', 'many', ['title' => 'Yes, multiple keys']);
enumset('field', 'storeRelationAbility', 'none', ['title' => 'No']);
enumset('field', 'storeRelationAbility', 'one', ['title' => 'Yes, but only one key']);
enumset('filter', 'accessRoles', 'all', ['title' => 'All']);
enumset('filter', 'accessRoles', 'none', ['title' => 'None']);
enumset('filter', 'allowZeroResult', '0', ['title' => 'No']);
enumset('filter', 'allowZeroResult', '1', ['title' => 'Yes']);
enumset('filter', 'denyClear', '0', ['title' => 'No']);
enumset('filter', 'denyClear', '1', ['title' => 'Yes']);
enumset('filter', 'ignoreTemplate', '0', ['title' => 'No']);
enumset('filter', 'ignoreTemplate', '1', ['title' => 'Yes']);
enumset('filter', 'multiSelect', '0', ['title' => 'No']);
enumset('filter', 'multiSelect', '1', ['title' => 'Yes']);
enumset('filter', 'toggle', 'n', ['title' => 'Turned off']);
enumset('filter', 'toggle', 'y', ['title' => 'Turned on']);
enumset('grid', 'accessRoles', 'all', ['title' => 'All']);
enumset('grid', 'accessRoles', 'none', ['title' => 'None']);
enumset('grid', 'colorBreak', 'n', ['title' => 'Turned off']);
enumset('grid', 'colorBreak', 'y', ['title' => 'Turned on']);
enumset('grid', 'editor', '0', ['title' => 'Turned off']);
enumset('grid', 'editor', '1', ['title' => 'Turned on']);
enumset('grid', 'editor', 'enumNoCycle', ['title' => 'Turned off, including enum-values cycling-by-clicking']);
enumset('grid', 'formToggle', 'n', ['title' => 'No']);
enumset('grid', 'formToggle', 'y', ['title' => 'Yes']);
enumset('grid', 'group', 'locked', ['title' => 'Locked']);
enumset('grid', 'group', 'normal', ['title' => 'Normal']);
enumset('grid', 'rowReqIfAffected', 'n', ['title' => 'No']);
enumset('grid', 'rowReqIfAffected', 'y', ['title' => 'Yes']);
enumset('grid', 'sizing', 'auto', ['title' => 'Auto']);
enumset('grid', 'sizing', 'noClip', ['title' => 'Not less than cell content']);
enumset('grid', 'skipExcel', 'n', ['title' => 'No']);
enumset('grid', 'skipExcel', 'y', ['title' => 'Yes']);
enumset('grid', 'summaryType', 'average', ['title' => 'Average']);
enumset('grid', 'summaryType', 'max', ['title' => 'Maximum']);
enumset('grid', 'summaryType', 'min', ['title' => 'Minimum']);
enumset('grid', 'summaryType', 'none', ['title' => 'Empty']);
enumset('grid', 'summaryType', 'sum', ['title' => 'Summary']);
enumset('grid', 'summaryType', 'text', ['title' => 'Text']);
enumset('grid', 'toggle', 'e', ['title' => 'Hidden, but shown in row expander']);
enumset('grid', 'toggle', 'h', ['title' => 'Hidden']);
enumset('grid', 'toggle', 'n', ['title' => 'Turned off']);
enumset('grid', 'toggle', 'y', ['title' => 'Turned on']);
enumset('grid', 'togglePlan', 'n', ['title' => 'Turned off']);
enumset('grid', 'togglePlan', 'y', ['title' => 'Turned on']);
enumset('grid', 'toggleTile', 'bottomBoxes', ['title' => 'Box under image']);
enumset('grid', 'toggleTile', 'n', ['title' => 'Turned off']);
enumset('grid', 'toggleTile', 'rightBoxes', ['title' => 'Box at the right']);
enumset('grid', 'toggleTile', 'y', ['title' => 'Text under image']);
enumset('inQtySum', 'toggle', 'n', ['title' => 'Turned off']);
enumset('inQtySum', 'toggle', 'y', ['title' => 'Turned on']);
enumset('inQtySum', 'type', 'qty', ['title' => 'Qty']);
enumset('inQtySum', 'type', 'sum', ['title' => 'Sum']);
enumset('lang', 'adminCustomConst', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminCustomConst', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminCustomConst', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminCustomConst', 'y', ['title' => 'Turned on']);
enumset('lang', 'adminCustomData', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminCustomData', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminCustomData', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminCustomData', 'y', ['title' => 'Turned on']);
enumset('lang', 'adminCustomTmpl', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminCustomTmpl', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminCustomTmpl', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminCustomTmpl', 'y', ['title' => 'Turned on']);
enumset('lang', 'adminCustomUi', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminCustomUi', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminCustomUi', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminCustomUi', 'y', ['title' => 'Turned on']);
enumset('lang', 'adminSystemConst', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminSystemConst', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminSystemConst', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminSystemConst', 'y', ['title' => 'Turned on']);
enumset('lang', 'adminSystemUi', 'n', ['title' => 'Turned off']);
enumset('lang', 'adminSystemUi', 'qn', ['title' => 'Queued for turning off']);
enumset('lang', 'adminSystemUi', 'qy', ['title' => 'Queued for turning on']);
enumset('lang', 'adminSystemUi', 'y', ['title' => 'Turned on']);
enumset('lang', 'state', 'noth', ['title' => 'Nothing']);
enumset('lang', 'state', 'smth', ['title' => 'Least']);
enumset('lang', 'toggle', 'n', ['title' => 'Turned off']);
enumset('lang', 'toggle', 'y', ['title' => 'Turned on']);
enumset('month', 'month', '01', ['title' => 'January']);
enumset('month', 'month', '02', ['title' => 'February']);
enumset('month', 'month', '03', ['title' => 'March']);
enumset('month', 'month', '04', ['title' => 'April']);
enumset('month', 'month', '05', ['title' => 'May']);
enumset('month', 'month', '06', ['title' => 'June']);
enumset('month', 'month', '07', ['title' => 'July']);
enumset('month', 'month', '08', ['title' => 'August']);
enumset('month', 'month', '09', ['title' => 'September']);
enumset('month', 'month', '10', ['title' => 'October']);
enumset('month', 'month', '11', ['title' => 'November']);
enumset('month', 'month', '12', ['title' => 'December']);
enumset('notice', 'fraction', 'custom', ['title' => 'Custom']);
enumset('notice', 'fraction', 'system', ['title' => 'System']);
enumset('notice', 'qtyDiffRelyOn', 'event', ['title' => 'Same for all recipients']);
enumset('notice', 'qtyDiffRelyOn', 'getter', ['title' => 'Not the same, depends on the recipient']);
enumset('notice', 'toggle', 'n', ['title' => 'Turned off']);
enumset('notice', 'toggle', 'y', ['title' => 'Turned on']);
enumset('notice', 'tplFor', 'dec', ['title' => 'Decrease']);
enumset('notice', 'tplFor', 'evt', ['title' => 'Change']);
enumset('notice', 'tplFor', 'inc', ['title' => 'Increase']);
enumset('noticeGetter', 'criteriaRelyOn', 'event', ['title' => 'Shared for all recipients']);
enumset('noticeGetter', 'criteriaRelyOn', 'getter', ['title' => 'Separate, depends on recipient']);
enumset('noticeGetter', 'email', 'n', ['title' => 'No']);
enumset('noticeGetter', 'email', 'y', ['title' => 'Yes']);
enumset('noticeGetter', 'sms', 'n', ['title' => 'No']);
enumset('noticeGetter', 'sms', 'y', ['title' => 'Yes']);
enumset('noticeGetter', 'toggle', 'n', ['title' => 'Turned off']);
enumset('noticeGetter', 'toggle', 'y', ['title' => 'Turned on']);
enumset('noticeGetter', 'vk', 'n', ['title' => 'No']);
enumset('noticeGetter', 'vk', 'y', ['title' => 'Yes']);
enumset('queueChunk', 'applyState', 'finished', ['title' => 'Completed']);
enumset('queueChunk', 'applyState', 'progress', ['title' => 'Progress']);
enumset('queueChunk', 'applyState', 'waiting', ['title' => 'Waiting']);
enumset('queueChunk', 'countState', 'finished', ['title' => 'Completed']);
enumset('queueChunk', 'countState', 'progress', ['title' => 'Progress']);
enumset('queueChunk', 'countState', 'waiting', ['title' => 'Waiting']);
enumset('queueChunk', 'fraction', 'adminCustomData', ['title' => 'AdminCustomData']);
enumset('queueChunk', 'fraction', 'adminCustomUi', ['title' => 'AdminCustomUi']);
enumset('queueChunk', 'fraction', 'adminSystemUi', ['title' => 'AdminSystemUi']);
enumset('queueChunk', 'fraction', 'none', ['title' => 'Not specified']);
enumset('queueChunk', 'itemsState', 'finished', ['title' => 'Completed']);
enumset('queueChunk', 'itemsState', 'progress', ['title' => 'Progress']);
enumset('queueChunk', 'itemsState', 'waiting', ['title' => 'Waiting']);
enumset('queueChunk', 'queueState', 'finished', ['title' => 'Completed']);
enumset('queueChunk', 'queueState', 'noneed', ['title' => 'Not required']);
enumset('queueChunk', 'queueState', 'progress', ['title' => 'Progress']);
enumset('queueChunk', 'queueState', 'waiting', ['title' => 'Waiting']);
enumset('queueItem', 'stage', 'apply', ['title' => 'Applied']);
enumset('queueItem', 'stage', 'items', ['title' => 'Added']);
enumset('queueItem', 'stage', 'queue', ['title' => 'Processed']);
enumset('queueTask', 'applyState', 'finished', ['title' => 'Completed']);
enumset('queueTask', 'applyState', 'progress', ['title' => 'Progress']);
enumset('queueTask', 'applyState', 'waiting', ['title' => 'Waiting']);
enumset('queueTask', 'countState', 'finished', ['title' => 'Completed']);
enumset('queueTask', 'countState', 'progress', ['title' => 'Progress']);
enumset('queueTask', 'countState', 'waiting', ['title' => 'Waiting']);
enumset('queueTask', 'itemsState', 'finished', ['title' => 'Completed']);
enumset('queueTask', 'itemsState', 'progress', ['title' => 'Progress']);
enumset('queueTask', 'itemsState', 'waiting', ['title' => 'Waiting']);
enumset('queueTask', 'queueState', 'error', ['title' => 'Error']);
enumset('queueTask', 'queueState', 'finished', ['title' => 'Completed']);
enumset('queueTask', 'queueState', 'noneed', ['title' => 'Not required']);
enumset('queueTask', 'queueState', 'progress', ['title' => 'Progress']);
enumset('queueTask', 'queueState', 'waiting', ['title' => 'Waiting']);
enumset('queueTask', 'stage', 'apply', ['title' => 'Application of results']);
enumset('queueTask', 'stage', 'count', ['title' => 'Scope assessment']);
enumset('queueTask', 'stage', 'items', ['title' => 'Queue creation']);
enumset('queueTask', 'stage', 'queue', ['title' => 'Queue processing']);
enumset('queueTask', 'state', 'finished', ['title' => 'Completed']);
enumset('queueTask', 'state', 'progress', ['title' => 'Progress']);
enumset('queueTask', 'state', 'waiting', ['title' => 'Waiting']);
enumset('realtime', 'mode', 'none', ['title' => 'Not applicable']);
enumset('realtime', 'mode', 'row', ['title' => 'One entry']);
enumset('realtime', 'mode', 'rowset', ['title' => 'Recordset']);
enumset('realtime', 'type', 'channel', ['title' => 'Tab']);
enumset('realtime', 'type', 'context', ['title' => 'Context']);
enumset('realtime', 'type', 'session', ['title' => 'Session']);
enumset('resize', 'mode', 'auto', ['title' => 'Only one dimension, auto fit other']);
enumset('resize', 'mode', 'both', ['title' => 'Both dimensions, crop if need']);
enumset('resize', 'mode', 'height', ['title' => 'Height, auto fit width']);
enumset('resize', 'mode', 'width', ['title' => 'Width, auto fit height']);
enumset('role', 'demo', 'n', ['title' => 'No']);
enumset('role', 'demo', 'y', ['title' => 'Yes']);
enumset('role', 'fraction', 'custom', ['title' => 'Custom']);
enumset('role', 'fraction', 'system', ['title' => 'System']);
enumset('role', 'toggle', 'n', ['title' => 'Turned off']);
enumset('role', 'toggle', 'y', ['title' => 'Turned on']);
enumset('section', 'defaultSortDirection', 'ASC', ['title' => 'Ascending']);
enumset('section', 'defaultSortDirection', 'DESC', ['title' => 'Descending']);
enumset('section', 'disableAdd', '0', ['title' => 'No']);
enumset('section', 'disableAdd', '1', ['title' => 'Yes']);
enumset('section', 'expand', 'all', ['title' => 'All users']);
enumset('section', 'expand', 'except', ['title' => 'Everyone except the chosen ones']);
enumset('section', 'expand', 'none', ['title' => 'Noone']);
enumset('section', 'expand', 'only', ['title' => 'Only chosen']);
enumset('section', 'filterOwner', 'certain', ['title' => 'Yes, for certain actions']);
enumset('section', 'filterOwner', 'no', ['title' => 'No']);
enumset('section', 'filterOwner', 'yes', ['title' => 'Yes, for all actions']);
enumset('section', 'fraction', 'custom', ['title' => 'Custom']);
enumset('section', 'fraction', 'public', ['title' => 'Public']);
enumset('section', 'fraction', 'system', ['title' => 'System']);
enumset('section', 'gridToggle', 'n', ['title' => 'No']);
enumset('section', 'gridToggle', 'y', ['title' => 'Yes']);
enumset('section', 'planToggle', 'n', ['title' => 'No']);
enumset('section', 'planToggle', 'y', ['title' => 'Yes']);
enumset('section', 'planTypes', 'day', ['title' => 'Day']);
enumset('section', 'planTypes', 'month', ['title' => 'Month']);
enumset('section', 'planTypes', 'week', ['title' => 'Week']);
enumset('section', 'rownumberer', '0', ['title' => 'No']);
enumset('section', 'rownumberer', '1', ['title' => 'Yes']);
enumset('section', 'rowsetDefault', 'grid', ['title' => 'Grid']);
enumset('section', 'rowsetDefault', 'planDay', ['title' => 'Calendar - day']);
enumset('section', 'rowsetDefault', 'planMonth', ['title' => 'Calendar - month']);
enumset('section', 'rowsetDefault', 'planWeek', ['title' => 'Calendar - week']);
enumset('section', 'rowsetDefault', 'tile', ['title' => 'Gallery']);
enumset('section', 'rowsetSeparate', 'auto', ['title' => 'Auto']);
enumset('section', 'rowsetSeparate', 'no', ['title' => 'In the same request']);
enumset('section', 'rowsetSeparate', 'yes', ['title' => 'Separate request']);
enumset('section', 'showID', 'n', ['title' => 'No']);
enumset('section', 'showID', 'y', ['title' => 'Yes']);
enumset('section', 'tileToggle', 'n', ['title' => 'No']);
enumset('section', 'tileToggle', 'y', ['title' => 'Yes']);
enumset('section', 'toggle', 'h', ['title' => 'Hidden']);
enumset('section', 'toggle', 'n', ['title' => 'Turned off']);
enumset('section', 'toggle', 'y', ['title' => 'Turned on']);
enumset('section2action', 'filterOwner', 'certain', ['title' => 'Yes, for certain owner roles']);
enumset('section2action', 'filterOwner', 'no', ['title' => 'No']);
enumset('section2action', 'filterOwner', 'yes', ['title' => 'Yes, for all owner roles']);
enumset('section2action', 'fitWindow', 'n', ['title' => 'Turned off']);
enumset('section2action', 'fitWindow', 'y', ['title' => 'Turned on']);
enumset('section2action', 'l10n', 'n', ['title' => 'Turned off']);
enumset('section2action', 'l10n', 'na', ['title' => 'Not applicable']);
enumset('section2action', 'l10n', 'qn', ['title' => 'Queued for turning off']);
enumset('section2action', 'l10n', 'qy', ['title' => 'Queued for turning on']);
enumset('section2action', 'l10n', 'y', ['title' => 'Turned on']);
enumset('section2action', 'multiSelect', '0', ['title' => 'Yes, disable batch-selection for this section']);
enumset('section2action', 'multiSelect', '1', ['title' => 'Yes, enable batch-selection for this section']);
enumset('section2action', 'multiSelect', 'inherit', ['title' => 'No, use default batch-selection mode']);
enumset('section2action', 'multiSelect', 'separate', ['title' => 'Yes, enable, but process one record per request']);
enumset('section2action', 'south', 'auto', ['title' => 'Auto']);
enumset('section2action', 'south', 'no', ['title' => 'Do not display']);
enumset('section2action', 'south', 'yes', ['title' => 'Display']);
enumset('section2action', 'toggle', 'n', ['title' => 'Turned off']);
enumset('section2action', 'toggle', 'y', ['title' => 'Turned on']);
field('action', 'alias', ['title' => 'Alias']);
field('action', 'alias', ['tooltip' => '']);
field('action', 'binding', ['title' => 'Binding to code']);
field('action', 'binding', ['tooltip' => '']);
field('action', 'features', ['title' => 'Features']);
field('action', 'features', ['tooltip' => '']);
field('action', 'fraction', ['title' => 'Fraction']);
field('action', 'fraction', ['tooltip' => '']);
field('action', 'hasView', ['title' => 'Has window']);
field('action', 'hasView', ['tooltip' => '']);
field('action', 'icon', ['title' => 'Icon']);
field('action', 'icon', ['tooltip' => '']);
field('action', 'multiSelect', ['title' => 'Batch-selection supported']);
field('action', 'multiSelect', ['tooltip' => '']);
field('action', 'props', ['title' => 'Properties']);
field('action', 'props', ['tooltip' => '']);
field('action', 'selection', ['title' => 'Selection']);
field('action', 'selection', ['tooltip' => '']);
field('action', 'selectionRequired', ['title' => 'Selection required']);
field('action', 'selectionRequired', ['tooltip' => '']);
field('action', 'title', ['title' => 'Title']);
field('action', 'title', ['tooltip' => '']);
field('action', 'toggle', ['title' => 'Toggle']);
field('action', 'toggle', ['tooltip' => '']);
field('admin', 'demo', ['title' => 'Demo-mode']);
field('admin', 'demo', ['tooltip' => '']);
field('admin', 'email', ['title' => 'Login']);
field('admin', 'email', ['tooltip' => '']);
field('admin', 'features', ['title' => 'Features']);
field('admin', 'features', ['tooltip' => '']);
field('admin', 'password', ['title' => 'Password']);
field('admin', 'password', ['tooltip' => '']);
field('admin', 'phone', ['title' => 'Phone']);
field('admin', 'phone', ['tooltip' => '']);
field('admin', 'props', ['title' => 'Properties']);
field('admin', 'props', ['tooltip' => '']);
field('admin', 'roleId', ['title' => 'Role']);
field('admin', 'roleId', ['tooltip' => '']);
field('admin', 'title', ['title' => 'Title']);
field('admin', 'title', ['tooltip' => '']);
field('admin', 'toggle', ['title' => 'Toggle']);
field('admin', 'toggle', ['tooltip' => '']);
field('admin', 'uiedit', ['title' => 'UI editing']);
field('admin', 'uiedit', ['tooltip' => '']);
field('alteredField', 'access', ['title' => 'Access']);
field('alteredField', 'access', ['tooltip' => '']);
field('alteredField', 'accessExcept', ['title' => 'Except']);
field('alteredField', 'accessExcept', ['tooltip' => '']);
field('alteredField', 'accessRoles', ['title' => 'Roles']);
field('alteredField', 'accessRoles', ['tooltip' => '']);
field('alteredField', 'alter', ['title' => 'Adjust field']);
field('alteredField', 'alter', ['tooltip' => '']);
field('alteredField', 'defaultValue', ['title' => 'Default value']);
field('alteredField', 'defaultValue', ['tooltip' => '']);
field('alteredField', 'elementId', ['title' => 'Element']);
field('alteredField', 'elementId', ['tooltip' => '']);
field('alteredField', 'features', ['title' => 'Features']);
field('alteredField', 'features', ['tooltip' => '']);
field('alteredField', 'fieldId', ['title' => 'Field']);
field('alteredField', 'fieldId', ['tooltip' => '']);
field('alteredField', 'jump', ['title' => 'Navigation']);
field('alteredField', 'jump', ['tooltip' => '']);
field('alteredField', 'jumpArgs', ['title' => 'Arguments']);
field('alteredField', 'jumpArgs', ['tooltip' => '']);
field('alteredField', 'jumpSectionActionId', ['title' => 'Action']);
field('alteredField', 'jumpSectionActionId', ['tooltip' => '']);
field('alteredField', 'jumpSectionId', ['title' => 'Section']);
field('alteredField', 'jumpSectionId', ['tooltip' => '']);
field('alteredField', 'mode', ['title' => 'Mode']);
field('alteredField', 'mode', ['tooltip' => '']);
field('alteredField', 'props', ['title' => 'Properties']);
field('alteredField', 'props', ['tooltip' => '']);
field('alteredField', 'rename', ['title' => 'Rename']);
field('alteredField', 'rename', ['tooltip' => '']);
field('alteredField', 'sectionId', ['title' => 'Section']);
field('alteredField', 'sectionId', ['tooltip' => '']);
field('alteredField', 'title', ['title' => 'Auto title']);
field('alteredField', 'title', ['tooltip' => '']);
field('alteredField', 'toggle', ['title' => 'Toggle']);
field('alteredField', 'toggle', ['tooltip' => '']);
field('changeLog', 'adminId', ['title' => 'Author']);
field('changeLog', 'adminId', ['tooltip' => '']);
field('changeLog', 'datetime', ['title' => 'When']);
field('changeLog', 'datetime', ['tooltip' => '']);
field('changeLog', 'entityId', ['title' => 'Entity']);
field('changeLog', 'entityId', ['tooltip' => '']);
field('changeLog', 'entryId', ['title' => 'Entry']);
field('changeLog', 'entryId', ['tooltip' => '']);
field('changeLog', 'fieldId', ['title' => 'What&#39;s changed']);
field('changeLog', 'fieldId', ['tooltip' => '']);
field('changeLog', 'monthId', ['title' => 'Month']);
field('changeLog', 'monthId', ['tooltip' => '']);
field('changeLog', 'now', ['title' => 'Has become']);
field('changeLog', 'now', ['tooltip' => '']);
field('changeLog', 'roleId', ['title' => 'Role']);
field('changeLog', 'roleId', ['tooltip' => '']);
field('changeLog', 'was', ['title' => 'It was']);
field('changeLog', 'was', ['tooltip' => '']);
field('columnType', 'canStoreRelation', ['title' => 'Compatible with foreign keys']);
field('columnType', 'canStoreRelation', ['tooltip' => '']);
field('columnType', 'elementId', ['title' => 'Compatible with form elements']);
field('columnType', 'elementId', ['tooltip' => '']);
field('columnType', 'type', ['title' => 'MySQL type']);
field('columnType', 'type', ['tooltip' => '']);
field('consider', 'connector', ['title' => 'Connector-field']);
field('consider', 'connector', ['tooltip' => '']);
field('consider', 'consider', ['title' => 'Depends on field']);
field('consider', 'consider', ['tooltip' => '']);
field('consider', 'entityId', ['title' => 'Entity']);
field('consider', 'entityId', ['tooltip' => '']);
field('consider', 'fieldId', ['title' => 'Field']);
field('consider', 'fieldId', ['tooltip' => '']);
field('consider', 'foreign', ['title' => 'Further field']);
field('consider', 'foreign', ['tooltip' => '']);
field('consider', 'required', ['title' => 'Required']);
field('consider', 'required', ['tooltip' => '']);
field('consider', 'title', ['title' => 'Auto title']);
field('consider', 'title', ['tooltip' => '']);
field('element', 'alias', ['title' => 'Alias']);
field('element', 'alias', ['tooltip' => '']);
field('element', 'defaultType', ['title' => 'Default MySQL column type']);
field('element', 'defaultType', ['tooltip' => '']);
field('element', 'hidden', ['title' => 'Hide in forms']);
field('element', 'hidden', ['tooltip' => '']);
field('element', 'storeRelationAbility', ['title' => 'Foreign keys compatibility']);
field('element', 'storeRelationAbility', ['tooltip' => '']);
field('element', 'title', ['title' => 'Title']);
field('element', 'title', ['tooltip' => '']);
field('entity', 'binding', ['title' => 'Binding to code']);
field('entity', 'binding', ['tooltip' => '']);
field('entity', 'changeLog', ['title' => 'Changelog']);
field('entity', 'changeLog', ['tooltip' => '']);
field('entity', 'changeLogExcept', ['title' => 'Except fields']);
field('entity', 'changeLogExcept', ['tooltip' => '']);
field('entity', 'changeLogToggle', ['title' => 'Toggle']);
field('entity', 'changeLogToggle', ['tooltip' => '']);
field('entity', 'extends', ['title' => 'Parent PHP class']);
field('entity', 'extends', ['tooltip' => '']);
field('entity', 'features', ['title' => 'Features']);
field('entity', 'features', ['tooltip' => '']);
field('entity', 'filesGroupBy', ['title' => 'Group files in subfolders named by value of field']);
field('entity', 'filesGroupBy', ['tooltip' => '']);
field('entity', 'fraction', ['title' => 'Fraction']);
field('entity', 'fraction', ['tooltip' => '']);
field('entity', 'props', ['title' => 'Properties']);
field('entity', 'props', ['tooltip' => '']);
field('entity', 'space', ['title' => 'Calendar fields']);
field('entity', 'space', ['tooltip' => '']);
field('entity', 'spaceFields', ['title' => 'Fields list']);
field('entity', 'spaceFields', ['tooltip' => '']);
field('entity', 'spaceScheme', ['title' => 'Kit type']);
field('entity', 'spaceScheme', ['tooltip' => '']);
field('entity', 'table', ['title' => 'DB table']);
field('entity', 'table', ['tooltip' => '']);
field('entity', 'title', ['title' => 'Title']);
field('entity', 'title', ['tooltip' => '']);
field('entity', 'titleFieldId', ['title' => 'Title field']);
field('entity', 'titleFieldId', ['tooltip' => '']);
field('enumset', 'alias', ['title' => 'Alias']);
field('enumset', 'alias', ['tooltip' => '']);
field('enumset', 'boxColor', ['title' => 'Box color']);
field('enumset', 'boxColor', ['tooltip' => '']);
field('enumset', 'boxIcon', ['title' => 'Box icon']);
field('enumset', 'boxIcon', ['tooltip' => '']);
field('enumset', 'cssStyle', ['title' => 'CSS styles']);
field('enumset', 'cssStyle', ['tooltip' => '']);
field('enumset', 'features', ['title' => 'Features']);
field('enumset', 'features', ['tooltip' => '']);
field('enumset', 'fieldId', ['title' => 'Field']);
field('enumset', 'fieldId', ['tooltip' => '']);
field('enumset', 'move', ['title' => 'Order']);
field('enumset', 'move', ['tooltip' => '']);
field('enumset', 'textColor', ['title' => 'Text color']);
field('enumset', 'textColor', ['tooltip' => '']);
field('enumset', 'title', ['title' => 'Title']);
field('enumset', 'title', ['tooltip' => '']);
field('field', 'alias', ['title' => 'Alias']);
field('field', 'alias', ['tooltip' => '']);
field('field', 'columnTypeId', ['title' => 'Type']);
field('field', 'columnTypeId', ['tooltip' => '']);
field('field', 'defaultValue', ['title' => 'Default value']);
field('field', 'defaultValue', ['tooltip' => '']);
field('field', 'el', ['title' => 'Display']);
field('field', 'el', ['tooltip' => '']);
field('field', 'elementId', ['title' => 'Element']);
field('field', 'elementId', ['tooltip' => '']);
field('field', 'entityId', ['title' => 'Entity']);
field('field', 'entityId', ['tooltip' => '']);
field('field', 'entry', ['title' => 'Instance']);
field('field', 'entry', ['tooltip' => '']);
field('field', 'filter', ['title' => 'Filtering keys via SQL WHERE']);
field('field', 'filter', ['tooltip' => '']);
field('field', 'fk', ['title' => 'Foreign keys']);
field('field', 'fk', ['tooltip' => '']);
field('field', 'l10n', ['title' => 'Localization']);
field('field', 'l10n', ['tooltip' => '']);
field('field', 'mode', ['title' => 'Mode']);
field('field', 'mode', ['tooltip' => '']);
field('field', 'move', ['title' => 'Order']);
field('field', 'move', ['tooltip' => '']);
field('field', 'mysql', ['title' => 'MySQL-column']);
field('field', 'mysql', ['tooltip' => '']);
field('field', 'onDelete', ['title' => 'ON DELETE']);
field('field', 'onDelete', ['tooltip' => '']);
field('field', 'props', ['title' => 'Properties']);
field('field', 'props', ['tooltip' => '']);
field('field', 'relation', ['title' => 'Which entity keys']);
field('field', 'relation', ['tooltip' => '']);
field('field', 'storeRelationAbility', ['title' => 'Store keys']);
field('field', 'storeRelationAbility', ['tooltip' => '']);
field('field', 'title', ['title' => 'Title']);
field('field', 'title', ['tooltip' => '']);
field('field', 'tooltip', ['title' => 'Tooltip']);
field('field', 'tooltip', ['tooltip' => '']);
field('filter', 'access', ['title' => 'Access']);
field('filter', 'access', ['tooltip' => '']);
field('filter', 'accessExcept', ['title' => 'Except']);
field('filter', 'accessExcept', ['tooltip' => '']);
field('filter', 'accessRoles', ['title' => 'Roles']);
field('filter', 'accessRoles', ['tooltip' => '']);
field('filter', 'allowZeroResult', ['title' => 'Show options even having no results']);
field('filter', 'allowZeroResult', ['tooltip' => '']);
field('filter', 'data', ['title' => 'Data']);
field('filter', 'data', ['tooltip' => '']);
field('filter', 'defaultValue', ['title' => 'Default value']);
field('filter', 'defaultValue', ['tooltip' => '']);
field('filter', 'denyClear', ['title' => 'Deny clearing value']);
field('filter', 'denyClear', ['tooltip' => '']);
field('filter', 'display', ['title' => 'Display']);
field('filter', 'display', ['tooltip' => '']);
field('filter', 'features', ['title' => 'Features']);
field('filter', 'features', ['tooltip' => '']);
field('filter', 'fieldId', ['title' => 'Field']);
field('filter', 'fieldId', ['tooltip' => '']);
field('filter', 'filter', ['title' => 'Filtering combo data via SQL WHERE']);
field('filter', 'filter', ['tooltip' => '']);
field('filter', 'flags', ['title' => 'Flags']);
field('filter', 'flags', ['tooltip' => '']);
field('filter', 'further', ['title' => 'Further / JOINed field']);
field('filter', 'further', ['tooltip' => '']);
field('filter', 'ignoreTemplate', ['title' => 'Ignore option template, if any']);
field('filter', 'ignoreTemplate', ['tooltip' => '']);
field('filter', 'move', ['title' => 'Order']);
field('filter', 'move', ['tooltip' => '']);
field('filter', 'multiSelect', ['title' => 'Enable multiple values selection']);
field('filter', 'multiSelect', ['tooltip' => '']);
field('filter', 'props', ['title' => 'Properties']);
field('filter', 'props', ['tooltip' => '']);
field('filter', 'rename', ['title' => 'Rename']);
field('filter', 'rename', ['tooltip' => '']);
field('filter', 'sectionId', ['title' => 'Section']);
field('filter', 'sectionId', ['tooltip' => '']);
field('filter', 'title', ['title' => 'Auto title']);
field('filter', 'title', ['tooltip' => '']);
field('filter', 'toggle', ['title' => 'Toggle']);
field('filter', 'toggle', ['tooltip' => '']);
field('filter', 'tooltip', ['title' => 'Tooltip']);
field('filter', 'tooltip', ['tooltip' => '']);
field('grid', 'access', ['title' => 'Access']);
field('grid', 'access', ['tooltip' => '']);
field('grid', 'accessExcept', ['title' => 'Except']);
field('grid', 'accessExcept', ['tooltip' => '']);
field('grid', 'accessRoles', ['title' => 'Roles']);
field('grid', 'accessRoles', ['tooltip' => '']);
field('grid', 'color', ['title' => 'Color']);
field('grid', 'color', ['tooltip' => '']);
field('grid', 'colorBreak', ['title' => 'Breakdown by level']);
field('grid', 'colorBreak', ['tooltip' => '']);
field('grid', 'colorDirect', ['title' => 'Manually defined']);
field('grid', 'colorDirect', ['tooltip' => '']);
field('grid', 'colorEntry', ['title' => 'External record']);
field('grid', 'colorEntry', ['tooltip' => '']);
field('grid', 'colorField', ['title' => 'External source']);
field('grid', 'colorField', ['tooltip' => '']);
field('grid', 'compose', ['title' => 'Compose']);
field('grid', 'compose', ['tooltip' => '']);
field('grid', 'composeTip', ['title' => 'Tooltip template']);
field('grid', 'composeTip', ['tooltip' => '']);
field('grid', 'composeVal', ['title' => 'Value template']);
field('grid', 'composeVal', ['tooltip' => '']);
field('grid', 'display', ['title' => 'Header']);
field('grid', 'display', ['tooltip' => '']);
field('grid', 'editor', ['title' => 'Cell editor']);
field('grid', 'editor', ['tooltip' => '']);
field('grid', 'features', ['title' => 'Features']);
field('grid', 'features', ['tooltip' => '']);
field('grid', 'fieldId', ['title' => 'Field']);
field('grid', 'fieldId', ['tooltip' => '']);
field('grid', 'form', ['title' => 'Inside form']);
field('grid', 'form', ['tooltip' => '']);
field('grid', 'formMoreGridIds', ['title' => 'Append more columns']);
field('grid', 'formMoreGridIds', ['tooltip' => '']);
field('grid', 'formNotHideFieldIds', ['title' => 'Don\'t hide which involved fields']);
field('grid', 'formNotHideFieldIds', ['tooltip' => '']);
field('grid', 'formToggle', ['title' => 'Show']);
field('grid', 'formToggle', ['tooltip' => '']);
field('grid', 'further', ['title' => 'Further / JOINed field']);
field('grid', 'further', ['tooltip' => '']);
field('grid', 'gridId', ['title' => 'Parent column']);
field('grid', 'gridId', ['tooltip' => '']);
field('grid', 'group', ['title' => 'Group']);
field('grid', 'group', ['tooltip' => '']);
field('grid', 'icon', ['title' => 'Icon']);
field('grid', 'icon', ['tooltip' => '']);
field('grid', 'jump', ['title' => 'Navigation']);
field('grid', 'jump', ['tooltip' => '']);
field('grid', 'jumpArgs', ['title' => 'Arguments']);
field('grid', 'jumpArgs', ['tooltip' => '']);
field('grid', 'jumpSectionActionId', ['title' => 'Action']);
field('grid', 'jumpSectionActionId', ['tooltip' => '']);
field('grid', 'jumpSectionId', ['title' => 'Section']);
field('grid', 'jumpSectionId', ['tooltip' => '']);
field('grid', 'move', ['title' => 'Order']);
field('grid', 'move', ['tooltip' => '']);
field('grid', 'panels', ['title' => 'Show in panels']);
field('grid', 'panels', ['tooltip' => '']);
field('grid', 'properties', ['title' => 'Properties']);
field('grid', 'properties', ['tooltip' => '']);
field('grid', 'rename', ['title' => 'Rename']);
field('grid', 'rename', ['tooltip' => '']);
field('grid', 'rowReqIfAffected', ['title' => 'If cell changed, refresh that row entirely via separate XHR']);
field('grid', 'rowReqIfAffected', ['tooltip' => '']);
field('grid', 'sectionId', ['title' => 'Section']);
field('grid', 'sectionId', ['tooltip' => '']);
field('grid', 'sizing', ['title' => 'Sizing']);
field('grid', 'sizing', ['tooltip' => '']);
field('grid', 'skipExcel', ['title' => 'Exclude from Excel export']);
field('grid', 'skipExcel', ['tooltip' => '']);
field('grid', 'source', ['title' => 'Data source']);
field('grid', 'source', ['tooltip' => '']);
field('grid', 'summaryText', ['title' => 'Text']);
field('grid', 'summaryText', ['tooltip' => '']);
field('grid', 'summaryType', ['title' => 'Summary']);
field('grid', 'summaryType', ['tooltip' => '']);
field('grid', 'title', ['title' => 'Auto title']);
field('grid', 'title', ['tooltip' => '']);
field('grid', 'toggle', ['title' => 'Grid']);
field('grid', 'toggle', ['tooltip' => '']);
field('grid', 'togglePlan', ['title' => 'Calendar']);
field('grid', 'togglePlan', ['tooltip' => '']);
field('grid', 'toggleTile', ['title' => 'Gallery']);
field('grid', 'toggleTile', ['tooltip' => '']);
field('grid', 'tooltip', ['title' => 'Tooltip']);
field('grid', 'tooltip', ['tooltip' => '']);
field('inQtySum', 'sourceEntity', ['title' => 'Source entity']);
field('inQtySum', 'sourceEntity', ['tooltip' => '']);
field('inQtySum', 'sourceField', ['title' => 'Source field to append/deduct to/from target field']);
field('inQtySum', 'sourceField', ['tooltip' => '']);
field('inQtySum', 'sourceTarget', ['title' => 'Foreign-key field pointing to target entry']);
field('inQtySum', 'sourceTarget', ['tooltip' => '']);
field('inQtySum', 'sourceWhere', ['title' => 'SQL WHERE that source entry should match']);
field('inQtySum', 'sourceWhere', ['tooltip' => '']);
field('inQtySum', 'targetField', ['title' => 'Target field to update value in']);
field('inQtySum', 'targetField', ['tooltip' => '']);
field('inQtySum', 'title', ['title' => 'Auto title']);
field('inQtySum', 'title', ['tooltip' => '']);
field('inQtySum', 'toggle', ['title' => 'Toggle']);
field('inQtySum', 'toggle', ['tooltip' => '']);
field('inQtySum', 'type', ['title' => 'Count type']);
field('inQtySum', 'type', ['tooltip' => '']);
field('lang', 'admin', ['title' => 'Admin panel']);
field('lang', 'admin', ['tooltip' => '']);
field('lang', 'adminCustom', ['title' => 'Project']);
field('lang', 'adminCustom', ['tooltip' => '']);
field('lang', 'adminCustomConst', ['title' => 'Constants']);
field('lang', 'adminCustomConst', ['tooltip' => '']);
field('lang', 'adminCustomData', ['title' => 'Data']);
field('lang', 'adminCustomData', ['tooltip' => '']);
field('lang', 'adminCustomTmpl', ['title' => 'Templates']);
field('lang', 'adminCustomTmpl', ['tooltip' => '']);
field('lang', 'adminCustomUi', ['title' => 'Interface']);
field('lang', 'adminCustomUi', ['tooltip' => '']);
field('lang', 'adminSystem', ['title' => 'System']);
field('lang', 'adminSystem', ['tooltip' => '']);
field('lang', 'adminSystemConst', ['title' => 'Constants']);
field('lang', 'adminSystemConst', ['tooltip' => '']);
field('lang', 'adminSystemUi', ['title' => 'Interface']);
field('lang', 'adminSystemUi', ['tooltip' => '']);
field('lang', 'alias', ['title' => 'Key']);
field('lang', 'alias', ['tooltip' => '']);
field('lang', 'move', ['title' => 'Order']);
field('lang', 'move', ['tooltip' => '']);
field('lang', 'state', ['title' => 'Usage']);
field('lang', 'state', ['tooltip' => '']);
field('lang', 'title', ['title' => 'Title']);
field('lang', 'title', ['tooltip' => '']);
field('lang', 'toggle', ['title' => 'Toggle']);
field('lang', 'toggle', ['tooltip' => '']);
field('month', 'month', ['title' => 'Month']);
field('month', 'month', ['tooltip' => '']);
field('month', 'move', ['title' => 'Order']);
field('month', 'move', ['tooltip' => '']);
field('month', 'title', ['title' => 'Name']);
field('month', 'title', ['tooltip' => '']);
field('month', 'yearId', ['title' => 'Year']);
field('month', 'yearId', ['tooltip' => '']);
field('notice', 'alias', ['title' => 'Alias']);
field('notice', 'alias', ['tooltip' => '']);
field('notice', 'bg', ['title' => 'Background color']);
field('notice', 'bg', ['tooltip' => '']);
field('notice', 'color', ['title' => 'Color']);
field('notice', 'color', ['tooltip' => '']);
field('notice', 'entityId', ['title' => 'Entity']);
field('notice', 'entityId', ['tooltip' => '']);
field('notice', 'event', ['title' => 'Event / PHP IF']);
field('notice', 'event', ['tooltip' => '']);
field('notice', 'fg', ['title' => 'Foreground color']);
field('notice', 'fg', ['tooltip' => '']);
field('notice', 'fraction', ['title' => 'Fraction']);
field('notice', 'fraction', ['tooltip' => '']);
field('notice', 'props', ['title' => 'Properties']);
field('notice', 'props', ['tooltip' => '']);
field('notice', 'qty', ['title' => 'Counter']);
field('notice', 'qty', ['tooltip' => '']);
field('notice', 'qtyDiffRelyOn', ['title' => 'Direction of change']);
field('notice', 'qtyDiffRelyOn', ['tooltip' => '']);
field('notice', 'qtySql', ['title' => 'Calculation / SQL WHERE']);
field('notice', 'qtySql', ['tooltip' => '']);
field('notice', 'roleId', ['title' => 'Recipients']);
field('notice', 'roleId', ['tooltip' => '']);
field('notice', 'sectionId', ['title' => 'Menu items']);
field('notice', 'sectionId', ['tooltip' => '']);
field('notice', 'title', ['title' => 'Title']);
field('notice', 'title', ['tooltip' => '']);
field('notice', 'toggle', ['title' => 'Toggle']);
field('notice', 'toggle', ['tooltip' => '']);
field('notice', 'tooltip', ['title' => 'Tooltip']);
field('notice', 'tooltip', ['tooltip' => '']);
field('notice', 'tpl', ['title' => 'Message']);
field('notice', 'tpl', ['tooltip' => '']);
field('notice', 'tplDecBody', ['title' => 'Text']);
field('notice', 'tplDecBody', ['tooltip' => '']);
field('notice', 'tplDecSubj', ['title' => 'Heading']);
field('notice', 'tplDecSubj', ['tooltip' => '']);
field('notice', 'tplEvtBody', ['title' => 'Message']);
field('notice', 'tplEvtBody', ['tooltip' => '']);
field('notice', 'tplEvtSubj', ['title' => 'Heading']);
field('notice', 'tplEvtSubj', ['tooltip' => '']);
field('notice', 'tplFor', ['title' => 'For event type']);
field('notice', 'tplFor', ['tooltip' => '']);
field('notice', 'tplIncBody', ['title' => 'Text']);
field('notice', 'tplIncBody', ['tooltip' => '']);
field('notice', 'tplIncSubj', ['title' => 'Heading']);
field('notice', 'tplIncSubj', ['tooltip' => '']);
field('notice', 'trigger', ['title' => 'Trigger']);
field('notice', 'trigger', ['tooltip' => '']);
field('noticeGetter', 'criteriaDec', ['title' => 'For whom decrease']);
field('noticeGetter', 'criteriaDec', ['tooltip' => '']);
field('noticeGetter', 'criteriaEvt', ['title' => 'Shared for all recipients']);
field('noticeGetter', 'criteriaEvt', ['tooltip' => '']);
field('noticeGetter', 'criteriaInc', ['title' => 'For whom increase']);
field('noticeGetter', 'criteriaInc', ['tooltip' => '']);
field('noticeGetter', 'criteriaRelyOn', ['title' => 'Type of requirement']);
field('noticeGetter', 'criteriaRelyOn', ['tooltip' => '']);
field('noticeGetter', 'email', ['title' => 'Email']);
field('noticeGetter', 'email', ['tooltip' => '']);
field('noticeGetter', 'features', ['title' => 'Features']);
field('noticeGetter', 'features', ['tooltip' => '']);
field('noticeGetter', 'getters', ['title' => 'Requirement for recipients / SQL WHERE']);
field('noticeGetter', 'getters', ['tooltip' => '']);
field('noticeGetter', 'getters2', ['title' => 'Separate, depends on recipient']);
field('noticeGetter', 'getters2', ['tooltip' => '']);
field('noticeGetter', 'http', ['title' => 'Make HTTP-request']);
field('noticeGetter', 'http', ['tooltip' => '']);
field('noticeGetter', 'method', ['title' => 'Duplicate']);
field('noticeGetter', 'method', ['tooltip' => '']);
field('noticeGetter', 'noticeId', ['title' => 'Notification']);
field('noticeGetter', 'noticeId', ['tooltip' => '']);
field('noticeGetter', 'roleId', ['title' => 'Recipients role']);
field('noticeGetter', 'roleId', ['tooltip' => '']);
field('noticeGetter', 'sms', ['title' => 'SMS']);
field('noticeGetter', 'sms', ['tooltip' => '']);
field('noticeGetter', 'title', ['title' => 'Auto title']);
field('noticeGetter', 'title', ['tooltip' => '']);
field('noticeGetter', 'toggle', ['title' => 'Toggle']);
field('noticeGetter', 'toggle', ['tooltip' => '']);
field('noticeGetter', 'vk', ['title' => 'VK']);
field('noticeGetter', 'vk', ['tooltip' => '']);
field('param', 'cfgField', ['title' => 'Param']);
field('param', 'cfgField', ['tooltip' => '']);
field('param', 'cfgValue', ['title' => 'Value']);
field('param', 'cfgValue', ['tooltip' => '']);
field('param', 'entityId', ['title' => 'Entity']);
field('param', 'entityId', ['tooltip' => '']);
field('param', 'fieldId', ['title' => 'Field']);
field('param', 'fieldId', ['tooltip' => '']);
field('param', 'title', ['title' => 'Auto title']);
field('param', 'title', ['tooltip' => '']);
field('queueChunk', 'apply', ['title' => 'Applying']);
field('queueChunk', 'apply', ['tooltip' => '']);
field('queueChunk', 'applySize', ['title' => 'Size']);
field('queueChunk', 'applySize', ['tooltip' => '']);
field('queueChunk', 'applyState', ['title' => 'Status']);
field('queueChunk', 'applyState', ['tooltip' => '']);
field('queueChunk', 'count', ['title' => 'Estimation']);
field('queueChunk', 'count', ['tooltip' => '']);
field('queueChunk', 'countSize', ['title' => 'Size']);
field('queueChunk', 'countSize', ['tooltip' => '']);
field('queueChunk', 'countState', ['title' => 'Status']);
field('queueChunk', 'countState', ['tooltip' => '']);
field('queueChunk', 'fraction', ['title' => 'Fraction']);
field('queueChunk', 'fraction', ['tooltip' => '']);
field('queueChunk', 'items', ['title' => 'Creating']);
field('queueChunk', 'items', ['tooltip' => '']);
field('queueChunk', 'itemsBytes', ['title' => 'Chars']);
field('queueChunk', 'itemsBytes', ['tooltip' => '']);
field('queueChunk', 'itemsSize', ['title' => 'Size']);
field('queueChunk', 'itemsSize', ['tooltip' => '']);
field('queueChunk', 'itemsState', ['title' => 'Status']);
field('queueChunk', 'itemsState', ['tooltip' => '']);
field('queueChunk', 'location', ['title' => 'Source']);
field('queueChunk', 'location', ['tooltip' => '']);
field('queueChunk', 'move', ['title' => 'Order']);
field('queueChunk', 'move', ['tooltip' => '']);
field('queueChunk', 'queue', ['title' => 'Processing']);
field('queueChunk', 'queue', ['tooltip' => '']);
field('queueChunk', 'queueChunkId', ['title' => 'Parent segment']);
field('queueChunk', 'queueChunkId', ['tooltip' => '']);
field('queueChunk', 'queueSize', ['title' => 'Size']);
field('queueChunk', 'queueSize', ['tooltip' => '']);
field('queueChunk', 'queueState', ['title' => 'Status']);
field('queueChunk', 'queueState', ['tooltip' => '']);
field('queueChunk', 'queueTaskId', ['title' => 'Queue task']);
field('queueChunk', 'queueTaskId', ['tooltip' => '']);
field('queueChunk', 'stages', ['title' => 'Steps']);
field('queueChunk', 'stages', ['tooltip' => '']);
field('queueChunk', 'where', ['title' => 'Fetch condition']);
field('queueChunk', 'where', ['tooltip' => '']);
field('queueItem', 'queueChunkId', ['title' => 'Queue chunk']);
field('queueItem', 'queueChunkId', ['tooltip' => '']);
field('queueItem', 'queueTaskId', ['title' => 'Queue task']);
field('queueItem', 'queueTaskId', ['tooltip' => '']);
field('queueItem', 'result', ['title' => 'Result']);
field('queueItem', 'result', ['tooltip' => '']);
field('queueItem', 'stage', ['title' => 'Status']);
field('queueItem', 'stage', ['tooltip' => '']);
field('queueItem', 'target', ['title' => 'Key in source']);
field('queueItem', 'target', ['tooltip' => '']);
field('queueItem', 'value', ['title' => 'Value']);
field('queueItem', 'value', ['tooltip' => '']);
field('queueTask', 'apply', ['title' => 'Applying']);
field('queueTask', 'apply', ['tooltip' => '']);
field('queueTask', 'applySize', ['title' => 'Size']);
field('queueTask', 'applySize', ['tooltip' => '']);
field('queueTask', 'applyState', ['title' => 'Status']);
field('queueTask', 'applyState', ['tooltip' => '']);
field('queueTask', 'chunk', ['title' => 'Chunks']);
field('queueTask', 'chunk', ['tooltip' => '']);
field('queueTask', 'config', ['title' => 'Settings']);
field('queueTask', 'config', ['tooltip' => '']);
field('queueTask', 'count', ['title' => 'Estimation']);
field('queueTask', 'count', ['tooltip' => '']);
field('queueTask', 'countSize', ['title' => 'Size']);
field('queueTask', 'countSize', ['tooltip' => '']);
field('queueTask', 'countState', ['title' => 'Status']);
field('queueTask', 'countState', ['tooltip' => '']);
field('queueTask', 'datetime', ['title' => 'Created at']);
field('queueTask', 'datetime', ['tooltip' => '']);
field('queueTask', 'error', ['title' => 'Error']);
field('queueTask', 'error', ['tooltip' => '']);
field('queueTask', 'items', ['title' => 'Creating']);
field('queueTask', 'items', ['tooltip' => '']);
field('queueTask', 'itemsBytes', ['title' => 'Chars']);
field('queueTask', 'itemsBytes', ['tooltip' => '']);
field('queueTask', 'itemsSize', ['title' => 'Size']);
field('queueTask', 'itemsSize', ['tooltip' => '']);
field('queueTask', 'itemsState', ['title' => 'Status']);
field('queueTask', 'itemsState', ['tooltip' => '']);
field('queueTask', 'params', ['title' => 'Parameters']);
field('queueTask', 'params', ['tooltip' => '']);
field('queueTask', 'proc', ['title' => 'Process']);
field('queueTask', 'proc', ['tooltip' => '']);
field('queueTask', 'procID', ['title' => 'PID']);
field('queueTask', 'procID', ['tooltip' => '']);
field('queueTask', 'procSince', ['title' => 'Started']);
field('queueTask', 'procSince', ['tooltip' => '']);
field('queueTask', 'procSpan', ['title' => 'Duration']);
field('queueTask', 'procSpan', ['tooltip' => '']);
field('queueTask', 'props', ['title' => 'Properties']);
field('queueTask', 'props', ['tooltip' => '']);
field('queueTask', 'queue', ['title' => 'Processing']);
field('queueTask', 'queue', ['tooltip' => '']);
field('queueTask', 'queueSize', ['title' => 'Size']);
field('queueTask', 'queueSize', ['tooltip' => '']);
field('queueTask', 'queueState', ['title' => 'Status']);
field('queueTask', 'queueState', ['tooltip' => '']);
field('queueTask', 'stage', ['title' => 'Stage']);
field('queueTask', 'stage', ['tooltip' => '']);
field('queueTask', 'stages', ['title' => 'Steps']);
field('queueTask', 'stages', ['tooltip' => '']);
field('queueTask', 'state', ['title' => 'Status']);
field('queueTask', 'state', ['tooltip' => '']);
field('queueTask', 'title', ['title' => 'Task']);
field('queueTask', 'title', ['tooltip' => '']);
field('realtime', 'adminId', ['title' => 'User']);
field('realtime', 'adminId', ['tooltip' => '']);
field('realtime', 'entityId', ['title' => 'Entity']);
field('realtime', 'entityId', ['tooltip' => '']);
field('realtime', 'entries', ['title' => 'Records']);
field('realtime', 'entries', ['tooltip' => '']);
field('realtime', 'fields', ['title' => 'Fields']);
field('realtime', 'fields', ['tooltip' => '']);
field('realtime', 'langId', ['title' => 'Language']);
field('realtime', 'langId', ['tooltip' => '']);
field('realtime', 'mode', ['title' => 'Mode']);
field('realtime', 'mode', ['tooltip' => '']);
field('realtime', 'realtimeId', ['title' => 'Parent entry']);
field('realtime', 'realtimeId', ['tooltip' => '']);
field('realtime', 'roleId', ['title' => 'Role']);
field('realtime', 'roleId', ['tooltip' => '']);
field('realtime', 'scope', ['title' => 'Scope']);
field('realtime', 'scope', ['tooltip' => '']);
field('realtime', 'sectionId', ['title' => 'Section']);
field('realtime', 'sectionId', ['tooltip' => '']);
field('realtime', 'spaceFrame', ['title' => 'Duration']);
field('realtime', 'spaceFrame', ['tooltip' => '']);
field('realtime', 'spaceSince', ['title' => 'Since']);
field('realtime', 'spaceSince', ['tooltip' => '']);
field('realtime', 'spaceUntil', ['title' => 'Until']);
field('realtime', 'spaceUntil', ['tooltip' => '']);
field('realtime', 'title', ['title' => 'Entry']);
field('realtime', 'title', ['tooltip' => '']);
field('realtime', 'token', ['title' => 'Token']);
field('realtime', 'token', ['tooltip' => '']);
field('realtime', 'type', ['title' => 'Type']);
field('realtime', 'type', ['tooltip' => '']);
field('resize', 'alias', ['title' => 'Alias']);
field('resize', 'alias', ['tooltip' => '']);
field('resize', 'fieldId', ['title' => 'Field']);
field('resize', 'fieldId', ['tooltip' => '']);
field('resize', 'height', ['title' => 'Height']);
field('resize', 'height', ['tooltip' => '']);
field('resize', 'mode', ['title' => 'Set exactly']);
field('resize', 'mode', ['tooltip' => '']);
field('resize', 'note', ['title' => 'Note']);
field('resize', 'note', ['tooltip' => '']);
field('resize', 'size', ['title' => 'Size']);
field('resize', 'size', ['tooltip' => '']);
field('resize', 'width', ['title' => 'Width']);
field('resize', 'width', ['tooltip' => '']);
field('role', 'alias', ['title' => 'Alias']);
field('role', 'alias', ['tooltip' => '']);
field('role', 'binding', ['title' => 'Binding to code']);
field('role', 'binding', ['tooltip' => '']);
field('role', 'dashboard', ['title' => 'Dashboard uri']);
field('role', 'dashboard', ['tooltip' => '']);
field('role', 'demo', ['title' => 'Demo-mode']);
field('role', 'demo', ['tooltip' => '']);
field('role', 'entityId', ['title' => 'Entity of users']);
field('role', 'entityId', ['tooltip' => '']);
field('role', 'features', ['title' => 'Features']);
field('role', 'features', ['tooltip' => '']);
field('role', 'fraction', ['title' => 'Fraction']);
field('role', 'fraction', ['tooltip' => '']);
field('role', 'maxWindows', ['title' => 'Maximum number of windows']);
field('role', 'maxWindows', ['tooltip' => '']);
field('role', 'move', ['title' => 'Order']);
field('role', 'move', ['tooltip' => '']);
field('role', 'other', ['title' => 'Other']);
field('role', 'other', ['tooltip' => '']);
field('role', 'props', ['title' => 'Properties']);
field('role', 'props', ['tooltip' => '']);
field('role', 'title', ['title' => 'Title']);
field('role', 'title', ['tooltip' => '']);
field('role', 'toggle', ['title' => 'Toggle']);
field('role', 'toggle', ['tooltip' => '']);
field('section', 'alias', ['title' => 'Controller']);
field('section', 'alias', ['tooltip' => '']);
field('section', 'color', ['title' => 'Row color']);
field('section', 'color', ['tooltip' => '']);
field('section', 'colorField', ['title' => 'Field']);
field('section', 'colorField', ['tooltip' => '']);
field('section', 'colorFurther', ['title' => 'Further field']);
field('section', 'colorFurther', ['tooltip' => '']);
field('section', 'data', ['title' => 'Data source']);
field('section', 'data', ['tooltip' => '']);
field('section', 'defaultSortDirection', ['title' => 'Sort direction']);
field('section', 'defaultSortDirection', ['tooltip' => '']);
field('section', 'defaultSortField', ['title' => 'Sort by']);
field('section', 'defaultSortField', ['tooltip' => '']);
field('section', 'disableAdd', ['title' => 'Prevent creation of new records']);
field('section', 'disableAdd', ['tooltip' => '']);
field('section', 'display', ['title' => 'Display']);
field('section', 'display', ['tooltip' => '']);
field('section', 'entityId', ['title' => 'Entity']);
field('section', 'entityId', ['tooltip' => '']);
field('section', 'expand', ['title' => 'Expand menu item']);
field('section', 'expand', ['tooltip' => '']);
field('section', 'expandRoles', ['title' => 'Chosen']);
field('section', 'expandRoles', ['tooltip' => '']);
field('section', 'extends', ['title' => 'Parent classes']);
field('section', 'extends', ['tooltip' => '']);
field('section', 'extendsJs', ['title' => 'JS']);
field('section', 'extendsJs', ['tooltip' => 'Parent JS class']);
field('section', 'extendsPhp', ['title' => 'PHP']);
field('section', 'extendsPhp', ['tooltip' => 'Parent PHP class']);
field('section', 'features', ['title' => 'Features']);
field('section', 'features', ['tooltip' => '']);
field('section', 'filter', ['title' => 'Filtering through SQL WHERE']);
field('section', 'filter', ['tooltip' => '']);
field('section', 'filterOwner', ['title' => 'For owners - only their records']);
field('section', 'filterOwner', ['tooltip' => '']);
field('section', 'fraction', ['title' => 'Fraction']);
field('section', 'fraction', ['tooltip' => '']);
field('section', 'grid', ['title' => 'Grid']);
field('section', 'grid', ['tooltip' => '']);
field('section', 'gridToggle', ['title' => 'Enable']);
field('section', 'gridToggle', ['tooltip' => '']);
field('section', 'groupBy', ['title' => 'Group by']);
field('section', 'groupBy', ['tooltip' => '']);
field('section', 'help', ['title' => 'Reference']);
field('section', 'help', ['tooltip' => '']);
field('section', 'load', ['title' => 'Loading records']);
field('section', 'load', ['tooltip' => '']);
field('section', 'move', ['title' => 'Order']);
field('section', 'move', ['tooltip' => '']);
field('section', 'other', ['title' => 'Others']);
field('section', 'other', ['tooltip' => '']);
field('section', 'params', ['title' => 'Parameters']);
field('section', 'params', ['tooltip' => '']);
field('section', 'parentSectionConnector', ['title' => 'Link to a parent section by field']);
field('section', 'parentSectionConnector', ['tooltip' => '']);
field('section', 'plan', ['title' => 'Calendar']);
field('section', 'plan', ['tooltip' => '']);
field('section', 'planToggle', ['title' => 'Enable']);
field('section', 'planToggle', ['tooltip' => '']);
field('section', 'planTypes', ['title' => 'Types']);
field('section', 'planTypes', ['tooltip' => '']);
field('section', 'roleIds', ['title' => 'Access']);
field('section', 'roleIds', ['tooltip' => '']);
field('section', 'rownumberer', ['title' => 'Enable records numbering']);
field('section', 'rownumberer', ['tooltip' => '']);
field('section', 'rowsOnPage', ['title' => 'Number of records per page']);
field('section', 'rowsOnPage', ['tooltip' => '']);
field('section', 'rowset', ['title' => 'Panels']);
field('section', 'rowset', ['tooltip' => '']);
field('section', 'rowsetDefault', ['title' => 'Default panel']);
field('section', 'rowsetDefault', ['tooltip' => '']);
field('section', 'rowsetSeparate', ['title' => 'Loading mode']);
field('section', 'rowsetSeparate', ['tooltip' => '']);
field('section', 'sectionId', ['title' => 'Parent section']);
field('section', 'sectionId', ['tooltip' => '']);
field('section', 'showID', ['title' => 'Show ID column']);
field('section', 'showID', ['tooltip' => '']);
field('section', 'store', ['title' => 'Records']);
field('section', 'store', ['tooltip' => '']);
field('section', 'tile', ['title' => 'Gallery']);
field('section', 'tile', ['tooltip' => '']);
field('section', 'tileField', ['title' => 'Fileupload-field']);
field('section', 'tileField', ['tooltip' => '']);
field('section', 'tileThumb', ['title' => 'Resized copy']);
field('section', 'tileThumb', ['tooltip' => '']);
field('section', 'tileToggle', ['title' => 'Enable']);
field('section', 'tileToggle', ['tooltip' => '']);
field('section', 'title', ['title' => 'Title']);
field('section', 'title', ['tooltip' => '']);
field('section', 'toggle', ['title' => 'Toggle']);
field('section', 'toggle', ['tooltip' => '']);
field('section2action', 'access', ['title' => 'Access']);
field('section2action', 'access', ['tooltip' => '']);
field('section2action', 'actionId', ['title' => 'Action']);
field('section2action', 'actionId', ['tooltip' => '']);
field('section2action', 'features', ['title' => 'Features']);
field('section2action', 'features', ['tooltip' => '']);
field('section2action', 'filterOwner', ['title' => 'For owners - only their records']);
field('section2action', 'filterOwner', ['tooltip' => '']);
field('section2action', 'filterOwnerRoleIds', ['title' => 'For which certain owner roles']);
field('section2action', 'filterOwnerRoleIds', ['tooltip' => '']);
field('section2action', 'fitWindow', ['title' => 'Autosize window']);
field('section2action', 'fitWindow', ['tooltip' => '']);
field('section2action', 'l10n', ['title' => 'Localization']);
field('section2action', 'l10n', ['tooltip' => '']);
field('section2action', 'mode', ['title' => 'Batch']);
field('section2action', 'mode', ['tooltip' => '']);
field('section2action', 'move', ['title' => 'Order']);
field('section2action', 'move', ['tooltip' => '']);
field('section2action', 'multiSelect', ['title' => 'Override batch-selection mode']);
field('section2action', 'multiSelect', ['tooltip' => '']);
field('section2action', 'props', ['title' => 'Properties']);
field('section2action', 'props', ['tooltip' => '']);
field('section2action', 'rename', ['title' => 'Rename']);
field('section2action', 'rename', ['tooltip' => '']);
field('section2action', 'roleIds', ['title' => 'Roles']);
field('section2action', 'roleIds', ['tooltip' => '']);
field('section2action', 'sectionId', ['title' => 'Section']);
field('section2action', 'sectionId', ['tooltip' => '']);
field('section2action', 'south', ['title' => 'South panel display mode']);
field('section2action', 'south', ['tooltip' => 'South panel display mode']);
field('section2action', 'title', ['title' => 'Auto title']);
field('section2action', 'title', ['tooltip' => '']);
field('section2action', 'toggle', ['title' => 'Toggle']);
field('section2action', 'toggle', ['tooltip' => '']);
field('section2action', 'view', ['title' => 'View']);
field('section2action', 'view', ['tooltip' => '']);
field('section2action', 'win', ['title' => 'Window']);
field('section2action', 'win', ['tooltip' => '']);
field('sqlIndex', 'alias', ['title' => 'Index name']);
field('sqlIndex', 'alias', ['tooltip' => '']);
field('sqlIndex', 'columns', ['title' => 'Covered fields']);
field('sqlIndex', 'columns', ['tooltip' => '']);
field('sqlIndex', 'entityId', ['title' => 'Entity']);
field('sqlIndex', 'entityId', ['tooltip' => '']);
field('sqlIndex', 'type', ['title' => 'Index type']);
field('sqlIndex', 'type', ['tooltip' => '']);
field('sqlIndex', 'visibility', ['title' => 'Visibility']);
field('sqlIndex', 'visibility', ['tooltip' => '']);
field('year', 'title', ['title' => 'Name']);
field('year', 'title', ['tooltip' => '']);
filter('actions', 'fraction', ['rename' => '']);
filter('actions', 'fraction', ['title' => 'Fraction']);
filter('actions', 'fraction', ['tooltip' => '']);
filter('actions', 'hasView', ['rename' => '']);
filter('actions', 'hasView', ['title' => 'Есть окно']);
filter('actions', 'hasView', ['tooltip' => '']);
filter('actions', 'multiSelect', ['rename' => '']);
filter('actions', 'multiSelect', ['title' => 'Batch-selection supported']);
filter('actions', 'multiSelect', ['tooltip' => '']);
filter('actions', 'selectionRequired', ['rename' => '']);
filter('actions', 'selectionRequired', ['title' => 'Selection required']);
filter('actions', 'selectionRequired', ['tooltip' => '']);
filter('actions', 'toggle', ['rename' => '']);
filter('actions', 'toggle', ['title' => 'Toggle']);
filter('actions', 'toggle', ['tooltip' => '']);
filter('entities', 'fraction', ['rename' => '']);
filter('entities', 'fraction', ['title' => 'Fraction']);
filter('entities', 'fraction', ['tooltip' => '']);
filter('entities', 'spaceScheme', ['rename' => 'Calendar fields kit type']);
filter('entities', 'spaceScheme', ['title' => 'Kit type']);
filter('entities', 'spaceScheme', ['tooltip' => '']);
filter('fieldsAll', 'columnTypeId', ['rename' => '']);
filter('fieldsAll', 'columnTypeId', ['title' => 'Type']);
filter('fieldsAll', 'columnTypeId', ['tooltip' => '']);
filter('fieldsAll', 'elementId', ['rename' => '']);
filter('fieldsAll', 'elementId', ['title' => 'Element']);
filter('fieldsAll', 'elementId', ['tooltip' => '']);
filter('fieldsAll', 'entityId', 'fraction', ['rename' => '']);
filter('fieldsAll', 'entityId', 'fraction', ['title' => 'Entity']);
filter('fieldsAll', 'entityId', 'fraction', ['tooltip' => '']);
filter('fieldsAll', 'entityId', ['rename' => '']);
filter('fieldsAll', 'entityId', ['title' => 'Entity']);
filter('fieldsAll', 'entityId', ['tooltip' => '']);
filter('fieldsAll', 'l10n', ['rename' => '']);
filter('fieldsAll', 'l10n', ['title' => 'Localization']);
filter('fieldsAll', 'l10n', ['tooltip' => '']);
filter('fieldsAll', 'mode', ['rename' => '']);
filter('fieldsAll', 'mode', ['title' => 'Mode']);
filter('fieldsAll', 'mode', ['tooltip' => '']);
filter('fieldsAll', 'onDelete', ['rename' => '']);
filter('fieldsAll', 'onDelete', ['title' => 'ON DELETE']);
filter('fieldsAll', 'onDelete', ['tooltip' => '']);
filter('fieldsAll', 'relation', ['rename' => '']);
filter('fieldsAll', 'relation', ['title' => 'Which entity keys']);
filter('fieldsAll', 'relation', ['tooltip' => '']);
filter('fieldsAll', 'storeRelationAbility', ['rename' => '']);
filter('fieldsAll', 'storeRelationAbility', ['title' => 'Store keys']);
filter('fieldsAll', 'storeRelationAbility', ['tooltip' => '']);
filter('lang', 'state', ['rename' => '']);
filter('lang', 'state', ['title' => 'Usage']);
filter('lang', 'state', ['tooltip' => '']);
filter('lang', 'toggle', ['rename' => '']);
filter('lang', 'toggle', ['title' => 'Toggle']);
filter('lang', 'toggle', ['tooltip' => '']);
filter('paramsAll', 'entityId', 'fraction', ['rename' => '']);
filter('paramsAll', 'entityId', 'fraction', ['title' => 'Entity']);
filter('paramsAll', 'entityId', 'fraction', ['tooltip' => '']);
filter('paramsAll', 'entityId', ['rename' => '']);
filter('paramsAll', 'entityId', ['title' => 'Entity']);
filter('paramsAll', 'entityId', ['tooltip' => '']);
filter('paramsAll', 'fieldId', ['rename' => '']);
filter('paramsAll', 'fieldId', ['title' => 'Field']);
filter('paramsAll', 'fieldId', ['tooltip' => '']);
filter('queueItem', 'stage', ['rename' => '']);
filter('queueItem', 'stage', ['title' => 'Status']);
filter('queueItem', 'stage', ['tooltip' => '']);
filter('realtime', 'adminId', ['rename' => '']);
filter('realtime', 'adminId', ['title' => 'User']);
filter('realtime', 'adminId', ['tooltip' => '']);
filter('realtime', 'langId', ['rename' => '']);
filter('realtime', 'langId', ['title' => 'Language']);
filter('realtime', 'langId', ['tooltip' => '']);
filter('realtime', 'roleId', ['rename' => '']);
filter('realtime', 'roleId', ['title' => 'Role']);
filter('realtime', 'roleId', ['tooltip' => '']);
filter('realtime', 'type', ['rename' => '']);
filter('realtime', 'type', ['title' => 'Type']);
filter('realtime', 'type', ['tooltip' => '']);
filter('sections', 'entityId', ['rename' => '']);
filter('sections', 'entityId', ['title' => 'Entity']);
filter('sections', 'entityId', ['tooltip' => '']);
filter('sections', 'fraction', ['rename' => '']);
filter('sections', 'fraction', ['title' => 'Fraction']);
filter('sections', 'fraction', ['tooltip' => '']);
filter('sections', 'roleIds', ['rename' => '']);
filter('sections', 'roleIds', ['title' => 'Access']);
filter('sections', 'roleIds', ['tooltip' => '']);
filter('sections', 'rowsetSeparate', ['rename' => '']);
filter('sections', 'rowsetSeparate', ['title' => 'Loading mode']);
filter('sections', 'rowsetSeparate', ['tooltip' => '']);
filter('sections', 'toggle', ['rename' => '']);
filter('sections', 'toggle', ['title' => 'Toggle']);
filter('sections', 'toggle', ['tooltip' => '']);
filter('sqlIndexesAll', 'entityId', 'fraction', ['rename' => '']);
filter('sqlIndexesAll', 'entityId', 'fraction', ['title' => 'Entity']);
filter('sqlIndexesAll', 'entityId', 'fraction', ['tooltip' => '']);
filter('sqlIndexesAll', 'entityId', ['rename' => '']);
filter('sqlIndexesAll', 'entityId', ['title' => 'Entity']);
filter('sqlIndexesAll', 'entityId', ['tooltip' => '']);
filter('sqlIndexesAll', 'type', ['rename' => '']);
filter('sqlIndexesAll', 'type', ['title' => 'Index type']);
filter('sqlIndexesAll', 'type', ['tooltip' => '']);
filter('sqlIndexesAll', 'visibility', ['rename' => '']);
filter('sqlIndexesAll', 'visibility', ['title' => 'Visibility']);
filter('sqlIndexesAll', 'visibility', ['tooltip' => '']);
grid('actions', 'alias', ['rename' => '']);
grid('actions', 'alias', ['summaryText' => '']);
grid('actions', 'alias', ['title' => 'Alias']);
grid('actions', 'alias', ['tooltip' => '']);
grid('actions', 'binding', ['rename' => '']);
grid('actions', 'binding', ['summaryText' => '']);
grid('actions', 'binding', ['title' => 'Binding to code']);
grid('actions', 'binding', ['tooltip' => '']);
grid('actions', 'features', ['rename' => '']);
grid('actions', 'features', ['summaryText' => '']);
grid('actions', 'features', ['title' => 'Features']);
grid('actions', 'features', ['tooltip' => '']);
grid('actions', 'fraction', ['rename' => '']);
grid('actions', 'fraction', ['summaryText' => '']);
grid('actions', 'fraction', ['title' => 'Fraction']);
grid('actions', 'fraction', ['tooltip' => '']);
grid('actions', 'hasView', ['rename' => '']);
grid('actions', 'hasView', ['summaryText' => '']);
grid('actions', 'hasView', ['title' => 'Has window']);
grid('actions', 'hasView', ['tooltip' => '']);
grid('actions', 'icon', ['rename' => '']);
grid('actions', 'icon', ['summaryText' => '']);
grid('actions', 'icon', ['title' => 'Icon']);
grid('actions', 'icon', ['tooltip' => '']);
grid('actions', 'multiSelect', ['rename' => '']);
grid('actions', 'multiSelect', ['summaryText' => '']);
grid('actions', 'multiSelect', ['title' => 'Batch-selection supported']);
grid('actions', 'multiSelect', ['tooltip' => '']);
grid('actions', 'props', ['rename' => '']);
grid('actions', 'props', ['summaryText' => '']);
grid('actions', 'props', ['title' => 'Properties']);
grid('actions', 'props', ['tooltip' => '']);
grid('actions', 'selection', ['rename' => '']);
grid('actions', 'selection', ['summaryText' => '']);
grid('actions', 'selection', ['title' => 'Selection']);
grid('actions', 'selection', ['tooltip' => '']);
grid('actions', 'selectionRequired', ['rename' => '']);
grid('actions', 'selectionRequired', ['summaryText' => '']);
grid('actions', 'selectionRequired', ['title' => 'Selection required']);
grid('actions', 'selectionRequired', ['tooltip' => '']);
grid('actions', 'title', ['rename' => '']);
grid('actions', 'title', ['summaryText' => '']);
grid('actions', 'title', ['title' => 'Title']);
grid('actions', 'title', ['tooltip' => '']);
grid('actions', 'toggle', ['rename' => '']);
grid('actions', 'toggle', ['summaryText' => '']);
grid('actions', 'toggle', ['title' => 'Toggle']);
grid('actions', 'toggle', ['tooltip' => '']);
grid('admins', 'demo', ['rename' => '']);
grid('admins', 'demo', ['summaryText' => '']);
grid('admins', 'demo', ['title' => 'Demo-mode']);
grid('admins', 'demo', ['tooltip' => '']);
grid('admins', 'email', ['rename' => '']);
grid('admins', 'email', ['summaryText' => '']);
grid('admins', 'email', ['title' => 'Login']);
grid('admins', 'email', ['tooltip' => '']);
grid('admins', 'features', ['rename' => '']);
grid('admins', 'features', ['summaryText' => '']);
grid('admins', 'features', ['title' => 'Features']);
grid('admins', 'features', ['tooltip' => '']);
grid('admins', 'phone', ['rename' => '']);
grid('admins', 'phone', ['summaryText' => '']);
grid('admins', 'phone', ['title' => 'Phone']);
grid('admins', 'phone', ['tooltip' => '']);
grid('admins', 'props', ['rename' => '']);
grid('admins', 'props', ['summaryText' => '']);
grid('admins', 'props', ['title' => 'Properties']);
grid('admins', 'props', ['tooltip' => '']);
grid('admins', 'title', ['rename' => '']);
grid('admins', 'title', ['summaryText' => '']);
grid('admins', 'title', ['title' => 'Title']);
grid('admins', 'title', ['tooltip' => '']);
grid('admins', 'toggle', ['rename' => '']);
grid('admins', 'toggle', ['summaryText' => '']);
grid('admins', 'toggle', ['title' => 'Toggle']);
grid('admins', 'toggle', ['tooltip' => '']);
grid('admins', 'uiedit', ['rename' => '']);
grid('admins', 'uiedit', ['summaryText' => '']);
grid('admins', 'uiedit', ['title' => 'UI editing']);
grid('admins', 'uiedit', ['tooltip' => '']);
grid('alteredFields', 'access', ['rename' => '']);
grid('alteredFields', 'access', ['summaryText' => '']);
grid('alteredFields', 'access', ['title' => 'Access']);
grid('alteredFields', 'access', ['tooltip' => '']);
grid('alteredFields', 'accessExcept', ['rename' => '']);
grid('alteredFields', 'accessExcept', ['summaryText' => '']);
grid('alteredFields', 'accessExcept', ['title' => 'Except']);
grid('alteredFields', 'accessExcept', ['tooltip' => '']);
grid('alteredFields', 'accessRoles', ['rename' => 'Roles']);
grid('alteredFields', 'accessRoles', ['summaryText' => '']);
grid('alteredFields', 'accessRoles', ['title' => 'Roles']);
grid('alteredFields', 'accessRoles', ['tooltip' => '']);
grid('alteredFields', 'alter', ['rename' => '']);
grid('alteredFields', 'alter', ['summaryText' => '']);
grid('alteredFields', 'alter', ['title' => 'Adjust field']);
grid('alteredFields', 'alter', ['tooltip' => '']);
grid('alteredFields', 'defaultValue', ['rename' => '']);
grid('alteredFields', 'defaultValue', ['summaryText' => '']);
grid('alteredFields', 'defaultValue', ['title' => 'Default value']);
grid('alteredFields', 'defaultValue', ['tooltip' => '']);
grid('alteredFields', 'elementId', ['rename' => '']);
grid('alteredFields', 'elementId', ['summaryText' => '']);
grid('alteredFields', 'elementId', ['title' => 'Element']);
grid('alteredFields', 'elementId', ['tooltip' => '']);
grid('alteredFields', 'features', ['rename' => '']);
grid('alteredFields', 'features', ['summaryText' => '']);
grid('alteredFields', 'features', ['title' => 'Features']);
grid('alteredFields', 'features', ['tooltip' => '']);
grid('alteredFields', 'fieldId', 'alias', ['rename' => '']);
grid('alteredFields', 'fieldId', 'alias', ['summaryText' => '']);
grid('alteredFields', 'fieldId', 'alias', ['title' => 'Field']);
grid('alteredFields', 'fieldId', 'alias', ['tooltip' => '']);
grid('alteredFields', 'fieldId', ['rename' => '']);
grid('alteredFields', 'fieldId', ['summaryText' => '']);
grid('alteredFields', 'fieldId', ['title' => 'Field']);
grid('alteredFields', 'fieldId', ['tooltip' => '']);
grid('alteredFields', 'jump', ['rename' => '']);
grid('alteredFields', 'jump', ['summaryText' => '']);
grid('alteredFields', 'jump', ['title' => 'Navigation']);
grid('alteredFields', 'jump', ['tooltip' => '']);
grid('alteredFields', 'jumpArgs', ['rename' => '']);
grid('alteredFields', 'jumpArgs', ['summaryText' => '']);
grid('alteredFields', 'jumpArgs', ['title' => 'Arguments']);
grid('alteredFields', 'jumpArgs', ['tooltip' => '']);
grid('alteredFields', 'jumpSectionActionId', ['rename' => '']);
grid('alteredFields', 'jumpSectionActionId', ['summaryText' => '']);
grid('alteredFields', 'jumpSectionActionId', ['title' => 'Action']);
grid('alteredFields', 'jumpSectionActionId', ['tooltip' => '']);
grid('alteredFields', 'jumpSectionId', ['rename' => '']);
grid('alteredFields', 'jumpSectionId', ['summaryText' => '']);
grid('alteredFields', 'jumpSectionId', ['title' => 'Section']);
grid('alteredFields', 'jumpSectionId', ['tooltip' => '']);
grid('alteredFields', 'mode', ['rename' => '']);
grid('alteredFields', 'mode', ['summaryText' => '']);
grid('alteredFields', 'mode', ['title' => 'Mode']);
grid('alteredFields', 'mode', ['tooltip' => '']);
grid('alteredFields', 'props', ['rename' => '']);
grid('alteredFields', 'props', ['summaryText' => '']);
grid('alteredFields', 'props', ['title' => 'Properties']);
grid('alteredFields', 'props', ['tooltip' => '']);
grid('alteredFields', 'rename', ['rename' => '']);
grid('alteredFields', 'rename', ['summaryText' => '']);
grid('alteredFields', 'rename', ['title' => 'Rename']);
grid('alteredFields', 'rename', ['tooltip' => '']);
grid('alteredFields', 'toggle', ['rename' => '']);
grid('alteredFields', 'toggle', ['summaryText' => '']);
grid('alteredFields', 'toggle', ['title' => 'Toggle']);
grid('alteredFields', 'toggle', ['tooltip' => '']);
grid('columnTypes', 'canStoreRelation', ['rename' => '']);
grid('columnTypes', 'canStoreRelation', ['summaryText' => '']);
grid('columnTypes', 'canStoreRelation', ['title' => 'Compatible with foreign keys']);
grid('columnTypes', 'canStoreRelation', ['tooltip' => '']);
grid('columnTypes', 'elementId', ['rename' => '']);
grid('columnTypes', 'elementId', ['summaryText' => '']);
grid('columnTypes', 'elementId', ['title' => 'Compatible with form elements']);
grid('columnTypes', 'elementId', ['tooltip' => '']);
grid('columnTypes', 'type', ['rename' => '']);
grid('columnTypes', 'type', ['summaryText' => '']);
grid('columnTypes', 'type', ['title' => 'MySQL type']);
grid('columnTypes', 'type', ['tooltip' => '']);
grid('consider', 'connector', 'alias', ['rename' => '']);
grid('consider', 'connector', 'alias', ['summaryText' => '']);
grid('consider', 'connector', 'alias', ['title' => 'Connector-field']);
grid('consider', 'connector', 'alias', ['tooltip' => '']);
grid('consider', 'connector', 'entityId', ['rename' => '']);
grid('consider', 'connector', 'entityId', ['summaryText' => '']);
grid('consider', 'connector', 'entityId', ['title' => 'Connector-field']);
grid('consider', 'connector', 'entityId', ['tooltip' => '']);
grid('consider', 'connector', ['rename' => '']);
grid('consider', 'connector', ['summaryText' => '']);
grid('consider', 'connector', ['title' => 'Connector-field']);
grid('consider', 'connector', ['tooltip' => '']);
grid('consider', 'consider', 'alias', ['rename' => '']);
grid('consider', 'consider', 'alias', ['summaryText' => '']);
grid('consider', 'consider', 'alias', ['title' => 'Depends on field']);
grid('consider', 'consider', 'alias', ['tooltip' => '']);
grid('consider', 'consider', ['rename' => '']);
grid('consider', 'consider', ['summaryText' => '']);
grid('consider', 'consider', ['title' => 'Depends on field']);
grid('consider', 'consider', ['tooltip' => '']);
grid('consider', 'foreign', 'alias', ['rename' => '']);
grid('consider', 'foreign', 'alias', ['summaryText' => '']);
grid('consider', 'foreign', 'alias', ['title' => 'Further field']);
grid('consider', 'foreign', 'alias', ['tooltip' => '']);
grid('consider', 'foreign', ['rename' => '']);
grid('consider', 'foreign', ['summaryText' => '']);
grid('consider', 'foreign', ['title' => 'Further field']);
grid('consider', 'foreign', ['tooltip' => '']);
grid('consider', 'required', ['rename' => '[ ! ]']);
grid('consider', 'required', ['summaryText' => '']);
grid('consider', 'required', ['title' => 'Required']);
grid('consider', 'required', ['tooltip' => 'Required']);
grid('controlElements', 'alias', ['rename' => '']);
grid('controlElements', 'alias', ['summaryText' => '']);
grid('controlElements', 'alias', ['title' => 'Alias']);
grid('controlElements', 'alias', ['tooltip' => '']);
grid('controlElements', 'defaultType', ['rename' => '']);
grid('controlElements', 'defaultType', ['summaryText' => '']);
grid('controlElements', 'defaultType', ['title' => 'Default MySQL column type']);
grid('controlElements', 'defaultType', ['tooltip' => '']);
grid('controlElements', 'hidden', ['rename' => '']);
grid('controlElements', 'hidden', ['summaryText' => '']);
grid('controlElements', 'hidden', ['title' => 'Hide in forms']);
grid('controlElements', 'hidden', ['tooltip' => '']);
grid('controlElements', 'storeRelationAbility', ['rename' => '']);
grid('controlElements', 'storeRelationAbility', ['summaryText' => '']);
grid('controlElements', 'storeRelationAbility', ['title' => 'Foreign keys compatibility']);
grid('controlElements', 'storeRelationAbility', ['tooltip' => '']);
grid('controlElements', 'title', ['rename' => '']);
grid('controlElements', 'title', ['summaryText' => '']);
grid('controlElements', 'title', ['title' => 'Title']);
grid('controlElements', 'title', ['tooltip' => '']);
grid('elementCfgField', 'alias', ['rename' => '']);
grid('elementCfgField', 'alias', ['summaryText' => '']);
grid('elementCfgField', 'alias', ['title' => 'Alias']);
grid('elementCfgField', 'alias', ['tooltip' => '']);
grid('elementCfgField', 'columnTypeId', ['rename' => '']);
grid('elementCfgField', 'columnTypeId', ['summaryText' => '']);
grid('elementCfgField', 'columnTypeId', ['title' => 'Type']);
grid('elementCfgField', 'columnTypeId', ['tooltip' => '']);
grid('elementCfgField', 'defaultValue', ['rename' => 'DEFAULT']);
grid('elementCfgField', 'defaultValue', ['summaryText' => '']);
grid('elementCfgField', 'defaultValue', ['title' => 'Default value']);
grid('elementCfgField', 'defaultValue', ['tooltip' => '']);
grid('elementCfgField', 'el', ['rename' => '']);
grid('elementCfgField', 'el', ['summaryText' => '']);
grid('elementCfgField', 'el', ['title' => 'Display']);
grid('elementCfgField', 'el', ['tooltip' => '']);
grid('elementCfgField', 'elementId', ['rename' => '']);
grid('elementCfgField', 'elementId', ['summaryText' => '']);
grid('elementCfgField', 'elementId', ['title' => 'Element']);
grid('elementCfgField', 'elementId', ['tooltip' => '']);
grid('elementCfgField', 'filter', ['rename' => '']);
grid('elementCfgField', 'filter', ['summaryText' => '']);
grid('elementCfgField', 'filter', ['title' => 'Filtering keys via SQL WHERE']);
grid('elementCfgField', 'filter', ['tooltip' => '']);
grid('elementCfgField', 'fk', ['rename' => '']);
grid('elementCfgField', 'fk', ['summaryText' => '']);
grid('elementCfgField', 'fk', ['title' => 'Foreign keys']);
grid('elementCfgField', 'fk', ['tooltip' => '']);
grid('elementCfgField', 'l10n', ['rename' => '']);
grid('elementCfgField', 'l10n', ['summaryText' => '']);
grid('elementCfgField', 'l10n', ['title' => 'Localization']);
grid('elementCfgField', 'l10n', ['tooltip' => '']);
grid('elementCfgField', 'mode', ['rename' => '']);
grid('elementCfgField', 'mode', ['summaryText' => '']);
grid('elementCfgField', 'mode', ['title' => 'Mode']);
grid('elementCfgField', 'mode', ['tooltip' => '']);
grid('elementCfgField', 'move', ['rename' => '']);
grid('elementCfgField', 'move', ['summaryText' => '']);
grid('elementCfgField', 'move', ['title' => 'Order']);
grid('elementCfgField', 'move', ['tooltip' => '']);
grid('elementCfgField', 'mysql', ['rename' => '']);
grid('elementCfgField', 'mysql', ['summaryText' => '']);
grid('elementCfgField', 'mysql', ['title' => 'MySQL-column']);
grid('elementCfgField', 'mysql', ['tooltip' => '']);
grid('elementCfgField', 'props', ['rename' => '']);
grid('elementCfgField', 'props', ['summaryText' => '']);
grid('elementCfgField', 'props', ['title' => 'Properties']);
grid('elementCfgField', 'props', ['tooltip' => '']);
grid('elementCfgField', 'relation', 'table', ['rename' => '']);
grid('elementCfgField', 'relation', 'table', ['summaryText' => '']);
grid('elementCfgField', 'relation', 'table', ['title' => 'Which entity keys']);
grid('elementCfgField', 'relation', 'table', ['tooltip' => '']);
grid('elementCfgField', 'relation', ['rename' => 'Entity']);
grid('elementCfgField', 'relation', ['summaryText' => '']);
grid('elementCfgField', 'relation', ['title' => 'Which entity keys']);
grid('elementCfgField', 'relation', ['tooltip' => '']);
grid('elementCfgField', 'storeRelationAbility', ['rename' => '']);
grid('elementCfgField', 'storeRelationAbility', ['summaryText' => '']);
grid('elementCfgField', 'storeRelationAbility', ['title' => 'Store keys']);
grid('elementCfgField', 'storeRelationAbility', ['tooltip' => '']);
grid('elementCfgField', 'title', ['rename' => '']);
grid('elementCfgField', 'title', ['summaryText' => '']);
grid('elementCfgField', 'title', ['title' => 'Title']);
grid('elementCfgField', 'title', ['tooltip' => '']);
grid('elementCfgField', 'tooltip', ['rename' => '']);
grid('elementCfgField', 'tooltip', ['summaryText' => '']);
grid('elementCfgField', 'tooltip', ['title' => 'Tooltip']);
grid('elementCfgField', 'tooltip', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'alias', ['rename' => '']);
grid('elementCfgFieldEnumset', 'alias', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'alias', ['title' => 'Alias']);
grid('elementCfgFieldEnumset', 'alias', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'boxColor', ['rename' => '']);
grid('elementCfgFieldEnumset', 'boxColor', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'boxColor', ['title' => 'Box color']);
grid('elementCfgFieldEnumset', 'boxColor', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'boxIcon', ['rename' => '']);
grid('elementCfgFieldEnumset', 'boxIcon', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'boxIcon', ['title' => 'Box icon']);
grid('elementCfgFieldEnumset', 'boxIcon', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'cssStyle', ['rename' => '']);
grid('elementCfgFieldEnumset', 'cssStyle', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'cssStyle', ['title' => 'CSS styles']);
grid('elementCfgFieldEnumset', 'cssStyle', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'features', ['rename' => '']);
grid('elementCfgFieldEnumset', 'features', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'features', ['title' => 'Features']);
grid('elementCfgFieldEnumset', 'features', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'move', ['rename' => '']);
grid('elementCfgFieldEnumset', 'move', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'move', ['title' => 'Order']);
grid('elementCfgFieldEnumset', 'move', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'textColor', ['rename' => '']);
grid('elementCfgFieldEnumset', 'textColor', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'textColor', ['title' => 'Text color']);
grid('elementCfgFieldEnumset', 'textColor', ['tooltip' => '']);
grid('elementCfgFieldEnumset', 'title', ['rename' => '']);
grid('elementCfgFieldEnumset', 'title', ['summaryText' => '']);
grid('elementCfgFieldEnumset', 'title', ['title' => 'Title']);
grid('elementCfgFieldEnumset', 'title', ['tooltip' => '']);
grid('entities', 'binding', ['rename' => '']);
grid('entities', 'binding', ['summaryText' => '']);
grid('entities', 'binding', ['title' => 'Binding to code']);
grid('entities', 'binding', ['tooltip' => '']);
grid('entities', 'changeLog', ['rename' => '']);
grid('entities', 'changeLog', ['summaryText' => '']);
grid('entities', 'changeLog', ['title' => 'Changelog']);
grid('entities', 'changeLog', ['tooltip' => '']);
grid('entities', 'changeLogExcept', ['rename' => '']);
grid('entities', 'changeLogExcept', ['summaryText' => '']);
grid('entities', 'changeLogExcept', ['title' => 'Except fields']);
grid('entities', 'changeLogExcept', ['tooltip' => '']);
grid('entities', 'changeLogToggle', ['rename' => '']);
grid('entities', 'changeLogToggle', ['summaryText' => '']);
grid('entities', 'changeLogToggle', ['title' => 'Toggle']);
grid('entities', 'changeLogToggle', ['tooltip' => '']);
grid('entities', 'extends', ['rename' => '']);
grid('entities', 'extends', ['summaryText' => '']);
grid('entities', 'extends', ['title' => 'Parent PHP class']);
grid('entities', 'extends', ['tooltip' => '']);
grid('entities', 'features', ['rename' => '']);
grid('entities', 'features', ['summaryText' => '']);
grid('entities', 'features', ['title' => 'Features']);
grid('entities', 'features', ['tooltip' => '']);
grid('entities', 'filesGroupBy', ['rename' => '']);
grid('entities', 'filesGroupBy', ['summaryText' => '']);
grid('entities', 'filesGroupBy', ['title' => 'Group files in subfolders named by value of field']);
grid('entities', 'filesGroupBy', ['tooltip' => '']);
grid('entities', 'fraction', ['rename' => '']);
grid('entities', 'fraction', ['summaryText' => '']);
grid('entities', 'fraction', ['title' => 'Fraction']);
grid('entities', 'fraction', ['tooltip' => '']);
grid('entities', 'props', ['rename' => '']);
grid('entities', 'props', ['summaryText' => '']);
grid('entities', 'props', ['title' => 'Properties']);
grid('entities', 'props', ['tooltip' => '']);
grid('entities', 'space', ['rename' => '']);
grid('entities', 'space', ['summaryText' => '']);
grid('entities', 'space', ['title' => 'Calendar fields']);
grid('entities', 'space', ['tooltip' => '']);
grid('entities', 'spaceFields', ['rename' => '']);
grid('entities', 'spaceFields', ['summaryText' => '']);
grid('entities', 'spaceFields', ['title' => 'Fields list']);
grid('entities', 'spaceFields', ['tooltip' => '']);
grid('entities', 'spaceScheme', ['rename' => '']);
grid('entities', 'spaceScheme', ['summaryText' => '']);
grid('entities', 'spaceScheme', ['title' => 'Kit type']);
grid('entities', 'spaceScheme', ['tooltip' => '']);
grid('entities', 'table', ['rename' => '']);
grid('entities', 'table', ['summaryText' => '']);
grid('entities', 'table', ['title' => 'DB table']);
grid('entities', 'table', ['tooltip' => '']);
grid('entities', 'title', ['rename' => '']);
grid('entities', 'title', ['summaryText' => '']);
grid('entities', 'title', ['title' => 'Title']);
grid('entities', 'title', ['tooltip' => '']);
grid('entities', 'titleFieldId', 'alias', ['rename' => '']);
grid('entities', 'titleFieldId', 'alias', ['summaryText' => '']);
grid('entities', 'titleFieldId', 'alias', ['title' => 'Title field']);
grid('entities', 'titleFieldId', 'alias', ['tooltip' => '']);
grid('entities', 'titleFieldId', ['rename' => '']);
grid('entities', 'titleFieldId', ['summaryText' => '']);
grid('entities', 'titleFieldId', ['title' => 'Title field']);
grid('entities', 'titleFieldId', ['tooltip' => '']);
grid('enumset', 'alias', ['rename' => '']);
grid('enumset', 'alias', ['summaryText' => '']);
grid('enumset', 'alias', ['title' => 'Alias']);
grid('enumset', 'alias', ['tooltip' => '']);
grid('enumset', 'boxColor', ['rename' => '']);
grid('enumset', 'boxColor', ['summaryText' => '']);
grid('enumset', 'boxColor', ['title' => 'Box color']);
grid('enumset', 'boxColor', ['tooltip' => '']);
grid('enumset', 'boxIcon', ['rename' => '']);
grid('enumset', 'boxIcon', ['summaryText' => '']);
grid('enumset', 'boxIcon', ['title' => 'Box icon']);
grid('enumset', 'boxIcon', ['tooltip' => '']);
grid('enumset', 'cssStyle', ['rename' => '']);
grid('enumset', 'cssStyle', ['summaryText' => '']);
grid('enumset', 'cssStyle', ['title' => 'CSS styles']);
grid('enumset', 'cssStyle', ['tooltip' => '']);
grid('enumset', 'features', ['rename' => '']);
grid('enumset', 'features', ['summaryText' => '']);
grid('enumset', 'features', ['title' => 'Features']);
grid('enumset', 'features', ['tooltip' => '']);
grid('enumset', 'move', ['rename' => '']);
grid('enumset', 'move', ['summaryText' => '']);
grid('enumset', 'move', ['title' => 'Order']);
grid('enumset', 'move', ['tooltip' => '']);
grid('enumset', 'textColor', ['rename' => '']);
grid('enumset', 'textColor', ['summaryText' => '']);
grid('enumset', 'textColor', ['title' => 'Text color']);
grid('enumset', 'textColor', ['tooltip' => '']);
grid('enumset', 'title', ['rename' => '']);
grid('enumset', 'title', ['summaryText' => '']);
grid('enumset', 'title', ['title' => 'Title']);
grid('enumset', 'title', ['tooltip' => '']);
grid('fields', 'alias', ['rename' => '']);
grid('fields', 'alias', ['summaryText' => '']);
grid('fields', 'alias', ['title' => 'Alias']);
grid('fields', 'alias', ['tooltip' => '']);
grid('fields', 'columnTypeId', ['rename' => '']);
grid('fields', 'columnTypeId', ['summaryText' => '']);
grid('fields', 'columnTypeId', ['title' => 'Type']);
grid('fields', 'columnTypeId', ['tooltip' => '']);
grid('fields', 'defaultValue', ['rename' => 'DEFAULT']);
grid('fields', 'defaultValue', ['summaryText' => '']);
grid('fields', 'defaultValue', ['title' => 'Default value']);
grid('fields', 'defaultValue', ['tooltip' => '']);
grid('fields', 'el', ['rename' => '']);
grid('fields', 'el', ['summaryText' => '']);
grid('fields', 'el', ['title' => 'Display']);
grid('fields', 'el', ['tooltip' => '']);
grid('fields', 'elementId', ['rename' => '']);
grid('fields', 'elementId', ['summaryText' => '']);
grid('fields', 'elementId', ['title' => 'Element']);
grid('fields', 'elementId', ['tooltip' => '']);
grid('fields', 'filter', ['rename' => '']);
grid('fields', 'filter', ['summaryText' => '']);
grid('fields', 'filter', ['title' => 'Filtering keys via SQL WHERE']);
grid('fields', 'filter', ['tooltip' => '']);
grid('fields', 'fk', ['rename' => '']);
grid('fields', 'fk', ['summaryText' => '']);
grid('fields', 'fk', ['title' => 'Foreign keys']);
grid('fields', 'fk', ['tooltip' => '']);
grid('fields', 'l10n', ['rename' => '']);
grid('fields', 'l10n', ['summaryText' => '']);
grid('fields', 'l10n', ['title' => 'Localization']);
grid('fields', 'l10n', ['tooltip' => '']);
grid('fields', 'mode', ['rename' => '']);
grid('fields', 'mode', ['summaryText' => '']);
grid('fields', 'mode', ['title' => 'Mode']);
grid('fields', 'mode', ['tooltip' => '']);
grid('fields', 'move', ['rename' => '']);
grid('fields', 'move', ['summaryText' => '']);
grid('fields', 'move', ['title' => 'Order']);
grid('fields', 'move', ['tooltip' => '']);
grid('fields', 'mysql', ['rename' => '']);
grid('fields', 'mysql', ['summaryText' => '']);
grid('fields', 'mysql', ['title' => 'MySQL-column']);
grid('fields', 'mysql', ['tooltip' => '']);
grid('fields', 'onDelete', ['rename' => '']);
grid('fields', 'onDelete', ['summaryText' => '']);
grid('fields', 'onDelete', ['title' => 'ON DELETE']);
grid('fields', 'onDelete', ['tooltip' => '']);
grid('fields', 'props', ['rename' => '']);
grid('fields', 'props', ['summaryText' => '']);
grid('fields', 'props', ['title' => 'Properties']);
grid('fields', 'props', ['tooltip' => '']);
grid('fields', 'relation', 'table', ['rename' => '']);
grid('fields', 'relation', 'table', ['summaryText' => '']);
grid('fields', 'relation', 'table', ['title' => 'Which entity keys']);
grid('fields', 'relation', 'table', ['tooltip' => '']);
grid('fields', 'relation', ['rename' => 'Entity']);
grid('fields', 'relation', ['summaryText' => '']);
grid('fields', 'relation', ['title' => 'Which entity keys']);
grid('fields', 'relation', ['tooltip' => '']);
grid('fields', 'storeRelationAbility', ['rename' => '']);
grid('fields', 'storeRelationAbility', ['summaryText' => '']);
grid('fields', 'storeRelationAbility', ['title' => 'Store keys']);
grid('fields', 'storeRelationAbility', ['tooltip' => '']);
grid('fields', 'title', ['rename' => '']);
grid('fields', 'title', ['summaryText' => '']);
grid('fields', 'title', ['title' => 'Title']);
grid('fields', 'title', ['tooltip' => '']);
grid('fields', 'tooltip', ['rename' => '']);
grid('fields', 'tooltip', ['summaryText' => '']);
grid('fields', 'tooltip', ['title' => 'Tooltip']);
grid('fields', 'tooltip', ['tooltip' => '']);
grid('fieldsAll', 'alias', ['rename' => '']);
grid('fieldsAll', 'alias', ['summaryText' => '']);
grid('fieldsAll', 'alias', ['title' => 'Alias']);
grid('fieldsAll', 'alias', ['tooltip' => '']);
grid('fieldsAll', 'columnTypeId', ['rename' => '']);
grid('fieldsAll', 'columnTypeId', ['summaryText' => '']);
grid('fieldsAll', 'columnTypeId', ['title' => 'Type']);
grid('fieldsAll', 'columnTypeId', ['tooltip' => '']);
grid('fieldsAll', 'defaultValue', ['rename' => 'DEFAULT']);
grid('fieldsAll', 'defaultValue', ['summaryText' => '']);
grid('fieldsAll', 'defaultValue', ['title' => 'Default value']);
grid('fieldsAll', 'defaultValue', ['tooltip' => '']);
grid('fieldsAll', 'el', ['rename' => '']);
grid('fieldsAll', 'el', ['summaryText' => '']);
grid('fieldsAll', 'el', ['title' => 'Display']);
grid('fieldsAll', 'el', ['tooltip' => '']);
grid('fieldsAll', 'elementId', ['rename' => '']);
grid('fieldsAll', 'elementId', ['summaryText' => '']);
grid('fieldsAll', 'elementId', ['title' => 'Element']);
grid('fieldsAll', 'elementId', ['tooltip' => '']);
grid('fieldsAll', 'entityId', ['rename' => '']);
grid('fieldsAll', 'entityId', ['summaryText' => '']);
grid('fieldsAll', 'entityId', ['title' => 'Entity']);
grid('fieldsAll', 'entityId', ['tooltip' => '']);
grid('fieldsAll', 'filter', ['rename' => '']);
grid('fieldsAll', 'filter', ['summaryText' => '']);
grid('fieldsAll', 'filter', ['title' => 'Filtering keys via SQL WHERE']);
grid('fieldsAll', 'filter', ['tooltip' => '']);
grid('fieldsAll', 'fk', ['rename' => '']);
grid('fieldsAll', 'fk', ['summaryText' => '']);
grid('fieldsAll', 'fk', ['title' => 'Foreign keys']);
grid('fieldsAll', 'fk', ['tooltip' => '']);
grid('fieldsAll', 'l10n', ['rename' => '']);
grid('fieldsAll', 'l10n', ['summaryText' => '']);
grid('fieldsAll', 'l10n', ['title' => 'Localization']);
grid('fieldsAll', 'l10n', ['tooltip' => '']);
grid('fieldsAll', 'mode', ['rename' => '']);
grid('fieldsAll', 'mode', ['summaryText' => '']);
grid('fieldsAll', 'mode', ['title' => 'Mode']);
grid('fieldsAll', 'mode', ['tooltip' => '']);
grid('fieldsAll', 'move', ['rename' => '']);
grid('fieldsAll', 'move', ['summaryText' => '']);
grid('fieldsAll', 'move', ['title' => 'Order']);
grid('fieldsAll', 'move', ['tooltip' => '']);
grid('fieldsAll', 'mysql', ['rename' => '']);
grid('fieldsAll', 'mysql', ['summaryText' => '']);
grid('fieldsAll', 'mysql', ['title' => 'MySQL-column']);
grid('fieldsAll', 'mysql', ['tooltip' => '']);
grid('fieldsAll', 'onDelete', ['rename' => '']);
grid('fieldsAll', 'onDelete', ['summaryText' => '']);
grid('fieldsAll', 'onDelete', ['title' => 'ON DELETE']);
grid('fieldsAll', 'onDelete', ['tooltip' => '']);
grid('fieldsAll', 'props', ['rename' => '']);
grid('fieldsAll', 'props', ['summaryText' => '']);
grid('fieldsAll', 'props', ['title' => 'Properties']);
grid('fieldsAll', 'props', ['tooltip' => '']);
grid('fieldsAll', 'relation', 'table', ['rename' => '']);
grid('fieldsAll', 'relation', 'table', ['summaryText' => '']);
grid('fieldsAll', 'relation', 'table', ['title' => 'Which entity keys']);
grid('fieldsAll', 'relation', 'table', ['tooltip' => '']);
grid('fieldsAll', 'relation', ['rename' => 'Entity']);
grid('fieldsAll', 'relation', ['summaryText' => '']);
grid('fieldsAll', 'relation', ['title' => 'Which entity keys']);
grid('fieldsAll', 'relation', ['tooltip' => '']);
grid('fieldsAll', 'storeRelationAbility', ['rename' => '']);
grid('fieldsAll', 'storeRelationAbility', ['summaryText' => '']);
grid('fieldsAll', 'storeRelationAbility', ['title' => 'Store keys']);
grid('fieldsAll', 'storeRelationAbility', ['tooltip' => '']);
grid('fieldsAll', 'title', ['rename' => '']);
grid('fieldsAll', 'title', ['summaryText' => '']);
grid('fieldsAll', 'title', ['title' => 'Title']);
grid('fieldsAll', 'title', ['tooltip' => '']);
grid('fieldsAll', 'tooltip', ['rename' => '']);
grid('fieldsAll', 'tooltip', ['summaryText' => '']);
grid('fieldsAll', 'tooltip', ['title' => 'Tooltip']);
grid('fieldsAll', 'tooltip', ['tooltip' => '']);
grid('filter', 'access', ['rename' => '']);
grid('filter', 'access', ['summaryText' => '']);
grid('filter', 'access', ['title' => 'Access']);
grid('filter', 'access', ['tooltip' => '']);
grid('filter', 'accessExcept', ['rename' => '']);
grid('filter', 'accessExcept', ['summaryText' => '']);
grid('filter', 'accessExcept', ['title' => 'Except']);
grid('filter', 'accessExcept', ['tooltip' => '']);
grid('filter', 'accessRoles', ['rename' => '']);
grid('filter', 'accessRoles', ['summaryText' => '']);
grid('filter', 'accessRoles', ['title' => 'Roles']);
grid('filter', 'accessRoles', ['tooltip' => '']);
grid('filter', 'allowZeroResult', ['rename' => '']);
grid('filter', 'allowZeroResult', ['summaryText' => '']);
grid('filter', 'allowZeroResult', ['title' => 'Show options even having no results']);
grid('filter', 'allowZeroResult', ['tooltip' => '']);
grid('filter', 'data', ['rename' => '']);
grid('filter', 'data', ['summaryText' => '']);
grid('filter', 'data', ['title' => 'Data']);
grid('filter', 'data', ['tooltip' => '']);
grid('filter', 'defaultValue', ['rename' => '']);
grid('filter', 'defaultValue', ['summaryText' => '']);
grid('filter', 'defaultValue', ['title' => 'Default value']);
grid('filter', 'defaultValue', ['tooltip' => '']);
grid('filter', 'denyClear', ['rename' => '']);
grid('filter', 'denyClear', ['summaryText' => '']);
grid('filter', 'denyClear', ['title' => 'Deny clearing value']);
grid('filter', 'denyClear', ['tooltip' => '']);
grid('filter', 'display', ['rename' => '']);
grid('filter', 'display', ['summaryText' => '']);
grid('filter', 'display', ['title' => 'Display']);
grid('filter', 'display', ['tooltip' => '']);
grid('filter', 'features', ['rename' => '']);
grid('filter', 'features', ['summaryText' => '']);
grid('filter', 'features', ['title' => 'Features']);
grid('filter', 'features', ['tooltip' => '']);
grid('filter', 'fieldId', 'alias', ['rename' => '']);
grid('filter', 'fieldId', 'alias', ['summaryText' => '']);
grid('filter', 'fieldId', 'alias', ['title' => 'Field']);
grid('filter', 'fieldId', 'alias', ['tooltip' => '']);
grid('filter', 'fieldId', ['rename' => '']);
grid('filter', 'fieldId', ['summaryText' => '']);
grid('filter', 'fieldId', ['title' => 'Field']);
grid('filter', 'fieldId', ['tooltip' => '']);
grid('filter', 'filter', ['rename' => '']);
grid('filter', 'filter', ['summaryText' => '']);
grid('filter', 'filter', ['title' => 'Filtering combo data via SQL WHERE']);
grid('filter', 'filter', ['tooltip' => '']);
grid('filter', 'flags', ['rename' => '']);
grid('filter', 'flags', ['summaryText' => '']);
grid('filter', 'flags', ['title' => 'Flags']);
grid('filter', 'flags', ['tooltip' => '']);
grid('filter', 'further', 'alias', ['rename' => '']);
grid('filter', 'further', 'alias', ['summaryText' => '']);
grid('filter', 'further', 'alias', ['title' => 'Further / JOINed field']);
grid('filter', 'further', 'alias', ['tooltip' => '']);
grid('filter', 'further', ['rename' => '']);
grid('filter', 'further', ['summaryText' => '']);
grid('filter', 'further', ['title' => 'Further / JOINed field']);
grid('filter', 'further', ['tooltip' => '']);
grid('filter', 'ignoreTemplate', ['rename' => '']);
grid('filter', 'ignoreTemplate', ['summaryText' => '']);
grid('filter', 'ignoreTemplate', ['title' => 'Ignore option template, if any']);
grid('filter', 'ignoreTemplate', ['tooltip' => '']);
grid('filter', 'move', ['rename' => '']);
grid('filter', 'move', ['summaryText' => '']);
grid('filter', 'move', ['title' => 'Order']);
grid('filter', 'move', ['tooltip' => '']);
grid('filter', 'multiSelect', ['rename' => '']);
grid('filter', 'multiSelect', ['summaryText' => '']);
grid('filter', 'multiSelect', ['title' => 'Enable multiple values selection']);
grid('filter', 'multiSelect', ['tooltip' => '']);
grid('filter', 'props', ['rename' => '']);
grid('filter', 'props', ['summaryText' => '']);
grid('filter', 'props', ['title' => 'Properties']);
grid('filter', 'props', ['tooltip' => '']);
grid('filter', 'rename', ['rename' => '']);
grid('filter', 'rename', ['summaryText' => '']);
grid('filter', 'rename', ['title' => 'Rename']);
grid('filter', 'rename', ['tooltip' => '']);
grid('filter', 'toggle', ['rename' => '']);
grid('filter', 'toggle', ['summaryText' => '']);
grid('filter', 'toggle', ['title' => 'Toggle']);
grid('filter', 'toggle', ['tooltip' => '']);
grid('filter', 'tooltip', ['rename' => '']);
grid('filter', 'tooltip', ['summaryText' => '']);
grid('filter', 'tooltip', ['title' => 'Tooltip']);
grid('filter', 'tooltip', ['tooltip' => '']);
grid('grid', 'access', ['rename' => '']);
grid('grid', 'access', ['summaryText' => '']);
grid('grid', 'access', ['title' => 'Access']);
grid('grid', 'access', ['tooltip' => '']);
grid('grid', 'accessExcept', ['rename' => '']);
grid('grid', 'accessExcept', ['summaryText' => '']);
grid('grid', 'accessExcept', ['title' => 'Except']);
grid('grid', 'accessExcept', ['tooltip' => '']);
grid('grid', 'accessRoles', ['rename' => '']);
grid('grid', 'accessRoles', ['summaryText' => '']);
grid('grid', 'accessRoles', ['title' => 'Roles']);
grid('grid', 'accessRoles', ['tooltip' => '']);
grid('grid', 'color', ['rename' => '']);
grid('grid', 'color', ['summaryText' => '']);
grid('grid', 'color', ['title' => 'Color']);
grid('grid', 'color', ['tooltip' => '']);
grid('grid', 'colorBreak', ['rename' => '']);
grid('grid', 'colorBreak', ['summaryText' => '']);
grid('grid', 'colorBreak', ['title' => 'Breakdown by level']);
grid('grid', 'colorBreak', ['tooltip' => '']);
grid('grid', 'colorDirect', ['rename' => '']);
grid('grid', 'colorDirect', ['summaryText' => '']);
grid('grid', 'colorDirect', ['title' => 'Manually defined']);
grid('grid', 'colorDirect', ['tooltip' => '']);
grid('grid', 'colorEntry', ['rename' => '']);
grid('grid', 'colorEntry', ['summaryText' => '']);
grid('grid', 'colorEntry', ['title' => 'External record']);
grid('grid', 'colorEntry', ['tooltip' => '']);
grid('grid', 'colorField', ['rename' => '']);
grid('grid', 'colorField', ['summaryText' => '']);
grid('grid', 'colorField', ['title' => 'External source']);
grid('grid', 'colorField', ['tooltip' => '']);
grid('grid', 'compose', ['rename' => 'Value']);
grid('grid', 'compose', ['summaryText' => '']);
grid('grid', 'compose', ['title' => 'Compose']);
grid('grid', 'compose', ['tooltip' => '']);
grid('grid', 'composeTip', ['rename' => 'Tooltip compose template']);
grid('grid', 'composeTip', ['summaryText' => '']);
grid('grid', 'composeTip', ['title' => 'Tooltip template']);
grid('grid', 'composeTip', ['tooltip' => '']);
grid('grid', 'composeVal', ['rename' => 'Value compose template']);
grid('grid', 'composeVal', ['summaryText' => '']);
grid('grid', 'composeVal', ['title' => 'Value template']);
grid('grid', 'composeVal', ['tooltip' => '']);
grid('grid', 'display', ['rename' => '']);
grid('grid', 'display', ['summaryText' => '']);
grid('grid', 'display', ['title' => 'Header']);
grid('grid', 'display', ['tooltip' => '']);
grid('grid', 'editor', ['rename' => '']);
grid('grid', 'editor', ['summaryText' => '']);
grid('grid', 'editor', ['title' => 'Cell editor']);
grid('grid', 'editor', ['tooltip' => '']);
grid('grid', 'features', ['rename' => '']);
grid('grid', 'features', ['summaryText' => '']);
grid('grid', 'features', ['title' => 'Features']);
grid('grid', 'features', ['tooltip' => '']);
grid('grid', 'fieldId', 'alias', ['rename' => '']);
grid('grid', 'fieldId', 'alias', ['summaryText' => '']);
grid('grid', 'fieldId', 'alias', ['title' => 'Field']);
grid('grid', 'fieldId', 'alias', ['tooltip' => '']);
grid('grid', 'fieldId', ['rename' => '']);
grid('grid', 'fieldId', ['summaryText' => '']);
grid('grid', 'fieldId', ['title' => 'Field']);
grid('grid', 'fieldId', ['tooltip' => '']);
grid('grid', 'form', ['rename' => '']);
grid('grid', 'form', ['summaryText' => '']);
grid('grid', 'form', ['title' => 'Inside form']);
grid('grid', 'form', ['tooltip' => '']);
grid('grid', 'formMoreGridIds', ['rename' => '']);
grid('grid', 'formMoreGridIds', ['summaryText' => '']);
grid('grid', 'formMoreGridIds', ['title' => 'Append more columns']);
grid('grid', 'formMoreGridIds', ['tooltip' => '']);
grid('grid', 'formNotHideFieldIds', ['rename' => '']);
grid('grid', 'formNotHideFieldIds', ['summaryText' => '']);
grid('grid', 'formNotHideFieldIds', ['title' => 'Don\'t hide which involved fields']);
grid('grid', 'formNotHideFieldIds', ['tooltip' => '']);
grid('grid', 'formToggle', ['rename' => '']);
grid('grid', 'formToggle', ['summaryText' => '']);
grid('grid', 'formToggle', ['title' => 'Show']);
grid('grid', 'formToggle', ['tooltip' => '']);
grid('grid', 'further', 'alias', ['rename' => '']);
grid('grid', 'further', 'alias', ['summaryText' => '']);
grid('grid', 'further', 'alias', ['title' => 'Further / JOINed field']);
grid('grid', 'further', 'alias', ['tooltip' => '']);
grid('grid', 'further', ['rename' => '']);
grid('grid', 'further', ['summaryText' => '']);
grid('grid', 'further', ['title' => 'Further / JOINed field']);
grid('grid', 'further', ['tooltip' => '']);
grid('grid', 'group', ['rename' => '']);
grid('grid', 'group', ['summaryText' => '']);
grid('grid', 'group', ['title' => 'Group']);
grid('grid', 'group', ['tooltip' => '']);
grid('grid', 'icon', ['rename' => '']);
grid('grid', 'icon', ['summaryText' => '']);
grid('grid', 'icon', ['title' => 'Icon']);
grid('grid', 'icon', ['tooltip' => '']);
grid('grid', 'jump', ['rename' => '']);
grid('grid', 'jump', ['summaryText' => '']);
grid('grid', 'jump', ['title' => 'Navigation']);
grid('grid', 'jump', ['tooltip' => '']);
grid('grid', 'jumpArgs', ['rename' => '']);
grid('grid', 'jumpArgs', ['summaryText' => '']);
grid('grid', 'jumpArgs', ['title' => 'Arguments']);
grid('grid', 'jumpArgs', ['tooltip' => '']);
grid('grid', 'jumpSectionActionId', ['rename' => '']);
grid('grid', 'jumpSectionActionId', ['summaryText' => '']);
grid('grid', 'jumpSectionActionId', ['title' => 'Action']);
grid('grid', 'jumpSectionActionId', ['tooltip' => '']);
grid('grid', 'jumpSectionId', ['rename' => '']);
grid('grid', 'jumpSectionId', ['summaryText' => '']);
grid('grid', 'jumpSectionId', ['title' => 'Section']);
grid('grid', 'jumpSectionId', ['tooltip' => '']);
grid('grid', 'move', ['rename' => '']);
grid('grid', 'move', ['summaryText' => '']);
grid('grid', 'move', ['title' => 'Order']);
grid('grid', 'move', ['tooltip' => '']);
grid('grid', 'panels', ['rename' => 'Show in']);
grid('grid', 'panels', ['summaryText' => '']);
grid('grid', 'panels', ['title' => 'Show in panels']);
grid('grid', 'panels', ['tooltip' => '']);
grid('grid', 'properties', ['rename' => '']);
grid('grid', 'properties', ['summaryText' => '']);
grid('grid', 'properties', ['title' => 'Properties']);
grid('grid', 'properties', ['tooltip' => '']);
grid('grid', 'rename', ['rename' => '']);
grid('grid', 'rename', ['summaryText' => '']);
grid('grid', 'rename', ['title' => 'Rename']);
grid('grid', 'rename', ['tooltip' => '']);
grid('grid', 'rowReqIfAffected', ['rename' => '']);
grid('grid', 'rowReqIfAffected', ['summaryText' => '']);
grid('grid', 'rowReqIfAffected', ['title' => 'If cell changed, refresh that row entirely via separate XHR']);
grid('grid', 'rowReqIfAffected', ['tooltip' => '']);
grid('grid', 'sizing', ['rename' => '']);
grid('grid', 'sizing', ['summaryText' => '']);
grid('grid', 'sizing', ['title' => 'Sizing']);
grid('grid', 'sizing', ['tooltip' => '']);
grid('grid', 'skipExcel', ['rename' => '']);
grid('grid', 'skipExcel', ['summaryText' => '']);
grid('grid', 'skipExcel', ['title' => 'Exclude from Excel export']);
grid('grid', 'skipExcel', ['tooltip' => '']);
grid('grid', 'source', ['rename' => '']);
grid('grid', 'source', ['summaryText' => '']);
grid('grid', 'source', ['title' => 'Data source']);
grid('grid', 'source', ['tooltip' => '']);
grid('grid', 'summaryType', ['rename' => '']);
grid('grid', 'summaryType', ['summaryText' => '']);
grid('grid', 'summaryType', ['title' => 'Summary']);
grid('grid', 'summaryType', ['tooltip' => '']);
grid('grid', 'title', ['rename' => 'Column']);
grid('grid', 'title', ['summaryText' => '']);
grid('grid', 'title', ['title' => 'Auto title']);
grid('grid', 'title', ['tooltip' => '']);
grid('grid', 'toggle', ['rename' => '']);
grid('grid', 'toggle', ['summaryText' => '']);
grid('grid', 'toggle', ['title' => 'Grid']);
grid('grid', 'toggle', ['tooltip' => '']);
grid('grid', 'togglePlan', ['rename' => '']);
grid('grid', 'togglePlan', ['summaryText' => '']);
grid('grid', 'togglePlan', ['title' => 'Calendar']);
grid('grid', 'togglePlan', ['tooltip' => '']);
grid('grid', 'toggleTile', ['rename' => '']);
grid('grid', 'toggleTile', ['summaryText' => '']);
grid('grid', 'toggleTile', ['title' => 'Gallery']);
grid('grid', 'toggleTile', ['tooltip' => '']);
grid('grid', 'tooltip', ['rename' => '']);
grid('grid', 'tooltip', ['summaryText' => '']);
grid('grid', 'tooltip', ['title' => 'Tooltip']);
grid('grid', 'tooltip', ['tooltip' => '']);
grid('inQtySum', 'sourceField', 'alias', ['rename' => '']);
grid('inQtySum', 'sourceField', 'alias', ['summaryText' => '']);
grid('inQtySum', 'sourceField', 'alias', ['title' => 'Source field to append/deduct to/from target field']);
grid('inQtySum', 'sourceField', 'alias', ['tooltip' => '']);
grid('inQtySum', 'sourceField', ['rename' => 'Source field']);
grid('inQtySum', 'sourceField', ['summaryText' => '']);
grid('inQtySum', 'sourceField', ['title' => 'Source field to append/deduct to/from target field']);
grid('inQtySum', 'sourceField', ['tooltip' => '']);
grid('inQtySum', 'sourceTarget', 'alias', ['rename' => '']);
grid('inQtySum', 'sourceTarget', 'alias', ['summaryText' => '']);
grid('inQtySum', 'sourceTarget', 'alias', ['title' => 'Foreign-key field pointing to target entry']);
grid('inQtySum', 'sourceTarget', 'alias', ['tooltip' => '']);
grid('inQtySum', 'sourceTarget', ['rename' => '']);
grid('inQtySum', 'sourceTarget', ['summaryText' => '']);
grid('inQtySum', 'sourceTarget', ['title' => 'Foreign-key field pointing to target entry']);
grid('inQtySum', 'sourceTarget', ['tooltip' => '']);
grid('inQtySum', 'sourceWhere', ['rename' => '']);
grid('inQtySum', 'sourceWhere', ['summaryText' => '']);
grid('inQtySum', 'sourceWhere', ['title' => 'SQL WHERE that source entry should match']);
grid('inQtySum', 'sourceWhere', ['tooltip' => '']);
grid('inQtySum', 'targetField', 'alias', ['rename' => '']);
grid('inQtySum', 'targetField', 'alias', ['summaryText' => '']);
grid('inQtySum', 'targetField', 'alias', ['title' => 'Target field to update value in']);
grid('inQtySum', 'targetField', 'alias', ['tooltip' => '']);
grid('inQtySum', 'targetField', ['rename' => '']);
grid('inQtySum', 'targetField', ['summaryText' => '']);
grid('inQtySum', 'targetField', ['title' => 'Target field to update value in']);
grid('inQtySum', 'targetField', ['tooltip' => '']);
grid('inQtySum', 'toggle', ['rename' => '']);
grid('inQtySum', 'toggle', ['summaryText' => '']);
grid('inQtySum', 'toggle', ['title' => 'Toggle']);
grid('inQtySum', 'toggle', ['tooltip' => '']);
grid('inQtySum', 'type', ['rename' => '']);
grid('inQtySum', 'type', ['summaryText' => '']);
grid('inQtySum', 'type', ['title' => 'Count type']);
grid('inQtySum', 'type', ['tooltip' => '']);
grid('lang', 'admin', ['rename' => '']);
grid('lang', 'admin', ['summaryText' => '']);
grid('lang', 'admin', ['title' => 'Admin panel']);
grid('lang', 'admin', ['tooltip' => '']);
grid('lang', 'adminCustom', ['rename' => '']);
grid('lang', 'adminCustom', ['summaryText' => '']);
grid('lang', 'adminCustom', ['title' => 'Project']);
grid('lang', 'adminCustom', ['tooltip' => '']);
grid('lang', 'adminCustomConst', ['rename' => '']);
grid('lang', 'adminCustomConst', ['summaryText' => '']);
grid('lang', 'adminCustomConst', ['title' => 'Constants']);
grid('lang', 'adminCustomConst', ['tooltip' => '']);
grid('lang', 'adminCustomData', ['rename' => '']);
grid('lang', 'adminCustomData', ['summaryText' => '']);
grid('lang', 'adminCustomData', ['title' => 'Data']);
grid('lang', 'adminCustomData', ['tooltip' => '']);
grid('lang', 'adminCustomTmpl', ['rename' => '']);
grid('lang', 'adminCustomTmpl', ['summaryText' => '']);
grid('lang', 'adminCustomTmpl', ['title' => 'Templates']);
grid('lang', 'adminCustomTmpl', ['tooltip' => '']);
grid('lang', 'adminCustomUi', ['rename' => '']);
grid('lang', 'adminCustomUi', ['summaryText' => '']);
grid('lang', 'adminCustomUi', ['title' => 'Interface']);
grid('lang', 'adminCustomUi', ['tooltip' => '']);
grid('lang', 'adminSystem', ['rename' => '']);
grid('lang', 'adminSystem', ['summaryText' => '']);
grid('lang', 'adminSystem', ['title' => 'System']);
grid('lang', 'adminSystem', ['tooltip' => '']);
grid('lang', 'adminSystemConst', ['rename' => '']);
grid('lang', 'adminSystemConst', ['summaryText' => '']);
grid('lang', 'adminSystemConst', ['title' => 'Constants']);
grid('lang', 'adminSystemConst', ['tooltip' => '']);
grid('lang', 'adminSystemUi', ['rename' => '']);
grid('lang', 'adminSystemUi', ['summaryText' => '']);
grid('lang', 'adminSystemUi', ['title' => 'Interface']);
grid('lang', 'adminSystemUi', ['tooltip' => '']);
grid('lang', 'alias', ['rename' => '']);
grid('lang', 'alias', ['summaryText' => '']);
grid('lang', 'alias', ['title' => 'Key']);
grid('lang', 'alias', ['tooltip' => '']);
grid('lang', 'move', ['rename' => '']);
grid('lang', 'move', ['summaryText' => '']);
grid('lang', 'move', ['title' => 'Order']);
grid('lang', 'move', ['tooltip' => '']);
grid('lang', 'title', ['rename' => '']);
grid('lang', 'title', ['summaryText' => '']);
grid('lang', 'title', ['title' => 'Title']);
grid('lang', 'title', ['tooltip' => '']);
grid('lang', 'toggle', ['rename' => '']);
grid('lang', 'toggle', ['summaryText' => '']);
grid('lang', 'toggle', ['title' => 'Toggle']);
grid('lang', 'toggle', ['tooltip' => '']);
grid('noticeGetters', 'criteriaDec', ['rename' => '']);
grid('noticeGetters', 'criteriaDec', ['summaryText' => '']);
grid('noticeGetters', 'criteriaDec', ['title' => 'For whom decrease']);
grid('noticeGetters', 'criteriaDec', ['tooltip' => '']);
grid('noticeGetters', 'criteriaEvt', ['rename' => 'Shared']);
grid('noticeGetters', 'criteriaEvt', ['summaryText' => '']);
grid('noticeGetters', 'criteriaEvt', ['title' => 'Shared for all recipients']);
grid('noticeGetters', 'criteriaEvt', ['tooltip' => '']);
grid('noticeGetters', 'criteriaInc', ['rename' => '']);
grid('noticeGetters', 'criteriaInc', ['summaryText' => '']);
grid('noticeGetters', 'criteriaInc', ['title' => 'For whom increase']);
grid('noticeGetters', 'criteriaInc', ['tooltip' => '']);
grid('noticeGetters', 'criteriaRelyOn', ['rename' => '']);
grid('noticeGetters', 'criteriaRelyOn', ['summaryText' => '']);
grid('noticeGetters', 'criteriaRelyOn', ['title' => 'Type of requirement']);
grid('noticeGetters', 'criteriaRelyOn', ['tooltip' => '']);
grid('noticeGetters', 'email', ['rename' => '']);
grid('noticeGetters', 'email', ['summaryText' => '']);
grid('noticeGetters', 'email', ['title' => 'Email']);
grid('noticeGetters', 'email', ['tooltip' => '']);
grid('noticeGetters', 'features', ['rename' => '']);
grid('noticeGetters', 'features', ['summaryText' => '']);
grid('noticeGetters', 'features', ['title' => 'Features']);
grid('noticeGetters', 'features', ['tooltip' => '']);
grid('noticeGetters', 'getters', ['rename' => '']);
grid('noticeGetters', 'getters', ['summaryText' => '']);
grid('noticeGetters', 'getters', ['title' => 'Requirement for recipients / SQL WHERE']);
grid('noticeGetters', 'getters', ['tooltip' => '']);
grid('noticeGetters', 'getters2', ['rename' => '']);
grid('noticeGetters', 'getters2', ['summaryText' => '']);
grid('noticeGetters', 'getters2', ['title' => 'Separate, depends on recipient']);
grid('noticeGetters', 'getters2', ['tooltip' => '']);
grid('noticeGetters', 'http', ['rename' => '']);
grid('noticeGetters', 'http', ['summaryText' => '']);
grid('noticeGetters', 'http', ['title' => 'Make HTTP-request']);
grid('noticeGetters', 'http', ['tooltip' => '']);
grid('noticeGetters', 'method', ['rename' => '']);
grid('noticeGetters', 'method', ['summaryText' => '']);
grid('noticeGetters', 'method', ['title' => 'Duplicate']);
grid('noticeGetters', 'method', ['tooltip' => '']);
grid('noticeGetters', 'roleId', ['rename' => '']);
grid('noticeGetters', 'roleId', ['summaryText' => '']);
grid('noticeGetters', 'roleId', ['title' => 'Recipients role']);
grid('noticeGetters', 'roleId', ['tooltip' => '']);
grid('noticeGetters', 'sms', ['rename' => '']);
grid('noticeGetters', 'sms', ['summaryText' => '']);
grid('noticeGetters', 'sms', ['title' => 'SMS']);
grid('noticeGetters', 'sms', ['tooltip' => '']);
grid('noticeGetters', 'toggle', ['rename' => '']);
grid('noticeGetters', 'toggle', ['summaryText' => '']);
grid('noticeGetters', 'toggle', ['title' => 'Toggle']);
grid('noticeGetters', 'toggle', ['tooltip' => '']);
grid('noticeGetters', 'vk', ['rename' => '']);
grid('noticeGetters', 'vk', ['summaryText' => '']);
grid('noticeGetters', 'vk', ['title' => 'VK']);
grid('noticeGetters', 'vk', ['tooltip' => '']);
grid('notices', 'alias', ['rename' => '']);
grid('notices', 'alias', ['summaryText' => '']);
grid('notices', 'alias', ['title' => 'Alias']);
grid('notices', 'alias', ['tooltip' => '']);
grid('notices', 'bg', ['rename' => 'Background']);
grid('notices', 'bg', ['summaryText' => '']);
grid('notices', 'bg', ['title' => 'Background color']);
grid('notices', 'bg', ['tooltip' => '']);
grid('notices', 'color', ['rename' => '']);
grid('notices', 'color', ['summaryText' => '']);
grid('notices', 'color', ['title' => 'Color']);
grid('notices', 'color', ['tooltip' => '']);
grid('notices', 'entityId', ['rename' => '']);
grid('notices', 'entityId', ['summaryText' => '']);
grid('notices', 'entityId', ['title' => 'Entity']);
grid('notices', 'entityId', ['tooltip' => '']);
grid('notices', 'event', ['rename' => '']);
grid('notices', 'event', ['summaryText' => '']);
grid('notices', 'event', ['title' => 'Event / PHP IF']);
grid('notices', 'event', ['tooltip' => '']);
grid('notices', 'fg', ['rename' => 'Foreground']);
grid('notices', 'fg', ['summaryText' => '']);
grid('notices', 'fg', ['title' => 'Foreground color']);
grid('notices', 'fg', ['tooltip' => '']);
grid('notices', 'fraction', ['rename' => '']);
grid('notices', 'fraction', ['summaryText' => '']);
grid('notices', 'fraction', ['title' => 'Fraction']);
grid('notices', 'fraction', ['tooltip' => '']);
grid('notices', 'props', ['rename' => '']);
grid('notices', 'props', ['summaryText' => '']);
grid('notices', 'props', ['title' => 'Properties']);
grid('notices', 'props', ['tooltip' => '']);
grid('notices', 'qty', ['rename' => '']);
grid('notices', 'qty', ['summaryText' => '']);
grid('notices', 'qty', ['title' => 'Counter']);
grid('notices', 'qty', ['tooltip' => '']);
grid('notices', 'qtyDiffRelyOn', ['rename' => '']);
grid('notices', 'qtyDiffRelyOn', ['summaryText' => '']);
grid('notices', 'qtyDiffRelyOn', ['title' => 'Direction of change']);
grid('notices', 'qtyDiffRelyOn', ['tooltip' => '']);
grid('notices', 'qtySql', ['rename' => '']);
grid('notices', 'qtySql', ['summaryText' => '']);
grid('notices', 'qtySql', ['title' => 'Calculation / SQL WHERE']);
grid('notices', 'qtySql', ['tooltip' => '']);
grid('notices', 'roleId', ['rename' => '']);
grid('notices', 'roleId', ['summaryText' => '']);
grid('notices', 'roleId', ['title' => 'Recipients']);
grid('notices', 'roleId', ['tooltip' => '']);
grid('notices', 'sectionId', ['rename' => '']);
grid('notices', 'sectionId', ['summaryText' => '']);
grid('notices', 'sectionId', ['title' => 'Menu items']);
grid('notices', 'sectionId', ['tooltip' => '']);
grid('notices', 'title', ['rename' => '']);
grid('notices', 'title', ['summaryText' => '']);
grid('notices', 'title', ['title' => 'Title']);
grid('notices', 'title', ['tooltip' => '']);
grid('notices', 'toggle', ['rename' => '']);
grid('notices', 'toggle', ['summaryText' => '']);
grid('notices', 'toggle', ['title' => 'Toggle']);
grid('notices', 'toggle', ['tooltip' => '']);
grid('notices', 'tooltip', ['rename' => '']);
grid('notices', 'tooltip', ['summaryText' => '']);
grid('notices', 'tooltip', ['title' => 'Tooltip']);
grid('notices', 'tooltip', ['tooltip' => '']);
grid('notices', 'trigger', ['rename' => '']);
grid('notices', 'trigger', ['summaryText' => '']);
grid('notices', 'trigger', ['title' => 'Trigger']);
grid('notices', 'trigger', ['tooltip' => '']);
grid('params', 'cfgField', ['rename' => '']);
grid('params', 'cfgField', ['summaryText' => '']);
grid('params', 'cfgField', ['title' => 'Param']);
grid('params', 'cfgField', ['tooltip' => '']);
grid('params', 'cfgValue', ['rename' => '']);
grid('params', 'cfgValue', ['summaryText' => '']);
grid('params', 'cfgValue', ['title' => 'Value']);
grid('params', 'cfgValue', ['tooltip' => '']);
grid('paramsAll', 'cfgField', 'alias', ['rename' => '']);
grid('paramsAll', 'cfgField', 'alias', ['summaryText' => '']);
grid('paramsAll', 'cfgField', 'alias', ['title' => 'Param']);
grid('paramsAll', 'cfgField', 'alias', ['tooltip' => '']);
grid('paramsAll', 'cfgField', ['rename' => '']);
grid('paramsAll', 'cfgField', ['summaryText' => '']);
grid('paramsAll', 'cfgField', ['title' => 'Param']);
grid('paramsAll', 'cfgField', ['tooltip' => '']);
grid('paramsAll', 'cfgValue', ['rename' => '']);
grid('paramsAll', 'cfgValue', ['summaryText' => '']);
grid('paramsAll', 'cfgValue', ['title' => 'Value']);
grid('paramsAll', 'cfgValue', ['tooltip' => '']);
grid('paramsAll', 'entityId', 'table', ['rename' => '']);
grid('paramsAll', 'entityId', 'table', ['summaryText' => '']);
grid('paramsAll', 'entityId', 'table', ['title' => 'Entity']);
grid('paramsAll', 'entityId', 'table', ['tooltip' => '']);
grid('paramsAll', 'entityId', ['rename' => '']);
grid('paramsAll', 'entityId', ['summaryText' => '']);
grid('paramsAll', 'entityId', ['title' => 'Entity']);
grid('paramsAll', 'entityId', ['tooltip' => '']);
grid('paramsAll', 'fieldId', 'alias', ['rename' => '']);
grid('paramsAll', 'fieldId', 'alias', ['summaryText' => '']);
grid('paramsAll', 'fieldId', 'alias', ['title' => 'Field']);
grid('paramsAll', 'fieldId', 'alias', ['tooltip' => '']);
grid('paramsAll', 'fieldId', ['rename' => '']);
grid('paramsAll', 'fieldId', ['summaryText' => '']);
grid('paramsAll', 'fieldId', ['title' => 'Field']);
grid('paramsAll', 'fieldId', ['tooltip' => '']);
grid('queueChunk', 'apply', ['rename' => '']);
grid('queueChunk', 'apply', ['summaryText' => '']);
grid('queueChunk', 'apply', ['title' => 'Applying']);
grid('queueChunk', 'apply', ['tooltip' => '']);
grid('queueChunk', 'applySize', ['rename' => '']);
grid('queueChunk', 'applySize', ['summaryText' => '']);
grid('queueChunk', 'applySize', ['title' => 'Size']);
grid('queueChunk', 'applySize', ['tooltip' => '']);
grid('queueChunk', 'applyState', ['rename' => '']);
grid('queueChunk', 'applyState', ['summaryText' => '']);
grid('queueChunk', 'applyState', ['title' => 'Status']);
grid('queueChunk', 'applyState', ['tooltip' => '']);
grid('queueChunk', 'count', ['rename' => '']);
grid('queueChunk', 'count', ['summaryText' => '']);
grid('queueChunk', 'count', ['title' => 'Estimation']);
grid('queueChunk', 'count', ['tooltip' => '']);
grid('queueChunk', 'countSize', ['rename' => '']);
grid('queueChunk', 'countSize', ['summaryText' => '']);
grid('queueChunk', 'countSize', ['title' => 'Size']);
grid('queueChunk', 'countSize', ['tooltip' => '']);
grid('queueChunk', 'countState', ['rename' => '']);
grid('queueChunk', 'countState', ['summaryText' => '']);
grid('queueChunk', 'countState', ['title' => 'Status']);
grid('queueChunk', 'countState', ['tooltip' => '']);
grid('queueChunk', 'items', ['rename' => '']);
grid('queueChunk', 'items', ['summaryText' => '']);
grid('queueChunk', 'items', ['title' => 'Creating']);
grid('queueChunk', 'items', ['tooltip' => '']);
grid('queueChunk', 'itemsBytes', ['rename' => '']);
grid('queueChunk', 'itemsBytes', ['summaryText' => '']);
grid('queueChunk', 'itemsBytes', ['title' => 'Chars']);
grid('queueChunk', 'itemsBytes', ['tooltip' => '']);
grid('queueChunk', 'itemsSize', ['rename' => '']);
grid('queueChunk', 'itemsSize', ['summaryText' => '']);
grid('queueChunk', 'itemsSize', ['title' => 'Size']);
grid('queueChunk', 'itemsSize', ['tooltip' => '']);
grid('queueChunk', 'itemsState', ['rename' => '']);
grid('queueChunk', 'itemsState', ['summaryText' => '']);
grid('queueChunk', 'itemsState', ['title' => 'Status']);
grid('queueChunk', 'itemsState', ['tooltip' => '']);
grid('queueChunk', 'location', ['rename' => '']);
grid('queueChunk', 'location', ['summaryText' => '']);
grid('queueChunk', 'location', ['title' => 'Source']);
grid('queueChunk', 'location', ['tooltip' => '']);
grid('queueChunk', 'move', ['rename' => '']);
grid('queueChunk', 'move', ['summaryText' => '']);
grid('queueChunk', 'move', ['title' => 'Order']);
grid('queueChunk', 'move', ['tooltip' => '']);
grid('queueChunk', 'queue', ['rename' => '']);
grid('queueChunk', 'queue', ['summaryText' => '']);
grid('queueChunk', 'queue', ['title' => 'Processing']);
grid('queueChunk', 'queue', ['tooltip' => '']);
grid('queueChunk', 'queueSize', ['rename' => '']);
grid('queueChunk', 'queueSize', ['summaryText' => '']);
grid('queueChunk', 'queueSize', ['title' => 'Size']);
grid('queueChunk', 'queueSize', ['tooltip' => '']);
grid('queueChunk', 'queueState', ['rename' => '']);
grid('queueChunk', 'queueState', ['summaryText' => '']);
grid('queueChunk', 'queueState', ['title' => 'Status']);
grid('queueChunk', 'queueState', ['tooltip' => '']);
grid('queueChunk', 'stages', ['rename' => '']);
grid('queueChunk', 'stages', ['summaryText' => '']);
grid('queueChunk', 'stages', ['title' => 'Steps']);
grid('queueChunk', 'stages', ['tooltip' => '']);
grid('queueChunk', 'where', ['rename' => '']);
grid('queueChunk', 'where', ['summaryText' => '']);
grid('queueChunk', 'where', ['title' => 'Fetch condition']);
grid('queueChunk', 'where', ['tooltip' => '']);
grid('queueItem', 'result', ['rename' => '']);
grid('queueItem', 'result', ['summaryText' => '']);
grid('queueItem', 'result', ['title' => 'Result']);
grid('queueItem', 'result', ['tooltip' => '']);
grid('queueItem', 'stage', ['rename' => '']);
grid('queueItem', 'stage', ['summaryText' => '']);
grid('queueItem', 'stage', ['title' => 'Status']);
grid('queueItem', 'stage', ['tooltip' => '']);
grid('queueItem', 'target', ['rename' => '']);
grid('queueItem', 'target', ['summaryText' => '']);
grid('queueItem', 'target', ['title' => 'Key in source']);
grid('queueItem', 'target', ['tooltip' => '']);
grid('queueItem', 'value', ['rename' => '']);
grid('queueItem', 'value', ['summaryText' => '']);
grid('queueItem', 'value', ['title' => 'Value']);
grid('queueItem', 'value', ['tooltip' => '']);
grid('queueTask', 'apply', ['rename' => '']);
grid('queueTask', 'apply', ['summaryText' => '']);
grid('queueTask', 'apply', ['title' => 'Applying']);
grid('queueTask', 'apply', ['tooltip' => '']);
grid('queueTask', 'applySize', ['rename' => '']);
grid('queueTask', 'applySize', ['summaryText' => '']);
grid('queueTask', 'applySize', ['title' => 'Size']);
grid('queueTask', 'applySize', ['tooltip' => '']);
grid('queueTask', 'applyState', ['rename' => '']);
grid('queueTask', 'applyState', ['summaryText' => '']);
grid('queueTask', 'applyState', ['title' => 'Status']);
grid('queueTask', 'applyState', ['tooltip' => '']);
grid('queueTask', 'chunk', ['rename' => '']);
grid('queueTask', 'chunk', ['summaryText' => '']);
grid('queueTask', 'chunk', ['title' => 'Chunks']);
grid('queueTask', 'chunk', ['tooltip' => '']);
grid('queueTask', 'config', ['rename' => '']);
grid('queueTask', 'config', ['summaryText' => '']);
grid('queueTask', 'config', ['title' => 'Settings']);
grid('queueTask', 'config', ['tooltip' => '']);
grid('queueTask', 'count', ['rename' => '']);
grid('queueTask', 'count', ['summaryText' => '']);
grid('queueTask', 'count', ['title' => 'Estimation']);
grid('queueTask', 'count', ['tooltip' => '']);
grid('queueTask', 'countSize', ['rename' => '']);
grid('queueTask', 'countSize', ['summaryText' => '']);
grid('queueTask', 'countSize', ['title' => 'Size']);
grid('queueTask', 'countSize', ['tooltip' => '']);
grid('queueTask', 'countState', ['rename' => '']);
grid('queueTask', 'countState', ['summaryText' => '']);
grid('queueTask', 'countState', ['title' => 'Status']);
grid('queueTask', 'countState', ['tooltip' => '']);
grid('queueTask', 'datetime', ['rename' => '']);
grid('queueTask', 'datetime', ['summaryText' => '']);
grid('queueTask', 'datetime', ['title' => 'Created at']);
grid('queueTask', 'datetime', ['tooltip' => '']);
grid('queueTask', 'error', ['rename' => '']);
grid('queueTask', 'error', ['summaryText' => '']);
grid('queueTask', 'error', ['title' => 'Error']);
grid('queueTask', 'error', ['tooltip' => '']);
grid('queueTask', 'items', ['rename' => '']);
grid('queueTask', 'items', ['summaryText' => '']);
grid('queueTask', 'items', ['title' => 'Creating']);
grid('queueTask', 'items', ['tooltip' => '']);
grid('queueTask', 'itemsBytes', ['rename' => '']);
grid('queueTask', 'itemsBytes', ['summaryText' => '']);
grid('queueTask', 'itemsBytes', ['title' => 'Chars']);
grid('queueTask', 'itemsBytes', ['tooltip' => '']);
grid('queueTask', 'itemsSize', ['rename' => '']);
grid('queueTask', 'itemsSize', ['summaryText' => '']);
grid('queueTask', 'itemsSize', ['title' => 'Size']);
grid('queueTask', 'itemsSize', ['tooltip' => '']);
grid('queueTask', 'itemsState', ['rename' => '']);
grid('queueTask', 'itemsState', ['summaryText' => '']);
grid('queueTask', 'itemsState', ['title' => 'Status']);
grid('queueTask', 'itemsState', ['tooltip' => '']);
grid('queueTask', 'params', ['rename' => '']);
grid('queueTask', 'params', ['summaryText' => '']);
grid('queueTask', 'params', ['title' => 'Parameters']);
grid('queueTask', 'params', ['tooltip' => '']);
grid('queueTask', 'proc', ['rename' => '']);
grid('queueTask', 'proc', ['summaryText' => '']);
grid('queueTask', 'proc', ['title' => 'Process']);
grid('queueTask', 'proc', ['tooltip' => '']);
grid('queueTask', 'procID', ['rename' => '']);
grid('queueTask', 'procID', ['summaryText' => '']);
grid('queueTask', 'procID', ['title' => 'PID']);
grid('queueTask', 'procID', ['tooltip' => '']);
grid('queueTask', 'procSince', ['rename' => '']);
grid('queueTask', 'procSince', ['summaryText' => '']);
grid('queueTask', 'procSince', ['title' => 'Started']);
grid('queueTask', 'procSince', ['tooltip' => '']);
grid('queueTask', 'procSpan', ['rename' => '']);
grid('queueTask', 'procSpan', ['summaryText' => '']);
grid('queueTask', 'procSpan', ['title' => 'Duration']);
grid('queueTask', 'procSpan', ['tooltip' => '']);
grid('queueTask', 'props', ['rename' => '']);
grid('queueTask', 'props', ['summaryText' => '']);
grid('queueTask', 'props', ['title' => 'Properties']);
grid('queueTask', 'props', ['tooltip' => '']);
grid('queueTask', 'queue', ['rename' => '']);
grid('queueTask', 'queue', ['summaryText' => '']);
grid('queueTask', 'queue', ['title' => 'Processing']);
grid('queueTask', 'queue', ['tooltip' => '']);
grid('queueTask', 'queueSize', ['rename' => '']);
grid('queueTask', 'queueSize', ['summaryText' => '']);
grid('queueTask', 'queueSize', ['title' => 'Size']);
grid('queueTask', 'queueSize', ['tooltip' => '']);
grid('queueTask', 'queueState', ['rename' => '']);
grid('queueTask', 'queueState', ['summaryText' => '']);
grid('queueTask', 'queueState', ['title' => 'Status']);
grid('queueTask', 'queueState', ['tooltip' => '']);
grid('queueTask', 'stage', ['rename' => '']);
grid('queueTask', 'stage', ['summaryText' => '']);
grid('queueTask', 'stage', ['title' => 'Stage']);
grid('queueTask', 'stage', ['tooltip' => '']);
grid('queueTask', 'stages', ['rename' => '']);
grid('queueTask', 'stages', ['summaryText' => '']);
grid('queueTask', 'stages', ['title' => 'Steps']);
grid('queueTask', 'stages', ['tooltip' => '']);
grid('queueTask', 'state', ['rename' => '']);
grid('queueTask', 'state', ['summaryText' => '']);
grid('queueTask', 'state', ['title' => 'Status']);
grid('queueTask', 'state', ['tooltip' => '']);
grid('queueTask', 'title', ['rename' => '']);
grid('queueTask', 'title', ['summaryText' => '']);
grid('queueTask', 'title', ['title' => 'Task']);
grid('queueTask', 'title', ['tooltip' => '']);
grid('realtime', 'adminId', ['rename' => '']);
grid('realtime', 'adminId', ['summaryText' => '']);
grid('realtime', 'adminId', ['title' => 'User']);
grid('realtime', 'adminId', ['tooltip' => '']);
grid('realtime', 'entityId', ['rename' => '']);
grid('realtime', 'entityId', ['summaryText' => '']);
grid('realtime', 'entityId', ['title' => 'Entity']);
grid('realtime', 'entityId', ['tooltip' => '']);
grid('realtime', 'entries', ['rename' => '']);
grid('realtime', 'entries', ['summaryText' => '']);
grid('realtime', 'entries', ['title' => 'Records']);
grid('realtime', 'entries', ['tooltip' => '']);
grid('realtime', 'fields', ['rename' => '']);
grid('realtime', 'fields', ['summaryText' => '']);
grid('realtime', 'fields', ['title' => 'Fields']);
grid('realtime', 'fields', ['tooltip' => '']);
grid('realtime', 'langId', ['rename' => '']);
grid('realtime', 'langId', ['summaryText' => '']);
grid('realtime', 'langId', ['title' => 'Language']);
grid('realtime', 'langId', ['tooltip' => '']);
grid('realtime', 'roleId', ['rename' => '']);
grid('realtime', 'roleId', ['summaryText' => '']);
grid('realtime', 'roleId', ['title' => 'Role']);
grid('realtime', 'roleId', ['tooltip' => '']);
grid('realtime', 'sectionId', ['rename' => '']);
grid('realtime', 'sectionId', ['summaryText' => '']);
grid('realtime', 'sectionId', ['title' => 'Section']);
grid('realtime', 'sectionId', ['tooltip' => '']);
grid('realtime', 'spaceFrame', ['rename' => '']);
grid('realtime', 'spaceFrame', ['summaryText' => '']);
grid('realtime', 'spaceFrame', ['title' => 'Duration']);
grid('realtime', 'spaceFrame', ['tooltip' => '']);
grid('realtime', 'spaceSince', ['rename' => '']);
grid('realtime', 'spaceSince', ['summaryText' => '']);
grid('realtime', 'spaceSince', ['title' => 'Since']);
grid('realtime', 'spaceSince', ['tooltip' => '']);
grid('realtime', 'spaceUntil', ['rename' => '']);
grid('realtime', 'spaceUntil', ['summaryText' => '']);
grid('realtime', 'spaceUntil', ['title' => 'Until']);
grid('realtime', 'spaceUntil', ['tooltip' => '']);
grid('realtime', 'title', ['rename' => '']);
grid('realtime', 'title', ['summaryText' => '']);
grid('realtime', 'title', ['title' => 'Entry']);
grid('realtime', 'title', ['tooltip' => '']);
grid('realtime', 'token', ['rename' => '']);
grid('realtime', 'token', ['summaryText' => '']);
grid('realtime', 'token', ['title' => 'Token']);
grid('realtime', 'token', ['tooltip' => '']);
grid('realtime', 'type', ['rename' => '']);
grid('realtime', 'type', ['summaryText' => '']);
grid('realtime', 'type', ['title' => 'Type']);
grid('realtime', 'type', ['tooltip' => '']);
grid('resize', 'alias', ['rename' => '']);
grid('resize', 'alias', ['summaryText' => '']);
grid('resize', 'alias', ['title' => 'Alias']);
grid('resize', 'alias', ['tooltip' => '']);
grid('resize', 'height', ['rename' => '']);
grid('resize', 'height', ['summaryText' => '']);
grid('resize', 'height', ['title' => 'Height']);
grid('resize', 'height', ['tooltip' => '']);
grid('resize', 'mode', ['rename' => '']);
grid('resize', 'mode', ['summaryText' => '']);
grid('resize', 'mode', ['title' => 'Set exactly']);
grid('resize', 'mode', ['tooltip' => '']);
grid('resize', 'note', ['rename' => '']);
grid('resize', 'note', ['summaryText' => '']);
grid('resize', 'note', ['title' => 'Note']);
grid('resize', 'note', ['tooltip' => '']);
grid('resize', 'width', ['rename' => '']);
grid('resize', 'width', ['summaryText' => '']);
grid('resize', 'width', ['title' => 'Width']);
grid('resize', 'width', ['tooltip' => '']);
grid('role', 'alias', ['rename' => '']);
grid('role', 'alias', ['summaryText' => '']);
grid('role', 'alias', ['title' => 'Alias']);
grid('role', 'alias', ['tooltip' => '']);
grid('role', 'binding', ['rename' => '']);
grid('role', 'binding', ['summaryText' => '']);
grid('role', 'binding', ['title' => 'Binding to code']);
grid('role', 'binding', ['tooltip' => '']);
grid('role', 'dashboard', ['rename' => '']);
grid('role', 'dashboard', ['summaryText' => '']);
grid('role', 'dashboard', ['title' => 'Dashboard uri']);
grid('role', 'dashboard', ['tooltip' => '']);
grid('role', 'demo', ['rename' => '']);
grid('role', 'demo', ['summaryText' => '']);
grid('role', 'demo', ['title' => 'Demo-mode']);
grid('role', 'demo', ['tooltip' => '']);
grid('role', 'entityId', 'table', ['rename' => '']);
grid('role', 'entityId', 'table', ['summaryText' => '']);
grid('role', 'entityId', 'table', ['title' => 'Entity of users']);
grid('role', 'entityId', 'table', ['tooltip' => '']);
grid('role', 'entityId', ['rename' => '']);
grid('role', 'entityId', ['summaryText' => '']);
grid('role', 'entityId', ['title' => 'Entity of users']);
grid('role', 'entityId', ['tooltip' => '']);
grid('role', 'features', ['rename' => '']);
grid('role', 'features', ['summaryText' => '']);
grid('role', 'features', ['title' => 'Features']);
grid('role', 'features', ['tooltip' => '']);
grid('role', 'fraction', ['rename' => '']);
grid('role', 'fraction', ['summaryText' => '']);
grid('role', 'fraction', ['title' => 'Fraction']);
grid('role', 'fraction', ['tooltip' => '']);
grid('role', 'maxWindows', ['rename' => '']);
grid('role', 'maxWindows', ['summaryText' => '']);
grid('role', 'maxWindows', ['title' => 'Maximum number of windows']);
grid('role', 'maxWindows', ['tooltip' => '']);
grid('role', 'move', ['rename' => '']);
grid('role', 'move', ['summaryText' => '']);
grid('role', 'move', ['title' => 'Order']);
grid('role', 'move', ['tooltip' => '']);
grid('role', 'other', ['rename' => '']);
grid('role', 'other', ['summaryText' => '']);
grid('role', 'other', ['title' => 'Other']);
grid('role', 'other', ['tooltip' => '']);
grid('role', 'props', ['rename' => '']);
grid('role', 'props', ['summaryText' => '']);
grid('role', 'props', ['title' => 'Properties']);
grid('role', 'props', ['tooltip' => '']);
grid('role', 'title', ['rename' => '']);
grid('role', 'title', ['summaryText' => '']);
grid('role', 'title', ['title' => 'Title']);
grid('role', 'title', ['tooltip' => '']);
grid('role', 'toggle', ['rename' => '']);
grid('role', 'toggle', ['summaryText' => '']);
grid('role', 'toggle', ['title' => 'Toggle']);
grid('role', 'toggle', ['tooltip' => '']);
grid('sectionActions', 'access', ['rename' => '']);
grid('sectionActions', 'access', ['summaryText' => '']);
grid('sectionActions', 'access', ['title' => 'Access']);
grid('sectionActions', 'access', ['tooltip' => '']);
grid('sectionActions', 'actionId', 'alias', ['rename' => '']);
grid('sectionActions', 'actionId', 'alias', ['summaryText' => '']);
grid('sectionActions', 'actionId', 'alias', ['title' => 'Action']);
grid('sectionActions', 'actionId', 'alias', ['tooltip' => '']);
grid('sectionActions', 'actionId', 'hasView', ['rename' => '']);
grid('sectionActions', 'actionId', 'hasView', ['summaryText' => '']);
grid('sectionActions', 'actionId', 'hasView', ['title' => 'Action']);
grid('sectionActions', 'actionId', 'hasView', ['tooltip' => '']);
grid('sectionActions', 'actionId', 'icon', ['rename' => '']);
grid('sectionActions', 'actionId', 'icon', ['summaryText' => '']);
grid('sectionActions', 'actionId', 'icon', ['title' => 'Action']);
grid('sectionActions', 'actionId', 'icon', ['tooltip' => '']);
grid('sectionActions', 'actionId', 'multiSelect', ['rename' => 'Default batch-selection mode']);
grid('sectionActions', 'actionId', 'multiSelect', ['summaryText' => '']);
grid('sectionActions', 'actionId', 'multiSelect', ['title' => 'Action']);
grid('sectionActions', 'actionId', 'multiSelect', ['tooltip' => '']);
grid('sectionActions', 'actionId', ['rename' => '']);
grid('sectionActions', 'actionId', ['summaryText' => '']);
grid('sectionActions', 'actionId', ['title' => 'Action']);
grid('sectionActions', 'actionId', ['tooltip' => '']);
grid('sectionActions', 'features', ['rename' => '']);
grid('sectionActions', 'features', ['summaryText' => '']);
grid('sectionActions', 'features', ['title' => 'Features']);
grid('sectionActions', 'features', ['tooltip' => '']);
grid('sectionActions', 'filterOwner', ['rename' => '']);
grid('sectionActions', 'filterOwner', ['summaryText' => '']);
grid('sectionActions', 'filterOwner', ['title' => 'For owners - only their records']);
grid('sectionActions', 'filterOwner', ['tooltip' => '']);
grid('sectionActions', 'filterOwnerRoleIds', ['rename' => '']);
grid('sectionActions', 'filterOwnerRoleIds', ['summaryText' => '']);
grid('sectionActions', 'filterOwnerRoleIds', ['title' => 'For which certain owner roles']);
grid('sectionActions', 'filterOwnerRoleIds', ['tooltip' => '']);
grid('sectionActions', 'fitWindow', ['rename' => '']);
grid('sectionActions', 'fitWindow', ['summaryText' => '']);
grid('sectionActions', 'fitWindow', ['title' => 'Autosize window']);
grid('sectionActions', 'fitWindow', ['tooltip' => '']);
grid('sectionActions', 'l10n', ['rename' => '']);
grid('sectionActions', 'l10n', ['summaryText' => '']);
grid('sectionActions', 'l10n', ['title' => 'Localization']);
grid('sectionActions', 'l10n', ['tooltip' => '']);
grid('sectionActions', 'mode', ['rename' => '']);
grid('sectionActions', 'mode', ['summaryText' => '']);
grid('sectionActions', 'mode', ['title' => 'Batch']);
grid('sectionActions', 'mode', ['tooltip' => '']);
grid('sectionActions', 'move', ['rename' => '']);
grid('sectionActions', 'move', ['summaryText' => '']);
grid('sectionActions', 'move', ['title' => 'Order']);
grid('sectionActions', 'move', ['tooltip' => '']);
grid('sectionActions', 'multiSelect', ['rename' => '']);
grid('sectionActions', 'multiSelect', ['summaryText' => '']);
grid('sectionActions', 'multiSelect', ['title' => 'Override batch-selection mode']);
grid('sectionActions', 'multiSelect', ['tooltip' => '']);
grid('sectionActions', 'props', ['rename' => '']);
grid('sectionActions', 'props', ['summaryText' => '']);
grid('sectionActions', 'props', ['title' => 'Properties']);
grid('sectionActions', 'props', ['tooltip' => '']);
grid('sectionActions', 'rename', ['rename' => '']);
grid('sectionActions', 'rename', ['summaryText' => '']);
grid('sectionActions', 'rename', ['title' => 'Rename']);
grid('sectionActions', 'rename', ['tooltip' => '']);
grid('sectionActions', 'roleIds', ['rename' => '']);
grid('sectionActions', 'roleIds', ['summaryText' => '']);
grid('sectionActions', 'roleIds', ['title' => 'Roles']);
grid('sectionActions', 'roleIds', ['tooltip' => '']);
grid('sectionActions', 'south', ['rename' => '']);
grid('sectionActions', 'south', ['summaryText' => '']);
grid('sectionActions', 'south', ['title' => 'South panel display mode']);
grid('sectionActions', 'south', ['tooltip' => '']);
grid('sectionActions', 'toggle', ['rename' => '']);
grid('sectionActions', 'toggle', ['summaryText' => '']);
grid('sectionActions', 'toggle', ['title' => 'Toggle']);
grid('sectionActions', 'toggle', ['tooltip' => '']);
grid('sectionActions', 'view', ['rename' => '']);
grid('sectionActions', 'view', ['summaryText' => '']);
grid('sectionActions', 'view', ['title' => 'View']);
grid('sectionActions', 'view', ['tooltip' => '']);
grid('sectionActions', 'win', ['rename' => '']);
grid('sectionActions', 'win', ['summaryText' => '']);
grid('sectionActions', 'win', ['title' => 'Window']);
grid('sectionActions', 'win', ['tooltip' => '']);
grid('sections', 'alias', ['rename' => '']);
grid('sections', 'alias', ['summaryText' => '']);
grid('sections', 'alias', ['title' => 'Controller']);
grid('sections', 'alias', ['tooltip' => '']);
grid('sections', 'color', ['rename' => 'Color']);
grid('sections', 'color', ['summaryText' => '']);
grid('sections', 'color', ['title' => 'Row color']);
grid('sections', 'color', ['tooltip' => '']);
grid('sections', 'colorField', ['rename' => '']);
grid('sections', 'colorField', ['summaryText' => '']);
grid('sections', 'colorField', ['title' => 'Field']);
grid('sections', 'colorField', ['tooltip' => '']);
grid('sections', 'colorFurther', ['rename' => '']);
grid('sections', 'colorFurther', ['summaryText' => '']);
grid('sections', 'colorFurther', ['title' => 'Further field']);
grid('sections', 'colorFurther', ['tooltip' => '']);
grid('sections', 'data', ['rename' => '']);
grid('sections', 'data', ['summaryText' => '']);
grid('sections', 'data', ['title' => 'Data source']);
grid('sections', 'data', ['tooltip' => '']);
grid('sections', 'defaultSortDirection', ['rename' => '']);
grid('sections', 'defaultSortDirection', ['summaryText' => '']);
grid('sections', 'defaultSortDirection', ['title' => 'Sort direction']);
grid('sections', 'defaultSortDirection', ['tooltip' => '']);
grid('sections', 'defaultSortField', ['rename' => '']);
grid('sections', 'defaultSortField', ['summaryText' => '']);
grid('sections', 'defaultSortField', ['title' => 'Sort by']);
grid('sections', 'defaultSortField', ['tooltip' => '']);
grid('sections', 'disableAdd', ['rename' => '']);
grid('sections', 'disableAdd', ['summaryText' => '']);
grid('sections', 'disableAdd', ['title' => 'Prevent creation of new records']);
grid('sections', 'disableAdd', ['tooltip' => '']);
grid('sections', 'display', ['rename' => '']);
grid('sections', 'display', ['summaryText' => '']);
grid('sections', 'display', ['title' => 'Display']);
grid('sections', 'display', ['tooltip' => '']);
grid('sections', 'entityId', 'table', ['rename' => '']);
grid('sections', 'entityId', 'table', ['summaryText' => '']);
grid('sections', 'entityId', 'table', ['title' => 'Entity']);
grid('sections', 'entityId', 'table', ['tooltip' => '']);
grid('sections', 'entityId', ['rename' => '']);
grid('sections', 'entityId', ['summaryText' => '']);
grid('sections', 'entityId', ['title' => 'Entity']);
grid('sections', 'entityId', ['tooltip' => '']);
grid('sections', 'extends', ['rename' => 'Binding to code']);
grid('sections', 'extends', ['summaryText' => '']);
grid('sections', 'extends', ['title' => 'Parent classes']);
grid('sections', 'extends', ['tooltip' => '']);
grid('sections', 'extendsJs', ['rename' => '']);
grid('sections', 'extendsJs', ['summaryText' => '']);
grid('sections', 'extendsJs', ['title' => 'JS']);
grid('sections', 'extendsJs', ['tooltip' => '']);
grid('sections', 'extendsPhp', ['rename' => '']);
grid('sections', 'extendsPhp', ['summaryText' => '']);
grid('sections', 'extendsPhp', ['title' => 'PHP']);
grid('sections', 'extendsPhp', ['tooltip' => '']);
grid('sections', 'features', ['rename' => '']);
grid('sections', 'features', ['summaryText' => '']);
grid('sections', 'features', ['title' => 'Features']);
grid('sections', 'features', ['tooltip' => '']);
grid('sections', 'filter', ['rename' => '']);
grid('sections', 'filter', ['summaryText' => '']);
grid('sections', 'filter', ['title' => 'Filtering through SQL WHERE']);
grid('sections', 'filter', ['tooltip' => '']);
grid('sections', 'filterOwner', ['rename' => '']);
grid('sections', 'filterOwner', ['summaryText' => '']);
grid('sections', 'filterOwner', ['title' => 'For owners - only their records']);
grid('sections', 'filterOwner', ['tooltip' => '']);
grid('sections', 'fraction', ['rename' => '']);
grid('sections', 'fraction', ['summaryText' => '']);
grid('sections', 'fraction', ['title' => 'Fraction']);
grid('sections', 'fraction', ['tooltip' => '']);
grid('sections', 'grid', ['rename' => '']);
grid('sections', 'grid', ['summaryText' => '']);
grid('sections', 'grid', ['title' => 'Grid']);
grid('sections', 'grid', ['tooltip' => '']);
grid('sections', 'gridToggle', ['rename' => '']);
grid('sections', 'gridToggle', ['summaryText' => '']);
grid('sections', 'gridToggle', ['title' => 'Enable']);
grid('sections', 'gridToggle', ['tooltip' => '']);
grid('sections', 'groupBy', ['rename' => '']);
grid('sections', 'groupBy', ['summaryText' => '']);
grid('sections', 'groupBy', ['title' => 'Group by']);
grid('sections', 'groupBy', ['tooltip' => '']);
grid('sections', 'load', ['rename' => 'Loading']);
grid('sections', 'load', ['summaryText' => '']);
grid('sections', 'load', ['title' => 'Loading records']);
grid('sections', 'load', ['tooltip' => '']);
grid('sections', 'move', ['rename' => '']);
grid('sections', 'move', ['summaryText' => '']);
grid('sections', 'move', ['title' => 'Order']);
grid('sections', 'move', ['tooltip' => '']);
grid('sections', 'other', ['rename' => '']);
grid('sections', 'other', ['summaryText' => '']);
grid('sections', 'other', ['title' => 'Others']);
grid('sections', 'other', ['tooltip' => '']);
grid('sections', 'params', ['rename' => 'Properties']);
grid('sections', 'params', ['summaryText' => '']);
grid('sections', 'params', ['title' => 'Parameters']);
grid('sections', 'params', ['tooltip' => '']);
grid('sections', 'planToggle', ['rename' => 'Calendar']);
grid('sections', 'planToggle', ['summaryText' => '']);
grid('sections', 'planToggle', ['title' => 'Enable']);
grid('sections', 'planToggle', ['tooltip' => '']);
grid('sections', 'planTypes', ['rename' => 'Plan types']);
grid('sections', 'planTypes', ['summaryText' => '']);
grid('sections', 'planTypes', ['title' => 'Types']);
grid('sections', 'planTypes', ['tooltip' => '']);
grid('sections', 'rownumberer', ['rename' => '']);
grid('sections', 'rownumberer', ['summaryText' => '']);
grid('sections', 'rownumberer', ['title' => 'Enable records numbering']);
grid('sections', 'rownumberer', ['tooltip' => '']);
grid('sections', 'rowsOnPage', ['rename' => '']);
grid('sections', 'rowsOnPage', ['summaryText' => '']);
grid('sections', 'rowsOnPage', ['title' => 'Number of records per page']);
grid('sections', 'rowsOnPage', ['tooltip' => '']);
grid('sections', 'rowset', ['rename' => '']);
grid('sections', 'rowset', ['summaryText' => '']);
grid('sections', 'rowset', ['title' => 'Panels']);
grid('sections', 'rowset', ['tooltip' => '']);
grid('sections', 'rowsetDefault', ['rename' => '']);
grid('sections', 'rowsetDefault', ['summaryText' => '']);
grid('sections', 'rowsetDefault', ['title' => 'Default panel']);
grid('sections', 'rowsetDefault', ['tooltip' => '']);
grid('sections', 'rowsetSeparate', ['rename' => '']);
grid('sections', 'rowsetSeparate', ['summaryText' => '']);
grid('sections', 'rowsetSeparate', ['title' => 'Loading mode']);
grid('sections', 'rowsetSeparate', ['tooltip' => 'Data loading mode']);
grid('sections', 'showID', ['rename' => '']);
grid('sections', 'showID', ['summaryText' => '']);
grid('sections', 'showID', ['title' => 'Show ID column']);
grid('sections', 'showID', ['tooltip' => '']);
grid('sections', 'store', ['rename' => '']);
grid('sections', 'store', ['summaryText' => '']);
grid('sections', 'store', ['title' => 'Records']);
grid('sections', 'store', ['tooltip' => '']);
grid('sections', 'tileToggle', ['rename' => 'Gallery']);
grid('sections', 'tileToggle', ['summaryText' => '']);
grid('sections', 'tileToggle', ['title' => 'Enable']);
grid('sections', 'tileToggle', ['tooltip' => '']);
grid('sections', 'title', ['rename' => '']);
grid('sections', 'title', ['summaryText' => '']);
grid('sections', 'title', ['title' => 'Title']);
grid('sections', 'title', ['tooltip' => '']);
grid('sections', 'toggle', ['rename' => '']);
grid('sections', 'toggle', ['summaryText' => '']);
grid('sections', 'toggle', ['title' => 'Toggle']);
grid('sections', 'toggle', ['tooltip' => '']);
grid('sqlIndexes', 'alias', ['rename' => '']);
grid('sqlIndexes', 'alias', ['summaryText' => '']);
grid('sqlIndexes', 'alias', ['title' => 'Index name']);
grid('sqlIndexes', 'alias', ['tooltip' => '']);
grid('sqlIndexes', 'columns', ['rename' => '']);
grid('sqlIndexes', 'columns', ['summaryText' => '']);
grid('sqlIndexes', 'columns', ['title' => 'Covered fields']);
grid('sqlIndexes', 'columns', ['tooltip' => '']);
grid('sqlIndexes', 'type', ['rename' => '']);
grid('sqlIndexes', 'type', ['summaryText' => '']);
grid('sqlIndexes', 'type', ['title' => 'Index type']);
grid('sqlIndexes', 'type', ['tooltip' => '']);
grid('sqlIndexes', 'visibility', ['rename' => '']);
grid('sqlIndexes', 'visibility', ['summaryText' => '']);
grid('sqlIndexes', 'visibility', ['title' => 'Visibility']);
grid('sqlIndexes', 'visibility', ['tooltip' => '']);
grid('sqlIndexesAll', 'alias', ['rename' => '']);
grid('sqlIndexesAll', 'alias', ['summaryText' => '']);
grid('sqlIndexesAll', 'alias', ['title' => 'Index name']);
grid('sqlIndexesAll', 'alias', ['tooltip' => '']);
grid('sqlIndexesAll', 'columns', ['rename' => '']);
grid('sqlIndexesAll', 'columns', ['summaryText' => '']);
grid('sqlIndexesAll', 'columns', ['title' => 'Covered fields']);
grid('sqlIndexesAll', 'columns', ['tooltip' => '']);
grid('sqlIndexesAll', 'entityId', ['rename' => '']);
grid('sqlIndexesAll', 'entityId', ['summaryText' => '']);
grid('sqlIndexesAll', 'entityId', ['title' => 'Entity']);
grid('sqlIndexesAll', 'entityId', ['tooltip' => '']);
grid('sqlIndexesAll', 'type', ['rename' => '']);
grid('sqlIndexesAll', 'type', ['summaryText' => '']);
grid('sqlIndexesAll', 'type', ['title' => 'Index type']);
grid('sqlIndexesAll', 'type', ['tooltip' => '']);
grid('sqlIndexesAll', 'visibility', ['rename' => '']);
grid('sqlIndexesAll', 'visibility', ['summaryText' => '']);
grid('sqlIndexesAll', 'visibility', ['title' => 'Visibility']);
grid('sqlIndexesAll', 'visibility', ['tooltip' => '']);
notice('queueTask', 'done', ['title' => 'Queue completed']);
notice('queueTask', 'done', ['tooltip' => '']);
notice('queueTask', 'done', ['tplDecBody' => '']);
notice('queueTask', 'done', ['tplDecSubj' => '']);
notice('queueTask', 'done', ['tplEvtBody' => '']);
notice('queueTask', 'done', ['tplEvtSubj' => '']);
notice('queueTask', 'done', ['tplIncBody' => 'Queue task PID#<?=$this->row->procID?> is completed']);
notice('queueTask', 'done', ['tplIncSubj' => '']);
notice('queueTask', 'failed', ['title' => 'Queue failed']);
notice('queueTask', 'failed', ['tooltip' => '']);
notice('queueTask', 'failed', ['tplDecBody' => '']);
notice('queueTask', 'failed', ['tplDecSubj' => '']);
notice('queueTask', 'failed', ['tplEvtBody' => '']);
notice('queueTask', 'failed', ['tplEvtSubj' => '']);
notice('queueTask', 'failed', ['tplIncBody' => 'Queue task failed due to Google Cloud Translate API response: <?=$this->row->error?>']);
notice('queueTask', 'failed', ['tplIncSubj' => '']);
notice('queueTask', 'resumed', ['title' => 'Queue resumed']);
notice('queueTask', 'resumed', ['tooltip' => '']);
notice('queueTask', 'resumed', ['tplDecBody' => '']);
notice('queueTask', 'resumed', ['tplDecSubj' => '']);
notice('queueTask', 'resumed', ['tplEvtBody' => '']);
notice('queueTask', 'resumed', ['tplEvtSubj' => '']);
notice('queueTask', 'resumed', ['tplIncBody' => 'Queue task resumed with PID: <?=$this->row->procID?>']);
notice('queueTask', 'resumed', ['tplIncSubj' => '']);
notice('queueTask', 'started', ['title' => 'Queue started']);
notice('queueTask', 'started', ['tooltip' => '']);
notice('queueTask', 'started', ['tplDecBody' => '']);
notice('queueTask', 'started', ['tplDecSubj' => '']);
notice('queueTask', 'started', ['tplEvtBody' => '']);
notice('queueTask', 'started', ['tplEvtSubj' => '']);
notice('queueTask', 'started', ['tplIncBody' => 'Queue task started with PID: <?=$this->row->procID?>']);
notice('queueTask', 'started', ['tplIncSubj' => '']);
noticeGetter('queueTask', 'done', 'dev', ['title' => 'Developer']);
noticeGetter('queueTask', 'failed', 'dev', ['title' => 'Developer']);
noticeGetter('queueTask', 'resumed', 'dev', ['title' => 'Developer']);
noticeGetter('queueTask', 'started', 'dev', ['title' => 'Developer']);
role('dev', ['title' => 'Developer']);
section('actions', ['help' => '']);
section('actions', ['title' => 'Actions']);
section('admins', ['help' => '']);
section('admins', ['title' => 'Users']);
section('alteredFields', ['help' => '']);
section('alteredFields', ['title' => 'Adjusted fields']);
section('columnTypes', ['help' => '']);
section('columnTypes', ['title' => 'Columns']);
section('configuration', ['help' => '']);
section('configuration', ['title' => 'Configuration']);
section('consider', ['help' => '']);
section('consider', ['title' => 'Dependencies']);
section('controlElements', ['help' => '']);
section('controlElements', ['title' => 'Form elements']);
section('elementCfgField', ['help' => '']);
section('elementCfgField', ['title' => 'Possible params']);
section('elementCfgFieldEnumset', ['help' => '']);
section('elementCfgFieldEnumset', ['title' => 'Possible values']);
section('entities', ['help' => '']);
section('entities', ['title' => 'Entities']);
section('enumset', ['help' => '']);
section('enumset', ['title' => 'Enumerated values']);
section('fields', ['help' => '']);
section('fields', ['title' => 'Fields in structure']);
section('fieldsAll', ['help' => '']);
section('fieldsAll', ['title' => 'All fields']);
section('filter', ['help' => '']);
section('filter', ['title' => 'Filters']);
section('grid', ['help' => '']);
section('grid', ['title' => 'Grid columns']);
section('inQtySum', ['help' => '']);
section('inQtySum', ['title' => 'Count in Qtys/Sums']);
section('lang', ['help' => '']);
section('lang', ['title' => 'Languages']);
section('noticeGetters', ['help' => '']);
section('noticeGetters', ['title' => 'Recipients settings by roles']);
section('notices', ['help' => '']);
section('notices', ['title' => 'Notifications']);
section('params', ['help' => '']);
section('params', ['title' => 'Settings']);
section('paramsAll', ['help' => '']);
section('paramsAll', ['title' => 'All params']);
section('queueChunk', ['help' => '']);
section('queueChunk', ['title' => 'Queue chunks']);
section('queueItem', ['help' => '']);
section('queueItem', ['title' => 'Queue items']);
section('queueTask', ['help' => '']);
section('queueTask', ['title' => 'Queue tasks']);
section('realtime', ['help' => '']);
section('realtime', ['title' => 'Realtime']);
section('resize', ['help' => '']);
section('resize', ['title' => 'Resized copies']);
section('role', ['help' => '']);
section('role', ['title' => 'Roles']);
section('sectionActions', ['help' => '']);
section('sectionActions', ['title' => 'Actions']);
section('sections', ['help' => '']);
section('sections', ['title' => 'Sections']);
section('sqlIndexes', ['help' => '']);
section('sqlIndexes', ['title' => 'MySQL Indexes']);
section('sqlIndexesAll', ['help' => '']);
section('sqlIndexesAll', ['title' => 'All indexes']);
section2action('actions','delete', ['rename' => '']);
section2action('actions','delete', ['title' => 'Delete']);
section2action('actions','export', ['rename' => 'Export as PHP-code']);
section2action('actions','export', ['title' => 'Export']);
section2action('actions','form', ['rename' => '']);
section2action('actions','form', ['title' => 'Details']);
section2action('actions','index', ['rename' => '']);
section2action('actions','index', ['title' => 'List']);
section2action('actions','save', ['rename' => '']);
section2action('actions','save', ['title' => 'Save']);
section2action('actions','toggle', ['rename' => '']);
section2action('actions','toggle', ['title' => 'Toggle']);
section2action('admins','delete', ['rename' => '']);
section2action('admins','delete', ['title' => 'Delete']);
section2action('admins','export', ['rename' => '']);
section2action('admins','export', ['title' => 'Export']);
section2action('admins','form', ['rename' => '']);
section2action('admins','form', ['title' => 'Details']);
section2action('admins','index', ['rename' => '']);
section2action('admins','index', ['title' => 'List']);
section2action('admins','login', ['rename' => 'Sign in on behalf of this user']);
section2action('admins','login', ['title' => 'Authorization']);
section2action('admins','save', ['rename' => '']);
section2action('admins','save', ['title' => 'Save']);
section2action('admins','toggle', ['rename' => '']);
section2action('admins','toggle', ['title' => 'Toggle']);
section2action('alteredFields','delete', ['rename' => '']);
section2action('alteredFields','delete', ['title' => 'Delete']);
section2action('alteredFields','export', ['rename' => 'Export as PHP-code']);
section2action('alteredFields','export', ['title' => 'Export']);
section2action('alteredFields','form', ['rename' => '']);
section2action('alteredFields','form', ['title' => 'Details']);
section2action('alteredFields','index', ['rename' => '']);
section2action('alteredFields','index', ['title' => 'List']);
section2action('alteredFields','save', ['rename' => '']);
section2action('alteredFields','save', ['title' => 'Save']);
section2action('alteredFields','toggle', ['rename' => '']);
section2action('alteredFields','toggle', ['title' => 'Toggle']);
section2action('columnTypes','delete', ['rename' => '']);
section2action('columnTypes','delete', ['title' => 'Delete']);
section2action('columnTypes','export', ['rename' => '']);
section2action('columnTypes','export', ['title' => 'Export']);
section2action('columnTypes','form', ['rename' => '']);
section2action('columnTypes','form', ['title' => 'Details']);
section2action('columnTypes','index', ['rename' => '']);
section2action('columnTypes','index', ['title' => 'List']);
section2action('columnTypes','save', ['rename' => '']);
section2action('columnTypes','save', ['title' => 'Save']);
section2action('consider','delete', ['rename' => '']);
section2action('consider','delete', ['title' => 'Delete']);
section2action('consider','export', ['rename' => 'Export as PHP-code']);
section2action('consider','export', ['title' => 'Export']);
section2action('consider','form', ['rename' => '']);
section2action('consider','form', ['title' => 'Details']);
section2action('consider','index', ['rename' => '']);
section2action('consider','index', ['title' => 'List']);
section2action('consider','save', ['rename' => '']);
section2action('consider','save', ['title' => 'Save']);
section2action('controlElements','delete', ['rename' => '']);
section2action('controlElements','delete', ['title' => 'Delete']);
section2action('controlElements','export', ['rename' => '']);
section2action('controlElements','export', ['title' => 'Export']);
section2action('controlElements','form', ['rename' => '']);
section2action('controlElements','form', ['title' => 'Details']);
section2action('controlElements','index', ['rename' => '']);
section2action('controlElements','index', ['title' => 'List']);
section2action('controlElements','save', ['rename' => '']);
section2action('controlElements','save', ['title' => 'Save']);
section2action('elementCfgField','activate', ['rename' => 'Select mode']);
section2action('elementCfgField','activate', ['title' => 'Activate']);
section2action('elementCfgField','delete', ['rename' => '']);
section2action('elementCfgField','delete', ['title' => 'Delete']);
section2action('elementCfgField','down', ['rename' => '']);
section2action('elementCfgField','down', ['title' => 'Move down']);
section2action('elementCfgField','export', ['rename' => 'Export as PHP-code']);
section2action('elementCfgField','export', ['title' => 'Export']);
section2action('elementCfgField','form', ['rename' => '']);
section2action('elementCfgField','form', ['title' => 'Details']);
section2action('elementCfgField','index', ['rename' => '']);
section2action('elementCfgField','index', ['title' => 'List']);
section2action('elementCfgField','save', ['rename' => '']);
section2action('elementCfgField','save', ['title' => 'Save']);
section2action('elementCfgField','up', ['rename' => '']);
section2action('elementCfgField','up', ['title' => 'Move up']);
section2action('elementCfgFieldEnumset','delete', ['rename' => '']);
section2action('elementCfgFieldEnumset','delete', ['title' => 'Delete']);
section2action('elementCfgFieldEnumset','down', ['rename' => '']);
section2action('elementCfgFieldEnumset','down', ['title' => 'Move down']);
section2action('elementCfgFieldEnumset','export', ['rename' => 'Export as PHP-code']);
section2action('elementCfgFieldEnumset','export', ['title' => 'Export']);
section2action('elementCfgFieldEnumset','form', ['rename' => '']);
section2action('elementCfgFieldEnumset','form', ['title' => 'Details']);
section2action('elementCfgFieldEnumset','index', ['rename' => '']);
section2action('elementCfgFieldEnumset','index', ['title' => 'List']);
section2action('elementCfgFieldEnumset','save', ['rename' => '']);
section2action('elementCfgFieldEnumset','save', ['title' => 'Save']);
section2action('elementCfgFieldEnumset','up', ['rename' => '']);
section2action('elementCfgFieldEnumset','up', ['title' => 'Move up']);
section2action('entities','backup', ['rename' => '']);
section2action('entities','backup', ['title' => 'Backup']);
section2action('entities','delete', ['rename' => '']);
section2action('entities','delete', ['title' => 'Delete']);
section2action('entities','export', ['rename' => 'Export as PHP-code']);
section2action('entities','export', ['title' => 'Export']);
section2action('entities','form', ['rename' => '']);
section2action('entities','form', ['title' => 'Details']);
section2action('entities','index', ['rename' => '']);
section2action('entities','index', ['title' => 'List']);
section2action('entities','php', ['rename' => 'Create PHP-model files']);
section2action('entities','php', ['title' => 'PHP']);
section2action('entities','restore', ['rename' => '']);
section2action('entities','restore', ['title' => 'Restore']);
section2action('entities','save', ['rename' => '']);
section2action('entities','save', ['title' => 'Save']);
section2action('entities','toggle', ['rename' => 'Create Toggle-field']);
section2action('entities','toggle', ['title' => 'Toggle']);
section2action('entities','update', ['rename' => '']);
section2action('entities','update', ['title' => 'Update']);
section2action('enumset','delete', ['rename' => '']);
section2action('enumset','delete', ['title' => 'Delete']);
section2action('enumset','down', ['rename' => '']);
section2action('enumset','down', ['title' => 'Move down']);
section2action('enumset','export', ['rename' => 'Export as PHP-code']);
section2action('enumset','export', ['title' => 'Export']);
section2action('enumset','form', ['rename' => '']);
section2action('enumset','form', ['title' => 'Details']);
section2action('enumset','index', ['rename' => '']);
section2action('enumset','index', ['title' => 'List']);
section2action('enumset','save', ['rename' => '']);
section2action('enumset','save', ['title' => 'Save']);
section2action('enumset','up', ['rename' => '']);
section2action('enumset','up', ['title' => 'Move up']);
section2action('fields','activate', ['rename' => 'Select mode']);
section2action('fields','activate', ['title' => 'Activate']);
section2action('fields','delete', ['rename' => '']);
section2action('fields','delete', ['title' => 'Delete']);
section2action('fields','down', ['rename' => '']);
section2action('fields','down', ['title' => 'Move down']);
section2action('fields','export', ['rename' => 'Export as PHP-code']);
section2action('fields','export', ['title' => 'Export']);
section2action('fields','form', ['rename' => '']);
section2action('fields','form', ['title' => 'Details']);
section2action('fields','index', ['rename' => '']);
section2action('fields','index', ['title' => 'List']);
section2action('fields','save', ['rename' => '']);
section2action('fields','save', ['title' => 'Save']);
section2action('fields','up', ['rename' => '']);
section2action('fields','up', ['title' => 'Move up']);
section2action('fieldsAll','delete', ['rename' => '']);
section2action('fieldsAll','delete', ['title' => 'Delete']);
section2action('fieldsAll','form', ['rename' => '']);
section2action('fieldsAll','form', ['title' => 'Details']);
section2action('fieldsAll','index', ['rename' => '']);
section2action('fieldsAll','index', ['title' => 'List']);
section2action('fieldsAll','save', ['rename' => '']);
section2action('fieldsAll','save', ['title' => 'Save']);
section2action('filter','delete', ['rename' => '']);
section2action('filter','delete', ['title' => 'Delete']);
section2action('filter','down', ['rename' => '']);
section2action('filter','down', ['title' => 'Move down']);
section2action('filter','export', ['rename' => 'Export as PHP-code']);
section2action('filter','export', ['title' => 'Export']);
section2action('filter','form', ['rename' => '']);
section2action('filter','form', ['title' => 'Details']);
section2action('filter','index', ['rename' => '']);
section2action('filter','index', ['title' => 'List']);
section2action('filter','save', ['rename' => '']);
section2action('filter','save', ['title' => 'Save']);
section2action('filter','toggle', ['rename' => '']);
section2action('filter','toggle', ['title' => 'Toggle']);
section2action('filter','up', ['rename' => '']);
section2action('filter','up', ['title' => 'Move up']);
section2action('grid','delete', ['rename' => '']);
section2action('grid','delete', ['title' => 'Delete']);
section2action('grid','down', ['rename' => '']);
section2action('grid','down', ['title' => 'Move down']);
section2action('grid','export', ['rename' => 'Export as PHP-code']);
section2action('grid','export', ['title' => 'Export']);
section2action('grid','form', ['rename' => '']);
section2action('grid','form', ['title' => 'Details']);
section2action('grid','index', ['rename' => '']);
section2action('grid','index', ['title' => 'List']);
section2action('grid','save', ['rename' => '']);
section2action('grid','save', ['title' => 'Save']);
section2action('grid','toggle', ['rename' => '']);
section2action('grid','toggle', ['title' => 'Toggle']);
section2action('grid','up', ['rename' => '']);
section2action('grid','up', ['title' => 'Move up']);
section2action('inQtySum','delete', ['rename' => '']);
section2action('inQtySum','delete', ['title' => 'Delete']);
section2action('inQtySum','export', ['rename' => '']);
section2action('inQtySum','export', ['title' => 'Export']);
section2action('inQtySum','form', ['rename' => '']);
section2action('inQtySum','form', ['title' => 'Details']);
section2action('inQtySum','index', ['rename' => '']);
section2action('inQtySum','index', ['title' => 'List']);
section2action('inQtySum','save', ['rename' => '']);
section2action('inQtySum','save', ['title' => 'Save']);
section2action('inQtySum','toggle', ['rename' => '']);
section2action('inQtySum','toggle', ['title' => 'Toggle']);
section2action('lang','delete', ['rename' => '']);
section2action('lang','delete', ['title' => 'Delete']);
section2action('lang','dict', ['rename' => '']);
section2action('lang','dict', ['title' => 'Available languages']);
section2action('lang','down', ['rename' => '']);
section2action('lang','down', ['title' => 'Move down']);
section2action('lang','export', ['rename' => '']);
section2action('lang','export', ['title' => 'Export']);
section2action('lang','form', ['rename' => '']);
section2action('lang','form', ['title' => 'Details']);
section2action('lang','import', ['rename' => '']);
section2action('lang','import', ['title' => 'Import']);
section2action('lang','index', ['rename' => '']);
section2action('lang','index', ['title' => 'List']);
section2action('lang','save', ['rename' => '']);
section2action('lang','save', ['title' => 'Save']);
section2action('lang','up', ['rename' => '']);
section2action('lang','up', ['title' => 'Move up']);
section2action('lang','wordings', ['rename' => '']);
section2action('lang','wordings', ['title' => 'Wordings']);
section2action('noticeGetters','delete', ['rename' => '']);
section2action('noticeGetters','delete', ['title' => 'Delete']);
section2action('noticeGetters','form', ['rename' => '']);
section2action('noticeGetters','form', ['title' => 'Details']);
section2action('noticeGetters','index', ['rename' => '']);
section2action('noticeGetters','index', ['title' => 'List']);
section2action('noticeGetters','save', ['rename' => '']);
section2action('noticeGetters','save', ['title' => 'Save']);
section2action('notices','delete', ['rename' => '']);
section2action('notices','delete', ['title' => 'Delete']);
section2action('notices','export', ['rename' => '']);
section2action('notices','export', ['title' => 'Export']);
section2action('notices','form', ['rename' => '']);
section2action('notices','form', ['title' => 'Details']);
section2action('notices','index', ['rename' => '']);
section2action('notices','index', ['title' => 'List']);
section2action('notices','save', ['rename' => '']);
section2action('notices','save', ['title' => 'Save']);
section2action('notices','toggle', ['rename' => '']);
section2action('notices','toggle', ['title' => 'Toggle']);
section2action('params','delete', ['rename' => '']);
section2action('params','delete', ['title' => 'Delete']);
section2action('params','export', ['rename' => 'Export as PHP-code']);
section2action('params','export', ['title' => 'Export']);
section2action('params','form', ['rename' => '']);
section2action('params','form', ['title' => 'Details']);
section2action('params','index', ['rename' => '']);
section2action('params','index', ['title' => 'List']);
section2action('params','save', ['rename' => '']);
section2action('params','save', ['title' => 'Save']);
section2action('paramsAll','delete', ['rename' => '']);
section2action('paramsAll','delete', ['title' => 'Delete']);
section2action('paramsAll','export', ['rename' => '']);
section2action('paramsAll','export', ['title' => 'Export']);
section2action('paramsAll','form', ['rename' => '']);
section2action('paramsAll','form', ['title' => 'Details']);
section2action('paramsAll','index', ['rename' => '']);
section2action('paramsAll','index', ['title' => 'List']);
section2action('paramsAll','save', ['rename' => '']);
section2action('paramsAll','save', ['title' => 'Save']);
section2action('queueChunk','form', ['rename' => '']);
section2action('queueChunk','form', ['title' => 'Details']);
section2action('queueChunk','index', ['rename' => '']);
section2action('queueChunk','index', ['title' => 'List']);
section2action('queueItem','index', ['rename' => '']);
section2action('queueItem','index', ['title' => 'List']);
section2action('queueItem','save', ['rename' => '']);
section2action('queueItem','save', ['title' => 'Save']);
section2action('queueTask','delete', ['rename' => '']);
section2action('queueTask','delete', ['title' => 'Delete']);
section2action('queueTask','form', ['rename' => '']);
section2action('queueTask','form', ['title' => 'Details']);
section2action('queueTask','index', ['rename' => '']);
section2action('queueTask','index', ['title' => 'List']);
section2action('queueTask','run', ['rename' => '']);
section2action('queueTask','run', ['title' => 'Run']);
section2action('realtime','delete', ['rename' => '']);
section2action('realtime','delete', ['title' => 'Delete']);
section2action('realtime','index', ['rename' => '']);
section2action('realtime','index', ['title' => 'List']);
section2action('resize','delete', ['rename' => '']);
section2action('resize','delete', ['title' => 'Delete']);
section2action('resize','export', ['rename' => 'Export as PHP-code']);
section2action('resize','export', ['title' => 'Export']);
section2action('resize','form', ['rename' => '']);
section2action('resize','form', ['title' => 'Details']);
section2action('resize','index', ['rename' => '']);
section2action('resize','index', ['title' => 'List']);
section2action('resize','save', ['rename' => '']);
section2action('resize','save', ['title' => 'Save']);
section2action('role','delete', ['rename' => '']);
section2action('role','delete', ['title' => 'Delete']);
section2action('role','down', ['rename' => '']);
section2action('role','down', ['title' => 'Move down']);
section2action('role','export', ['rename' => '']);
section2action('role','export', ['title' => 'Export']);
section2action('role','form', ['rename' => '']);
section2action('role','form', ['title' => 'Details']);
section2action('role','index', ['rename' => '']);
section2action('role','index', ['title' => 'List']);
section2action('role','save', ['rename' => '']);
section2action('role','save', ['title' => 'Save']);
section2action('role','toggle', ['rename' => '']);
section2action('role','toggle', ['title' => 'Toggle']);
section2action('role','up', ['rename' => '']);
section2action('role','up', ['title' => 'Move up']);
section2action('sectionActions','delete', ['rename' => '']);
section2action('sectionActions','delete', ['title' => 'Delete']);
section2action('sectionActions','down', ['rename' => '']);
section2action('sectionActions','down', ['title' => 'Move down']);
section2action('sectionActions','export', ['rename' => 'Export as PHP-code']);
section2action('sectionActions','export', ['title' => 'Export']);
section2action('sectionActions','form', ['rename' => '']);
section2action('sectionActions','form', ['title' => 'Details']);
section2action('sectionActions','index', ['rename' => '']);
section2action('sectionActions','index', ['title' => 'List']);
section2action('sectionActions','save', ['rename' => '']);
section2action('sectionActions','save', ['title' => 'Save']);
section2action('sectionActions','toggle', ['rename' => '']);
section2action('sectionActions','toggle', ['title' => 'Toggle']);
section2action('sectionActions','up', ['rename' => '']);
section2action('sectionActions','up', ['title' => 'Move up']);
section2action('sections','copy', ['rename' => '']);
section2action('sections','copy', ['title' => 'Copy']);
section2action('sections','delete', ['rename' => '']);
section2action('sections','delete', ['title' => 'Delete']);
section2action('sections','down', ['rename' => '']);
section2action('sections','down', ['title' => 'Move down']);
section2action('sections','export', ['rename' => 'Export as PHP-code']);
section2action('sections','export', ['title' => 'Export']);
section2action('sections','form', ['rename' => '']);
section2action('sections','form', ['title' => 'Details']);
section2action('sections','index', ['rename' => '']);
section2action('sections','index', ['title' => 'List']);
section2action('sections','js', ['rename' => 'Create JS-controller file']);
section2action('sections','js', ['title' => 'JS']);
section2action('sections','php', ['rename' => 'Create PHP-controller file']);
section2action('sections','php', ['title' => 'PHP']);
section2action('sections','save', ['rename' => '']);
section2action('sections','save', ['title' => 'Save']);
section2action('sections','toggle', ['rename' => '']);
section2action('sections','toggle', ['title' => 'Toggle']);
section2action('sections','up', ['rename' => '']);
section2action('sections','up', ['title' => 'Move up']);
section2action('sqlIndexes','delete', ['rename' => '']);
section2action('sqlIndexes','delete', ['title' => 'Delete']);
section2action('sqlIndexes','export', ['rename' => '']);
section2action('sqlIndexes','export', ['title' => 'Export']);
section2action('sqlIndexes','form', ['rename' => '']);
section2action('sqlIndexes','form', ['title' => 'Details']);
section2action('sqlIndexes','index', ['rename' => '']);
section2action('sqlIndexes','index', ['title' => 'List']);
section2action('sqlIndexes','save', ['rename' => '']);
section2action('sqlIndexes','save', ['title' => 'Save']);
section2action('sqlIndexesAll','delete', ['rename' => '']);
section2action('sqlIndexesAll','delete', ['title' => 'Delete']);
section2action('sqlIndexesAll','export', ['rename' => '']);
section2action('sqlIndexesAll','export', ['title' => 'Export']);
section2action('sqlIndexesAll','form', ['rename' => '']);
section2action('sqlIndexesAll','form', ['title' => 'Details']);
section2action('sqlIndexesAll','index', ['rename' => '']);
section2action('sqlIndexesAll','index', ['title' => 'List']);
section2action('sqlIndexesAll','save', ['rename' => '']);
section2action('sqlIndexesAll','save', ['title' => 'Save']);
